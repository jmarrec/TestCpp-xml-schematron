<?xml version="1.0" standalone="yes"?>
<axsl:stylesheet xmlns:axsl="http://www.w3.org/1999/XSL/Transform" xmlns:sch="http://www.ascc.net/xml/schematron" xmlns:iso="http://purl.oclc.org/dsdl/schematron" xmlns:h="http://hpxmlonline.com/2019/10" version="1.0"><!--Implementers: please note that overriding process-prolog or process-root is 
    the preferred method for meta-stylesheets to use where possible. -->
<axsl:param name="archiveDirParameter"/><axsl:param name="archiveNameParameter"/><axsl:param name="fileNameParameter"/><axsl:param name="fileDirParameter"/>

<!--PHASES-->


<!--PROLOG-->
<axsl:output xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" xmlns:svrl="http://purl.oclc.org/dsdl/svrl" method="xml" omit-xml-declaration="no" standalone="yes" indent="yes"/>

<!--KEYS-->


<!--DEFAULT RULES-->


<!--MODE: SCHEMATRON-SELECT-FULL-PATH-->
<!--This mode can be used to generate an ugly though full XPath for locators-->
<axsl:template match="*" mode="schematron-select-full-path"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:template>

<!--MODE: SCHEMATRON-FULL-PATH-->
<!--This mode can be used to generate an ugly though full XPath for locators-->
<axsl:template match="*" mode="schematron-get-full-path"><axsl:apply-templates select="parent::*" mode="schematron-get-full-path"/><axsl:text>/</axsl:text><axsl:choose><axsl:when test="namespace-uri()=''"><axsl:value-of select="name()"/><axsl:variable name="p_1" select="1+    count(preceding-sibling::*[name()=name(current())])"/><axsl:if test="$p_1&gt;1 or following-sibling::*[name()=name(current())]">[<axsl:value-of select="$p_1"/>]</axsl:if></axsl:when><axsl:otherwise><axsl:text>*[local-name()='</axsl:text><axsl:value-of select="local-name()"/><axsl:text>' and namespace-uri()='</axsl:text><axsl:value-of select="namespace-uri()"/><axsl:text>']</axsl:text><axsl:variable name="p_2" select="1+   count(preceding-sibling::*[local-name()=local-name(current())])"/><axsl:if test="$p_2&gt;1 or following-sibling::*[local-name()=local-name(current())]">[<axsl:value-of select="$p_2"/>]</axsl:if></axsl:otherwise></axsl:choose></axsl:template><axsl:template match="@*" mode="schematron-get-full-path"><axsl:text>/</axsl:text><axsl:choose><axsl:when test="namespace-uri()=''">@<axsl:value-of select="name()"/></axsl:when><axsl:otherwise><axsl:text>@*[local-name()='</axsl:text><axsl:value-of select="local-name()"/><axsl:text>' and namespace-uri()='</axsl:text><axsl:value-of select="namespace-uri()"/><axsl:text>']</axsl:text></axsl:otherwise></axsl:choose></axsl:template>

<!--MODE: SCHEMATRON-FULL-PATH-2-->
<!--This mode can be used to generate prefixed XPath for humans-->
<axsl:template match="node() | @*" mode="schematron-get-full-path-2"><axsl:for-each select="ancestor-or-self::*"><axsl:text>/</axsl:text><axsl:value-of select="name(.)"/><axsl:if test="preceding-sibling::*[name(.)=name(current())]"><axsl:text>[</axsl:text><axsl:value-of select="count(preceding-sibling::*[name(.)=name(current())])+1"/><axsl:text>]</axsl:text></axsl:if></axsl:for-each><axsl:if test="not(self::*)"><axsl:text/>/@<axsl:value-of select="name(.)"/></axsl:if></axsl:template>

<!--MODE: GENERATE-ID-FROM-PATH -->
<axsl:template match="/" mode="generate-id-from-path"/><axsl:template match="text()" mode="generate-id-from-path"><axsl:apply-templates select="parent::*" mode="generate-id-from-path"/><axsl:value-of select="concat('.text-', 1+count(preceding-sibling::text()), '-')"/></axsl:template><axsl:template match="comment()" mode="generate-id-from-path"><axsl:apply-templates select="parent::*" mode="generate-id-from-path"/><axsl:value-of select="concat('.comment-', 1+count(preceding-sibling::comment()), '-')"/></axsl:template><axsl:template match="processing-instruction()" mode="generate-id-from-path"><axsl:apply-templates select="parent::*" mode="generate-id-from-path"/><axsl:value-of select="concat('.processing-instruction-', 1+count(preceding-sibling::processing-instruction()), '-')"/></axsl:template><axsl:template match="@*" mode="generate-id-from-path"><axsl:apply-templates select="parent::*" mode="generate-id-from-path"/><axsl:value-of select="concat('.@', name())"/></axsl:template><axsl:template match="*" mode="generate-id-from-path" priority="-0.5"><axsl:apply-templates select="parent::*" mode="generate-id-from-path"/><axsl:text>.</axsl:text><axsl:value-of select="concat('.',name(),'-',1+count(preceding-sibling::*[name()=name(current())]),'-')"/></axsl:template><!--MODE: SCHEMATRON-FULL-PATH-3-->
<!--This mode can be used to generate prefixed XPath for humans 
	(Top-level element has index)-->
<axsl:template match="node() | @*" mode="schematron-get-full-path-3"><axsl:for-each select="ancestor-or-self::*"><axsl:text>/</axsl:text><axsl:value-of select="name(.)"/><axsl:if test="parent::*"><axsl:text>[</axsl:text><axsl:value-of select="count(preceding-sibling::*[name(.)=name(current())])+1"/><axsl:text>]</axsl:text></axsl:if></axsl:for-each><axsl:if test="not(self::*)"><axsl:text/>/@<axsl:value-of select="name(.)"/></axsl:if></axsl:template>

<!--MODE: GENERATE-ID-2 -->
<axsl:template match="/" mode="generate-id-2">U</axsl:template><axsl:template match="*" mode="generate-id-2" priority="2"><axsl:text>U</axsl:text><axsl:number level="multiple" count="*"/></axsl:template><axsl:template match="node()" mode="generate-id-2"><axsl:text>U.</axsl:text><axsl:number level="multiple" count="*"/><axsl:text>n</axsl:text><axsl:number count="node()"/></axsl:template><axsl:template match="@*" mode="generate-id-2"><axsl:text>U.</axsl:text><axsl:number level="multiple" count="*"/><axsl:text>_</axsl:text><axsl:value-of select="string-length(local-name(.))"/><axsl:text>_</axsl:text><axsl:value-of select="translate(name(),':','.')"/></axsl:template><!--Strip characters--><axsl:template match="text()" priority="-1"/>

<!--SCHEMA METADATA-->
<axsl:template match="/"><svrl:schematron-output xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" title="HPXML Schematron Validator: EnergyPlus Simulation" schemaVersion=""><axsl:comment><axsl:value-of select="$archiveDirParameter"/>   
		 <axsl:value-of select="$archiveNameParameter"/>  
		 <axsl:value-of select="$fileNameParameter"/>  
		 <axsl:value-of select="$fileDirParameter"/></axsl:comment><svrl:ns-prefix-in-attribute-values uri="http://hpxmlonline.com/2019/10" prefix="h"/><svrl:active-pattern><axsl:attribute name="name">[Root]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M2"/><svrl:active-pattern><axsl:attribute name="name">[Building]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M3"/><svrl:active-pattern><axsl:attribute name="name">[SimulationControl]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M4"/><svrl:active-pattern><axsl:attribute name="name">[DaylightSaving]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M5"/><svrl:active-pattern><axsl:attribute name="name">[HVACSizingControl]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M6"/><svrl:active-pattern><axsl:attribute name="name">[EmissionsScenario]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M7"/><svrl:active-pattern><axsl:attribute name="name">[EmissionsFactor=Electricity]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M8"/><svrl:active-pattern><axsl:attribute name="name">[EmissionsFactor=ElectricitySchedule]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M9"/><svrl:active-pattern><axsl:attribute name="name">[EmissionsFactor=Fuel]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M10"/><svrl:active-pattern><axsl:attribute name="name">[BuildingSite]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M11"/><svrl:active-pattern><axsl:attribute name="name">[BuildingDetails]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M12"/><svrl:active-pattern><axsl:attribute name="name">[Site]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M13"/><svrl:active-pattern><axsl:attribute name="name">[Neighbors]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M14"/><svrl:active-pattern><axsl:attribute name="name">[NeighborBuilding]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M15"/><svrl:active-pattern><axsl:attribute name="name">[BuildingOccupancy]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M16"/><svrl:active-pattern><axsl:attribute name="name">[OccupancyCalculationType=Operational]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M17"/><svrl:active-pattern><axsl:attribute name="name">[BuildingConstruction]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M18"/><svrl:active-pattern><axsl:attribute name="name">[ClimateZoneIECC]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M19"/><svrl:active-pattern><axsl:attribute name="name">[WeatherStation]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M20"/><svrl:active-pattern><axsl:attribute name="name">[AirInfiltrationUnits=ACHorCFM]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M21"/><svrl:active-pattern><axsl:attribute name="name">[AirInfiltrationUnits=ACHnatural]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M22"/><svrl:active-pattern><axsl:attribute name="name">[Roof]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M23"/><svrl:active-pattern><axsl:attribute name="name">[RoofType=AdjacentToVentedAttic]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M24"/><svrl:active-pattern><axsl:attribute name="name">[RadiantBarrier]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M25"/><svrl:active-pattern><axsl:attribute name="name">[RimJoist]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M26"/><svrl:active-pattern><axsl:attribute name="name">[Wall]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M27"/><svrl:active-pattern><axsl:attribute name="name">[FoundationWall]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M28"/><svrl:active-pattern><axsl:attribute name="name">[FoundationWallType=AdjacentToVentedCrawl]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M29"/><svrl:active-pattern><axsl:attribute name="name">[FoundationWallInsulationLayer]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M30"/><svrl:active-pattern><axsl:attribute name="name">[FrameFloor]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M31"/><svrl:active-pattern><axsl:attribute name="name">[FrameFloorType=AdjacentToOther]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M32"/><svrl:active-pattern><axsl:attribute name="name">[Slab]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M33"/><svrl:active-pattern><axsl:attribute name="name">[Window]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M34"/><svrl:active-pattern><axsl:attribute name="name">[Window=PhysicalProperties]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M35"/><svrl:active-pattern><axsl:attribute name="name">[Window=MetalFrame]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M36"/><svrl:active-pattern><axsl:attribute name="name">[WindowStorm]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M37"/><svrl:active-pattern><axsl:attribute name="name">[WindowOverhangs]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M38"/><svrl:active-pattern><axsl:attribute name="name">[WindowOverhangs=Present]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M39"/><svrl:active-pattern><axsl:attribute name="name">[Skylight]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M40"/><svrl:active-pattern><axsl:attribute name="name">[Skylight=PhysicalProperties]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M41"/><svrl:active-pattern><axsl:attribute name="name">[Skylight=MetalFrame]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M42"/><svrl:active-pattern><axsl:attribute name="name">[SkylightStorm]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M43"/><svrl:active-pattern><axsl:attribute name="name">[Door]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M44"/><svrl:active-pattern><axsl:attribute name="name">[PartitionWallMass]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M45"/><svrl:active-pattern><axsl:attribute name="name">[FurnitureMass]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M46"/><svrl:active-pattern><axsl:attribute name="name">[HeatingSystem]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M47"/><svrl:active-pattern><axsl:attribute name="name">[HeatingSystemType=Resistance]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M48"/><svrl:active-pattern><axsl:attribute name="name">[HeatingSystemType=PTACHeating]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M49"/><svrl:active-pattern><axsl:attribute name="name">[HeatingSystemType=Furnace]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M50"/><svrl:active-pattern><axsl:attribute name="name">[HeatingSystemType=WallFurnace]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M51"/><svrl:active-pattern><axsl:attribute name="name">[HeatingSystemType=FloorFurnace]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M52"/><svrl:active-pattern><axsl:attribute name="name">[HeatingSystemType=Boiler]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M53"/><svrl:active-pattern><axsl:attribute name="name">[HeatingSystemType=InUnitBoiler]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M54"/><svrl:active-pattern><axsl:attribute name="name">[HeatingSystemType=SharedBoiler]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M55"/><svrl:active-pattern><axsl:attribute name="name">[HeatingSystemType=SharedBoilerWthFanCoil]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M56"/><svrl:active-pattern><axsl:attribute name="name">[HeatingSystemType=SharedBoilerWithWLHP]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M57"/><svrl:active-pattern><axsl:attribute name="name">[HeatingSystemType=Stove]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M58"/><svrl:active-pattern><axsl:attribute name="name">[HeatingSystemType=PortableHeater]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M59"/><svrl:active-pattern><axsl:attribute name="name">[HeatingSystemType=FixedHeater]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M60"/><svrl:active-pattern><axsl:attribute name="name">[HeatingSystemType=Fireplace]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M61"/><svrl:active-pattern><axsl:attribute name="name">[CoolingSystem]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M62"/><svrl:active-pattern><axsl:attribute name="name">[CoolingSystemType=CentralAC]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M63"/><svrl:active-pattern><axsl:attribute name="name">[CoolingSystemType=RoomAC]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M64"/><svrl:active-pattern><axsl:attribute name="name">[CoolingSystemType=PTAC]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M65"/><svrl:active-pattern><axsl:attribute name="name">[CoolingSystemType=EvapCooler]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M66"/><svrl:active-pattern><axsl:attribute name="name">[CoolingSystemType=MiniSplitAC]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M67"/><svrl:active-pattern><axsl:attribute name="name">[CoolingSystemType=SharedChiller]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M68"/><svrl:active-pattern><axsl:attribute name="name">[CoolingSystemType=SharedChillerWithFanCoil]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M69"/><svrl:active-pattern><axsl:attribute name="name">[CoolingSystemType=SharedChillerWithWLHP]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M70"/><svrl:active-pattern><axsl:attribute name="name">[CoolingSystemType=SharedCoolingTowerWLHP]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M71"/><svrl:active-pattern><axsl:attribute name="name">[HeatPump]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M72"/><svrl:active-pattern><axsl:attribute name="name">[HeatPumpType=AirSource]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M73"/><svrl:active-pattern><axsl:attribute name="name">[HeatPumpType=MiniSplit]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M74"/><svrl:active-pattern><axsl:attribute name="name">[HeatPumpType=GroundSource]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M75"/><svrl:active-pattern><axsl:attribute name="name">[HeatPumpType=GroundSourceWithSharedLoop]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M76"/><svrl:active-pattern><axsl:attribute name="name">[HeatPumpType=WaterLoop]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M77"/><svrl:active-pattern><axsl:attribute name="name">[HeatPumpType=PTHP]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M78"/><svrl:active-pattern><axsl:attribute name="name">[HeatPumpBackup=Integrated]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M79"/><svrl:active-pattern><axsl:attribute name="name">[HeatPumpBackup=Separate]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M80"/><svrl:active-pattern><axsl:attribute name="name">[HVACControl=Heating]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M81"/><svrl:active-pattern><axsl:attribute name="name">[HVACControl=HeatingSetback]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M82"/><svrl:active-pattern><axsl:attribute name="name">[HVACControl=HeatingSeason]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M83"/><svrl:active-pattern><axsl:attribute name="name">[HVACControl=Cooling]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M84"/><svrl:active-pattern><axsl:attribute name="name">[HVACControl=CoolingSetup]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M85"/><svrl:active-pattern><axsl:attribute name="name">[HVACControl=CoolingSeason]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M86"/><svrl:active-pattern><axsl:attribute name="name">[HVACDistribution]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M87"/><svrl:active-pattern><axsl:attribute name="name">[HVACDistributionType=Air]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M88"/><svrl:active-pattern><axsl:attribute name="name">[AirDistributionType=RegularVelocityOrGravity]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M89"/><svrl:active-pattern><axsl:attribute name="name">[AirDistributionType=FanCoil]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M90"/><svrl:active-pattern><axsl:attribute name="name">[DuctLeakage=CFM]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M91"/><svrl:active-pattern><axsl:attribute name="name">[DuctLeakage=Percent]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M92"/><svrl:active-pattern><axsl:attribute name="name">[HVACDistributionType=Hydronic]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M93"/><svrl:active-pattern><axsl:attribute name="name">[HVACDistributionType=DSE]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M94"/><svrl:active-pattern><axsl:attribute name="name">[HVACDuct]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M95"/><svrl:active-pattern><axsl:attribute name="name">[HVACDuct=WithLocation]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M96"/><svrl:active-pattern><axsl:attribute name="name">[HVACDuct=WithoutLocation]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M97"/><svrl:active-pattern><axsl:attribute name="name">[HVACDuct=SurfaceAreaDefaulted]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M98"/><svrl:active-pattern><axsl:attribute name="name">[VentilationFan]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M99"/><svrl:active-pattern><axsl:attribute name="name">[MechanicalVentilation]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M100"/><svrl:active-pattern><axsl:attribute name="name">[MechanicalVentilationType=HRV]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M101"/><svrl:active-pattern><axsl:attribute name="name">[MechanicalVentilationType=ERV]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M102"/><svrl:active-pattern><axsl:attribute name="name">[MechanicalVentilationType=CFIS]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M103"/><svrl:active-pattern><axsl:attribute name="name">[MechanicalVentilationType=Shared]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M104"/><svrl:active-pattern><axsl:attribute name="name">[MechanicalVentilationType=SharedWithPreHeating]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M105"/><svrl:active-pattern><axsl:attribute name="name">[MechanicalVentilationType=SharedWithPreCooling]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M106"/><svrl:active-pattern><axsl:attribute name="name">[LocalVentilation]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M107"/><svrl:active-pattern><axsl:attribute name="name">[WholeHouseFan]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M108"/><svrl:active-pattern><axsl:attribute name="name">[GarageVentilation]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M109"/><svrl:active-pattern><axsl:attribute name="name">[WaterHeatingSystem]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M110"/><svrl:active-pattern><axsl:attribute name="name">[WaterHeatingSystemType=Shared]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M111"/><svrl:active-pattern><axsl:attribute name="name">[WaterHeatingSystemType=Tank]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M112"/><svrl:active-pattern><axsl:attribute name="name">[WaterHeatingSystemType=Tankless]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M113"/><svrl:active-pattern><axsl:attribute name="name">[WaterHeatingSystemType=HeatPump]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M114"/><svrl:active-pattern><axsl:attribute name="name">[WaterHeatingSystemType=CombiIndirect]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M115"/><svrl:active-pattern><axsl:attribute name="name">[WaterHeatingSystemType=CombiTanklessCoil]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M116"/><svrl:active-pattern><axsl:attribute name="name">[Desuperheater]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M117"/><svrl:active-pattern><axsl:attribute name="name">[HotWaterDistribution]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M118"/><svrl:active-pattern><axsl:attribute name="name">[HotWaterDistributionType=Standard]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M119"/><svrl:active-pattern><axsl:attribute name="name">[HotWaterDistributionType=Recirculation]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M120"/><svrl:active-pattern><axsl:attribute name="name">[HotWaterDistributionType=SharedRecirculation]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M121"/><svrl:active-pattern><axsl:attribute name="name">[DrainWaterHeatRecovery]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M122"/><svrl:active-pattern><axsl:attribute name="name">[WaterFixture]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M123"/><svrl:active-pattern><axsl:attribute name="name">[SolarThermalSystem]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M124"/><svrl:active-pattern><axsl:attribute name="name">[SolarThermalSystemType=Detailed]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M125"/><svrl:active-pattern><axsl:attribute name="name">[SolarThermalSystemType=Simple]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M126"/><svrl:active-pattern><axsl:attribute name="name">[PVSystem]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M127"/><svrl:active-pattern><axsl:attribute name="name">[PVSystemType=Shared]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M128"/><svrl:active-pattern><axsl:attribute name="name">[Battery]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M129"/><svrl:active-pattern><axsl:attribute name="name">[Generator]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M130"/><svrl:active-pattern><axsl:attribute name="name">[GeneratorType=Shared]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M131"/><svrl:active-pattern><axsl:attribute name="name">[ClothesWasher]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M132"/><svrl:active-pattern><axsl:attribute name="name">[ClothesWasherType=Detailed]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M133"/><svrl:active-pattern><axsl:attribute name="name">[ClothesWasherType=Shared]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M134"/><svrl:active-pattern><axsl:attribute name="name">[ClothesDryer]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M135"/><svrl:active-pattern><axsl:attribute name="name">[ClothesDryerType=Shared]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M136"/><svrl:active-pattern><axsl:attribute name="name">[ClothesDryerType=Vented]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M137"/><svrl:active-pattern><axsl:attribute name="name">[Dishwasher]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M138"/><svrl:active-pattern><axsl:attribute name="name">[DishwasherType=Detailed]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M139"/><svrl:active-pattern><axsl:attribute name="name">[DishwasherType=Shared]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M140"/><svrl:active-pattern><axsl:attribute name="name">[Refrigerator]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M141"/><svrl:active-pattern><axsl:attribute name="name">[Freezer]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M142"/><svrl:active-pattern><axsl:attribute name="name">[Dehumidifier]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M143"/><svrl:active-pattern><axsl:attribute name="name">[CookingRange]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M144"/><svrl:active-pattern><axsl:attribute name="name">[Oven]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M145"/><svrl:active-pattern><axsl:attribute name="name">[Lighting]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M146"/><svrl:active-pattern><axsl:attribute name="name">[LightingGroup]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M147"/><svrl:active-pattern><axsl:attribute name="name">[ExteriorHolidayLighting]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M148"/><svrl:active-pattern><axsl:attribute name="name">[CeilingFan]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M149"/><svrl:active-pattern><axsl:attribute name="name">[Pool]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M150"/><svrl:active-pattern><axsl:attribute name="name">[PoolPump]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M151"/><svrl:active-pattern><axsl:attribute name="name">[PoolHeater]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M152"/><svrl:active-pattern><axsl:attribute name="name">[HotTub]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M153"/><svrl:active-pattern><axsl:attribute name="name">[HotTubPump]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M154"/><svrl:active-pattern><axsl:attribute name="name">[HotTubHeater]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M155"/><svrl:active-pattern><axsl:attribute name="name">[PlugLoad]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M156"/><svrl:active-pattern><axsl:attribute name="name">[FuelLoad]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M157"/><svrl:active-pattern><axsl:attribute name="name">[AdjacentSurfaces=ConditionedSpace]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M158"/><svrl:active-pattern><axsl:attribute name="name">[AdjacentSurfaces=ConditionedBasement]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M159"/><svrl:active-pattern><axsl:attribute name="name">[AdjacentSurfaces=UnconditionedBasement]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M160"/><svrl:active-pattern><axsl:attribute name="name">[AdjacentSurfaces=VentedCrawlspace]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M161"/><svrl:active-pattern><axsl:attribute name="name">[AdjacentSurfaces=UnventedCrawlspace]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M162"/><svrl:active-pattern><axsl:attribute name="name">[AdjacentSurfaces=ConditionedCrawlspace]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M163"/><svrl:active-pattern><axsl:attribute name="name">[AdjacentSurfaces=Garage]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M164"/><svrl:active-pattern><axsl:attribute name="name">[AdjacentSurfaces=VentedAttic]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M165"/><svrl:active-pattern><axsl:attribute name="name">[AdjacentSurfaces=UnventedAttic]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M166"/><svrl:active-pattern><axsl:attribute name="name">[LocationCheck=ConditionedBasement]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M167"/><svrl:active-pattern><axsl:attribute name="name">[LocationCheck=UnconditionedBasement]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M168"/><svrl:active-pattern><axsl:attribute name="name">[LocationCheck=VentedCrawlspace]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M169"/><svrl:active-pattern><axsl:attribute name="name">[LocationCheck=UnventedCrawlspace]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M170"/><svrl:active-pattern><axsl:attribute name="name">[LocationCheck=ConditionedCrawlspace]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M171"/><svrl:active-pattern><axsl:attribute name="name">[LocationCheck=Garage]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M172"/><svrl:active-pattern><axsl:attribute name="name">[LocationCheck=VentedAttic]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M173"/><svrl:active-pattern><axsl:attribute name="name">[LocationCheck=UnventedAttic]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M174"/><svrl:active-pattern><axsl:attribute name="name">[BuildingTypeCheck=OtherHousingUnit]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M175"/><svrl:active-pattern><axsl:attribute name="name">[BuildingTypeCheck=OtherHeatedSpace]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M176"/><svrl:active-pattern><axsl:attribute name="name">[BuildingTypeCheck=OtherMultifamilyBufferSpace]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M177"/><svrl:active-pattern><axsl:attribute name="name">[BuildingTypeCheck=OtherNonFreezingSpace]</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M178"/></svrl:schematron-output></axsl:template>

<!--SCHEMATRON PATTERNS-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">HPXML Schematron Validator: EnergyPlus Simulation</svrl:text>

<!--PATTERN [Root]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[Root]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML" priority="1000" mode="M2"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:SoftwareInfo/h:extension/h:OccupancyCalculationType[text()=&quot;asset&quot; or text()=&quot;operational&quot;]) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:SoftwareInfo/h:extension/h:OccupancyCalculationType[text()=&quot;asset&quot; or text()=&quot;operational&quot;]) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: SoftwareInfo/extension/OccupancyCalculationType[text()="asset" or text()="operational"]</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:SoftwareInfo/h:extension/h:SimulationControl) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:SoftwareInfo/h:extension/h:SimulationControl) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: SoftwareInfo/extension/SimulationControl</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:SoftwareInfo/h:extension/h:HVACSizingControl) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:SoftwareInfo/h:extension/h:HVACSizingControl) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: SoftwareInfo/extension/HVACSizingControl</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:SoftwareInfo/h:extension/h:SchedulesFilePath) &gt;= 0"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:SoftwareInfo/h:extension/h:SchedulesFilePath) &gt;= 0"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or more element(s) for xpath: SoftwareInfo/extension/SchedulesFilePath</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:SoftwareInfo/h:extension/h:EmissionsScenarios/h:EmissionsScenario) &gt;= 0"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:SoftwareInfo/h:extension/h:EmissionsScenarios/h:EmissionsScenario) &gt;= 0"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or more element(s) for xpath: SoftwareInfo/extension/EmissionsScenarios/EmissionsScenario</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Building) &gt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Building) &gt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 or more element(s) for xpath: Building</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M2"/></axsl:template><axsl:template match="text()" priority="-1" mode="M2"/><axsl:template match="@*|node()" priority="-2" mode="M2"><axsl:apply-templates select="*" mode="M2"/></axsl:template>

<!--PATTERN [Building]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[Building]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building" priority="1000" mode="M3"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Site) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Site) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: Site</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:BuildingDetails) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:BuildingDetails) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: BuildingDetails</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M3"/></axsl:template><axsl:template match="text()" priority="-1" mode="M3"/><axsl:template match="@*|node()" priority="-2" mode="M3"><axsl:apply-templates select="*" mode="M3"/></axsl:template>

<!--PATTERN [SimulationControl]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[SimulationControl]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:SoftwareInfo/h:extension/h:SimulationControl" priority="1000" mode="M4"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:SoftwareInfo/h:extension/h:SimulationControl"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Timestep) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Timestep) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: Timestep</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:BeginMonth) + count(h:BeginDayOfMonth) = 0 or count(h:BeginMonth) + count(h:BeginDayOfMonth) = 2"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:BeginMonth) + count(h:BeginDayOfMonth) = 0 or count(h:BeginMonth) + count(h:BeginDayOfMonth) = 2"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 2 element(s) for xpath: BeginMonth | BeginDayOfMonth</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:EndMonth) + count(h:EndDayOfMonth) = 0 or count(h:EndMonth) + count(h:EndDayOfMonth) = 2"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:EndMonth) + count(h:EndDayOfMonth) = 0 or count(h:EndMonth) + count(h:EndDayOfMonth) = 2"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 2 element(s) for xpath: EndMonth | EndDayOfMonth</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:CalendarYear) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:CalendarYear) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: CalendarYear</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="number(h:CalendarYear) &gt;= 1600 or not(h:CalendarYear)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:CalendarYear) &gt;= 1600 or not(h:CalendarYear)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected CalendarYear to be greater than or equal to 1600</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="number(h:CalendarYear) &lt;= 9999 or not(h:CalendarYear)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:CalendarYear) &lt;= 9999 or not(h:CalendarYear)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected CalendarYear to be less than or equal to 9999</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:DaylightSaving) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:DaylightSaving) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: DaylightSaving</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M4"/></axsl:template><axsl:template match="text()" priority="-1" mode="M4"/><axsl:template match="@*|node()" priority="-2" mode="M4"><axsl:apply-templates select="*" mode="M4"/></axsl:template>

<!--PATTERN [DaylightSaving]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[DaylightSaving]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:SoftwareInfo/h:extension/h:SimulationControl/h:DaylightSaving" priority="1000" mode="M5"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:SoftwareInfo/h:extension/h:SimulationControl/h:DaylightSaving"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Enabled) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Enabled) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: Enabled</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:BeginMonth) + count(h:BeginDayOfMonth) + count(h:EndMonth) + count(h:EndDayOfMonth) = 0 or count(h:BeginMonth) + count(h:BeginDayOfMonth) + count(h:EndMonth) + count(h:EndDayOfMonth) = 4"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:BeginMonth) + count(h:BeginDayOfMonth) + count(h:EndMonth) + count(h:EndDayOfMonth) = 0 or count(h:BeginMonth) + count(h:BeginDayOfMonth) + count(h:EndMonth) + count(h:EndDayOfMonth) = 4"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 4 element(s) for xpath: BeginMonth | BeginDayOfMonth | EndMonth | EndDayOfMonth</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M5"/></axsl:template><axsl:template match="text()" priority="-1" mode="M5"/><axsl:template match="@*|node()" priority="-2" mode="M5"><axsl:apply-templates select="*" mode="M5"/></axsl:template>

<!--PATTERN [HVACSizingControl]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[HVACSizingControl]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:SoftwareInfo/h:extension/h:HVACSizingControl" priority="1000" mode="M6"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:SoftwareInfo/h:extension/h:HVACSizingControl"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:AllowIncreasedFixedCapacities) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:AllowIncreasedFixedCapacities) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: AllowIncreasedFixedCapacities</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:HeatPumpSizingMethodology) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:HeatPumpSizingMethodology) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: HeatPumpSizingMethodology</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="h:HeatPumpSizingMethodology[text()=&quot;ACCA&quot; or text()=&quot;HERS&quot; or text()=&quot;MaxLoad&quot;] or not(h:HeatPumpSizingMethodology)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="h:HeatPumpSizingMethodology[text()=&quot;ACCA&quot; or text()=&quot;HERS&quot; or text()=&quot;MaxLoad&quot;] or not(h:HeatPumpSizingMethodology)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected HeatPumpSizingMethodology to be 'ACCA' or 'HERS' or 'MaxLoad'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M6"/></axsl:template><axsl:template match="text()" priority="-1" mode="M6"/><axsl:template match="@*|node()" priority="-2" mode="M6"><axsl:apply-templates select="*" mode="M6"/></axsl:template>

<!--PATTERN [EmissionsScenario]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[EmissionsScenario]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:SoftwareInfo/h:extension/h:EmissionsScenarios/h:EmissionsScenario" priority="1000" mode="M7"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:SoftwareInfo/h:extension/h:EmissionsScenarios/h:EmissionsScenario"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Name) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Name) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: Name</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:EmissionsType) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:EmissionsType) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: EmissionsType</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:EmissionsFactor[h:FuelType=&quot;electricity&quot;]) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:EmissionsFactor[h:FuelType=&quot;electricity&quot;]) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: EmissionsFactor[FuelType="electricity"]</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:EmissionsFactor[h:FuelType=&quot;natural gas&quot;]) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:EmissionsFactor[h:FuelType=&quot;natural gas&quot;]) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: EmissionsFactor[FuelType="natural gas"]</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:EmissionsFactor[h:FuelType=&quot;propane&quot;]) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:EmissionsFactor[h:FuelType=&quot;propane&quot;]) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: EmissionsFactor[FuelType="propane"]</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:EmissionsFactor[h:FuelType=&quot;fuel oil&quot;]) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:EmissionsFactor[h:FuelType=&quot;fuel oil&quot;]) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: EmissionsFactor[FuelType="fuel oil"]</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:EmissionsFactor[h:FuelType=&quot;coal&quot;]) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:EmissionsFactor[h:FuelType=&quot;coal&quot;]) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: EmissionsFactor[FuelType="coal"]</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:EmissionsFactor[h:FuelType=&quot;wood&quot;]) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:EmissionsFactor[h:FuelType=&quot;wood&quot;]) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: EmissionsFactor[FuelType="wood"]</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:EmissionsFactor[h:FuelType=&quot;wood pellets&quot;]) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:EmissionsFactor[h:FuelType=&quot;wood pellets&quot;]) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: EmissionsFactor[FuelType="wood pellets"]</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M7"/></axsl:template><axsl:template match="text()" priority="-1" mode="M7"/><axsl:template match="@*|node()" priority="-2" mode="M7"><axsl:apply-templates select="*" mode="M7"/></axsl:template>

<!--PATTERN [EmissionsFactor=Electricity]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[EmissionsFactor=Electricity]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:SoftwareInfo/h:extension/h:EmissionsScenarios/h:EmissionsScenario/h:EmissionsFactor[h:FuelType=&quot;electricity&quot;]" priority="1000" mode="M8"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:SoftwareInfo/h:extension/h:EmissionsScenarios/h:EmissionsScenario/h:EmissionsFactor[h:FuelType=&quot;electricity&quot;]"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Units[text()=&quot;lb/MWh&quot; or text()=&quot;kg/MWh&quot;]) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Units[text()=&quot;lb/MWh&quot; or text()=&quot;kg/MWh&quot;]) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: Units[text()="lb/MWh" or text()="kg/MWh"]</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:ScheduleFilePath) + count(h:Value) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:ScheduleFilePath) + count(h:Value) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: ScheduleFilePath | Value</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M8"/></axsl:template><axsl:template match="text()" priority="-1" mode="M8"/><axsl:template match="@*|node()" priority="-2" mode="M8"><axsl:apply-templates select="*" mode="M8"/></axsl:template>

<!--PATTERN [EmissionsFactor=ElectricitySchedule]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[EmissionsFactor=ElectricitySchedule]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:SoftwareInfo/h:extension/h:EmissionsScenarios/h:EmissionsScenario/h:EmissionsFactor[h:FuelType=&quot;electricity&quot; and h:ScheduleFilePath]" priority="1000" mode="M9"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:SoftwareInfo/h:extension/h:EmissionsScenarios/h:EmissionsScenario/h:EmissionsFactor[h:FuelType=&quot;electricity&quot; and h:ScheduleFilePath]"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:NumberofHeaderRows) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:NumberofHeaderRows) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: NumberofHeaderRows</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="number(h:NumberofHeaderRows) &gt;= 0 or not(h:NumberofHeaderRows)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:NumberofHeaderRows) &gt;= 0 or not(h:NumberofHeaderRows)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected NumberofHeaderRows to be greater than or equal to 0</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:ColumnNumber) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:ColumnNumber) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: ColumnNumber</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="number(h:ColumnNumber) &gt;= 1 or not(h:ColumnNumber)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:ColumnNumber) &gt;= 1 or not(h:ColumnNumber)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected ColumnNumber to be greater than or equal to 1</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M9"/></axsl:template><axsl:template match="text()" priority="-1" mode="M9"/><axsl:template match="@*|node()" priority="-2" mode="M9"><axsl:apply-templates select="*" mode="M9"/></axsl:template>

<!--PATTERN [EmissionsFactor=Fuel]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[EmissionsFactor=Fuel]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:SoftwareInfo/h:extension/h:EmissionsScenarios/h:EmissionsScenario/h:EmissionsFactor[h:FuelType!=&quot;electricity&quot;]" priority="1000" mode="M10"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:SoftwareInfo/h:extension/h:EmissionsScenarios/h:EmissionsScenario/h:EmissionsFactor[h:FuelType!=&quot;electricity&quot;]"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Units[text()=&quot;lb/MBtu&quot; or text()=&quot;kg/MBtu&quot;]) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Units[text()=&quot;lb/MBtu&quot; or text()=&quot;kg/MBtu&quot;]) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: Units[text()="lb/MBtu" or text()="kg/MBtu"]</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Value) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Value) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: Value</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M10"/></axsl:template><axsl:template match="text()" priority="-1" mode="M10"/><axsl:template match="@*|node()" priority="-2" mode="M10"><axsl:apply-templates select="*" mode="M10"/></axsl:template>

<!--PATTERN [BuildingSite]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[BuildingSite]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:Site" priority="1000" mode="M11"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:Site"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Address/h:StateCode) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Address/h:StateCode) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: Address/StateCode</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Address/h:ZipCode) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Address/h:ZipCode) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: Address/ZipCode</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:TimeZone/h:UTCOffset) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:TimeZone/h:UTCOffset) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: TimeZone/UTCOffset</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="number(h:TimeZone/h:UTCOffset) &gt;= -12 or not(h:TimeZone/h:UTCOffset)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:TimeZone/h:UTCOffset) &gt;= -12 or not(h:TimeZone/h:UTCOffset)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected TimeZone/UTCOffset to be greater than or equal to -12</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="number(h:TimeZone/h:UTCOffset) &lt;= 14 or not(h:TimeZone/h:UTCOffset)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:TimeZone/h:UTCOffset) &lt;= 14 or not(h:TimeZone/h:UTCOffset)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected TimeZone/UTCOffset to be less than or equal to 14</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M11"/></axsl:template><axsl:template match="text()" priority="-1" mode="M11"/><axsl:template match="@*|node()" priority="-2" mode="M11"><axsl:apply-templates select="*" mode="M11"/></axsl:template>

<!--PATTERN [BuildingDetails]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[BuildingDetails]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails" priority="1000" mode="M12"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:BuildingSummary/h:Site) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:BuildingSummary/h:Site) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: BuildingSummary/Site</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:BuildingSummary/h:BuildingOccupancy) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:BuildingSummary/h:BuildingOccupancy) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: BuildingSummary/BuildingOccupancy</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:BuildingSummary/h:BuildingConstruction) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:BuildingSummary/h:BuildingConstruction) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: BuildingSummary/BuildingConstruction</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:ClimateandRiskZones/h:ClimateZoneIECC) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:ClimateandRiskZones/h:ClimateZoneIECC) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: ClimateandRiskZones/ClimateZoneIECC</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:ClimateandRiskZones/h:WeatherStation) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:ClimateandRiskZones/h:WeatherStation) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: ClimateandRiskZones/WeatherStation</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Enclosure/h:AirInfiltration/h:AirInfiltrationMeasurement/h:BuildingAirLeakage/h:UnitofMeasure[text()=&quot;ACH&quot; or text()=&quot;CFM&quot; or text()=&quot;ACHnatural&quot;]) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Enclosure/h:AirInfiltration/h:AirInfiltrationMeasurement/h:BuildingAirLeakage/h:UnitofMeasure[text()=&quot;ACH&quot; or text()=&quot;CFM&quot; or text()=&quot;ACHnatural&quot;]) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: Enclosure/AirInfiltration/AirInfiltrationMeasurement/BuildingAirLeakage/UnitofMeasure[text()="ACH" or text()="CFM" or text()="ACHnatural"]</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Enclosure/h:Roofs/h:Roof) &gt;= 0"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Enclosure/h:Roofs/h:Roof) &gt;= 0"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or more element(s) for xpath: Enclosure/Roofs/Roof</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Enclosure/h:RimJoists/h:RimJoist) &gt;= 0"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Enclosure/h:RimJoists/h:RimJoist) &gt;= 0"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or more element(s) for xpath: Enclosure/RimJoists/RimJoist</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Enclosure/h:Walls/h:Wall) &gt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Enclosure/h:Walls/h:Wall) &gt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 or more element(s) for xpath: Enclosure/Walls/Wall</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Enclosure/h:FoundationWalls/h:FoundationWall) &gt;= 0"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Enclosure/h:FoundationWalls/h:FoundationWall) &gt;= 0"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or more element(s) for xpath: Enclosure/FoundationWalls/FoundationWall</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Enclosure/h:FrameFloors/h:FrameFloor) &gt;= 0"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Enclosure/h:FrameFloors/h:FrameFloor) &gt;= 0"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or more element(s) for xpath: Enclosure/FrameFloors/FrameFloor</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Enclosure/h:Slabs/h:Slab) &gt;= 0"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Enclosure/h:Slabs/h:Slab) &gt;= 0"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or more element(s) for xpath: Enclosure/Slabs/Slab</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Enclosure/h:Windows/h:Window) &gt;= 0"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Enclosure/h:Windows/h:Window) &gt;= 0"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or more element(s) for xpath: Enclosure/Windows/Window</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Enclosure/h:Skylights/h:Skylight) &gt;= 0"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Enclosure/h:Skylights/h:Skylight) &gt;= 0"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or more element(s) for xpath: Enclosure/Skylights/Skylight</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Enclosure/h:Doors/h:Door) &gt;= 0"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Enclosure/h:Doors/h:Door) &gt;= 0"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or more element(s) for xpath: Enclosure/Doors/Door</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Enclosure/h:extension/h:PartitionWallMass) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Enclosure/h:extension/h:PartitionWallMass) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: Enclosure/extension/PartitionWallMass</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Enclosure/h:extension/h:FurnitureMass) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Enclosure/h:extension/h:FurnitureMass) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: Enclosure/extension/FurnitureMass</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Systems/h:HVAC/h:HVACPlant/h:HeatingSystem) &gt;= 0"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Systems/h:HVAC/h:HVACPlant/h:HeatingSystem) &gt;= 0"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or more element(s) for xpath: Systems/HVAC/HVACPlant/HeatingSystem</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Systems/h:HVAC/h:HVACPlant/h:CoolingSystem) &gt;= 0"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Systems/h:HVAC/h:HVACPlant/h:CoolingSystem) &gt;= 0"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or more element(s) for xpath: Systems/HVAC/HVACPlant/CoolingSystem</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Systems/h:HVAC/h:HVACPlant/h:HeatPump) &gt;= 0"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Systems/h:HVAC/h:HVACPlant/h:HeatPump) &gt;= 0"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or more element(s) for xpath: Systems/HVAC/HVACPlant/HeatPump</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Systems/h:HVAC/h:HVACControl) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Systems/h:HVAC/h:HVACControl) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: Systems/HVAC/HVACControl</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Systems/h:HVAC/h:HVACDistribution) &gt;= 0"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Systems/h:HVAC/h:HVACDistribution) &gt;= 0"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or more element(s) for xpath: Systems/HVAC/HVACDistribution</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Systems/h:MechanicalVentilation/h:VentilationFans/h:VentilationFan) &gt;= 0"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Systems/h:MechanicalVentilation/h:VentilationFans/h:VentilationFan) &gt;= 0"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or more element(s) for xpath: Systems/MechanicalVentilation/VentilationFans/VentilationFan</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Systems/h:WaterHeating/h:WaterHeatingSystem) &gt;= 0"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Systems/h:WaterHeating/h:WaterHeatingSystem) &gt;= 0"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or more element(s) for xpath: Systems/WaterHeating/WaterHeatingSystem</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Systems/h:WaterHeating/h:HotWaterDistribution) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Systems/h:WaterHeating/h:HotWaterDistribution) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: Systems/WaterHeating/HotWaterDistribution</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Systems/h:WaterHeating/h:WaterFixture) &gt;= 0"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Systems/h:WaterHeating/h:WaterFixture) &gt;= 0"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or more element(s) for xpath: Systems/WaterHeating/WaterFixture</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Systems/h:SolarThermal/h:SolarThermalSystem) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Systems/h:SolarThermal/h:SolarThermalSystem) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: Systems/SolarThermal/SolarThermalSystem</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Systems/h:Photovoltaics/h:PVSystem) &gt;= 0"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Systems/h:Photovoltaics/h:PVSystem) &gt;= 0"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or more element(s) for xpath: Systems/Photovoltaics/PVSystem</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Systems/h:Batteries/h:Battery) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Systems/h:Batteries/h:Battery) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: Systems/Batteries/Battery</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Systems/h:extension/h:Generators/h:Generator) &gt;= 0"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Systems/h:extension/h:Generators/h:Generator) &gt;= 0"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or more element(s) for xpath: Systems/extension/Generators/Generator</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Appliances/h:ClothesWasher) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Appliances/h:ClothesWasher) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: Appliances/ClothesWasher</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Appliances/h:ClothesDryer) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Appliances/h:ClothesDryer) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: Appliances/ClothesDryer</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Appliances/h:Dishwasher) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Appliances/h:Dishwasher) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: Appliances/Dishwasher</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Appliances/h:Refrigerator) &gt;= 0"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Appliances/h:Refrigerator) &gt;= 0"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or more element(s) for xpath: Appliances/Refrigerator</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Appliances/h:Freezer) &gt;= 0"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Appliances/h:Freezer) &gt;= 0"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or more element(s) for xpath: Appliances/Freezer</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Appliances/h:Dehumidifier) &gt;= 0"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Appliances/h:Dehumidifier) &gt;= 0"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or more element(s) for xpath: Appliances/Dehumidifier</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Appliances/h:CookingRange) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Appliances/h:CookingRange) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: Appliances/CookingRange</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Appliances/h:Oven) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Appliances/h:Oven) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: Appliances/Oven</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Lighting) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Lighting) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: Lighting</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Lighting/h:CeilingFan) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Lighting/h:CeilingFan) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: Lighting/CeilingFan</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Pools/h:Pool) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Pools/h:Pool) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: Pools/Pool</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:HotTubs/h:HotTub) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:HotTubs/h:HotTub) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: HotTubs/HotTub</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:MiscLoads/h:PlugLoad[h:PlugLoadType[text()=&quot;other&quot;]]) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:MiscLoads/h:PlugLoad[h:PlugLoadType[text()=&quot;other&quot;]]) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: MiscLoads/PlugLoad[PlugLoadType[text()="other"]]</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:MiscLoads/h:PlugLoad[h:PlugLoadType[text()=&quot;TV other&quot;]]) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:MiscLoads/h:PlugLoad[h:PlugLoadType[text()=&quot;TV other&quot;]]) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: MiscLoads/PlugLoad[PlugLoadType[text()="TV other"]]</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:MiscLoads/h:PlugLoad[h:PlugLoadType[text()=&quot;electric vehicle charging&quot;]]) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:MiscLoads/h:PlugLoad[h:PlugLoadType[text()=&quot;electric vehicle charging&quot;]]) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: MiscLoads/PlugLoad[PlugLoadType[text()="electric vehicle charging"]]</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:MiscLoads/h:PlugLoad[h:PlugLoadType[text()=&quot;well pump&quot;]]) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:MiscLoads/h:PlugLoad[h:PlugLoadType[text()=&quot;well pump&quot;]]) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: MiscLoads/PlugLoad[PlugLoadType[text()="well pump"]]</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:MiscLoads/h:FuelLoad[h:FuelLoadType[text()=&quot;grill&quot;]]) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:MiscLoads/h:FuelLoad[h:FuelLoadType[text()=&quot;grill&quot;]]) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: MiscLoads/FuelLoad[FuelLoadType[text()="grill"]]</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:MiscLoads/h:FuelLoad[h:FuelLoadType[text()=&quot;lighting&quot;]]) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:MiscLoads/h:FuelLoad[h:FuelLoadType[text()=&quot;lighting&quot;]]) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: MiscLoads/FuelLoad[FuelLoadType[text()="lighting"]]</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:MiscLoads/h:FuelLoad[h:FuelLoadType[text()=&quot;fireplace&quot;]]) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:MiscLoads/h:FuelLoad[h:FuelLoadType[text()=&quot;fireplace&quot;]]) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: MiscLoads/FuelLoad[FuelLoadType[text()="fireplace"]]</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Systems/h:HVAC/h:HVACPlant/h:HeatPump/h:BackupSystem) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Systems/h:HVAC/h:HVACPlant/h:HeatPump/h:BackupSystem) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: HeatPump/BackupSystem</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="sum(h:Systems/h:HVAC/h:HVACPlant/*/h:FractionHeatLoadServed) &lt;= 1.01"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="sum(h:Systems/h:HVAC/h:HVACPlant/*/h:FractionHeatLoadServed) &lt;= 1.01"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected sum(FractionHeatLoadServed) to be less than or equal to 1</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="sum(h:Systems/h:HVAC/h:HVACPlant/*/h:FractionCoolLoadServed) &lt;= 1.01"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="sum(h:Systems/h:HVAC/h:HVACPlant/*/h:FractionCoolLoadServed) &lt;= 1.01"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected sum(FractionCoolLoadServed) to be less than or equal to 1</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="sum(h:Appliances/h:Dehumidifier/h:FractionDehumidificationLoadServed) &lt;= 1.01"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="sum(h:Appliances/h:Dehumidifier/h:FractionDehumidificationLoadServed) &lt;= 1.01"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected sum(FractionDehumidificationLoadServed) to be less than or equal to 1</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="(sum(h:Systems/h:WaterHeating/h:WaterHeatingSystem/h:FractionDHWLoadServed) &lt;= 1.01 and sum(h:Systems/h:WaterHeating/h:WaterHeatingSystem/h:FractionDHWLoadServed) &gt;= 0.99) or count(h:Systems/h:WaterHeating/h:WaterHeatingSystem/h:FractionDHWLoadServed) = 0"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(sum(h:Systems/h:WaterHeating/h:WaterHeatingSystem/h:FractionDHWLoadServed) &lt;= 1.01 and sum(h:Systems/h:WaterHeating/h:WaterHeatingSystem/h:FractionDHWLoadServed) &gt;= 0.99) or count(h:Systems/h:WaterHeating/h:WaterHeatingSystem/h:FractionDHWLoadServed) = 0"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected sum(FractionDHWLoadServed) to be 1</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--REPORT WARN-->
<axsl:if test="count(h:Enclosure/h:Windows/h:Window) = 0"><svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Enclosure/h:Windows/h:Window) = 0"><axsl:attribute name="role">WARN</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>No windows specified, the model will not include window heat transfer.</svrl:text></svrl:successful-report></axsl:if>

		<!--REPORT WARN-->
<axsl:if test="sum(h:Systems/h:HVAC/h:HVACPlant/*/h:FractionHeatLoadServed) = 0"><svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="sum(h:Systems/h:HVAC/h:HVACPlant/*/h:FractionHeatLoadServed) = 0"><axsl:attribute name="role">WARN</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>No space heating specified, the model will not include space heating energy use.</svrl:text></svrl:successful-report></axsl:if>

		<!--REPORT WARN-->
<axsl:if test="sum(h:Systems/h:HVAC/h:HVACPlant/*/h:FractionCoolLoadServed) = 0"><svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="sum(h:Systems/h:HVAC/h:HVACPlant/*/h:FractionCoolLoadServed) = 0"><axsl:attribute name="role">WARN</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>No space cooling specified, the model will not include space cooling energy use.</svrl:text></svrl:successful-report></axsl:if>

		<!--REPORT WARN-->
<axsl:if test="sum(h:Systems/h:WaterHeating/h:WaterHeatingSystem/h:FractionDHWLoadServed) = 0"><svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="sum(h:Systems/h:WaterHeating/h:WaterHeatingSystem/h:FractionDHWLoadServed) = 0"><axsl:attribute name="role">WARN</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>No water heating specified, the model will not include water heating energy use.</svrl:text></svrl:successful-report></axsl:if>

		<!--REPORT WARN-->
<axsl:if test="count(h:Systems/h:Photovoltaics/h:PVSystem) = 0 and count(h:Systems/h:Batteries/h:Battery) &gt;= 1"><svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Systems/h:Photovoltaics/h:PVSystem) = 0 and count(h:Systems/h:Batteries/h:Battery) &gt;= 1"><axsl:attribute name="role">WARN</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Battery without PV specified; battery is assumed to operate as backup and will not be modeled.</svrl:text></svrl:successful-report></axsl:if>

		<!--REPORT WARN-->
<axsl:if test="count(h:Appliances/h:ClothesWasher) = 0"><svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Appliances/h:ClothesWasher) = 0"><axsl:attribute name="role">WARN</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>No clothes washer specified, the model will not include clothes washer energy use.</svrl:text></svrl:successful-report></axsl:if>

		<!--REPORT WARN-->
<axsl:if test="count(h:Appliances/h:ClothesDryer) = 0"><svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Appliances/h:ClothesDryer) = 0"><axsl:attribute name="role">WARN</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>No clothes dryer specified, the model will not include clothes dryer energy use.</svrl:text></svrl:successful-report></axsl:if>

		<!--REPORT WARN-->
<axsl:if test="count(h:Appliances/h:Dishwasher) = 0"><svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Appliances/h:Dishwasher) = 0"><axsl:attribute name="role">WARN</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>No dishwasher specified, the model will not include dishwasher energy use.</svrl:text></svrl:successful-report></axsl:if>

		<!--REPORT WARN-->
<axsl:if test="count(h:Appliances/h:Refrigerator) = 0"><svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Appliances/h:Refrigerator) = 0"><axsl:attribute name="role">WARN</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>No refrigerator specified, the model will not include refrigerator energy use.</svrl:text></svrl:successful-report></axsl:if>

		<!--REPORT WARN-->
<axsl:if test="count(h:Appliances/h:CookingRange) = 0"><svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Appliances/h:CookingRange) = 0"><axsl:attribute name="role">WARN</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>No cooking range specified, the model will not include cooking range/oven energy use.</svrl:text></svrl:successful-report></axsl:if>

		<!--REPORT WARN-->
<axsl:if test="count(h:Lighting) = 0"><svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Lighting) = 0"><axsl:attribute name="role">WARN</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>No lighting specified, the model will not include lighting energy use.</svrl:text></svrl:successful-report></axsl:if><axsl:apply-templates select="*" mode="M12"/></axsl:template><axsl:template match="text()" priority="-1" mode="M12"/><axsl:template match="@*|node()" priority="-2" mode="M12"><axsl:apply-templates select="*" mode="M12"/></axsl:template>

<!--PATTERN [Site]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[Site]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:BuildingSummary/h:Site" priority="1000" mode="M13"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:BuildingSummary/h:Site"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:SiteType) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:SiteType) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: SiteType</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:ShieldingofHome) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:ShieldingofHome) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: ShieldingofHome</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:extension/h:Neighbors) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:extension/h:Neighbors) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: extension/Neighbors</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M13"/></axsl:template><axsl:template match="text()" priority="-1" mode="M13"/><axsl:template match="@*|node()" priority="-2" mode="M13"><axsl:apply-templates select="*" mode="M13"/></axsl:template>

<!--PATTERN [Neighbors]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[Neighbors]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:BuildingSummary/h:Site/h:extension/h:Neighbors" priority="1000" mode="M14"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:BuildingSummary/h:Site/h:extension/h:Neighbors"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:NeighborBuilding) &gt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:NeighborBuilding) &gt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 or more element(s) for xpath: NeighborBuilding</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M14"/></axsl:template><axsl:template match="text()" priority="-1" mode="M14"/><axsl:template match="@*|node()" priority="-2" mode="M14"><axsl:apply-templates select="*" mode="M14"/></axsl:template>

<!--PATTERN [NeighborBuilding]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[NeighborBuilding]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:BuildingSummary/h:Site/h:extension/h:Neighbors/h:NeighborBuilding" priority="1000" mode="M15"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:BuildingSummary/h:Site/h:extension/h:Neighbors/h:NeighborBuilding"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Azimuth) + count(h:Orientation) &gt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Azimuth) + count(h:Orientation) &gt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 or more element(s) for xpath: Azimuth | Orientation</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Distance) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Distance) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: Distance</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Height) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Height) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: Height</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M15"/></axsl:template><axsl:template match="text()" priority="-1" mode="M15"/><axsl:template match="@*|node()" priority="-2" mode="M15"><axsl:apply-templates select="*" mode="M15"/></axsl:template>

<!--PATTERN [BuildingOccupancy]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[BuildingOccupancy]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:BuildingSummary/h:BuildingOccupancy" priority="1000" mode="M16"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:BuildingSummary/h:BuildingOccupancy"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:NumberofResidents) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:NumberofResidents) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: NumberofResidents</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:extension/h:WeekdayScheduleFractions) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:extension/h:WeekdayScheduleFractions) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: extension/WeekdayScheduleFractions</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:extension/h:WeekendScheduleFractions) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:extension/h:WeekendScheduleFractions) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: extension/WeekendScheduleFractions</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:extension/h:MonthlyScheduleMultipliers) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:extension/h:MonthlyScheduleMultipliers) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: extension/MonthlyScheduleMultipliers</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M16"/></axsl:template><axsl:template match="text()" priority="-1" mode="M16"/><axsl:template match="@*|node()" priority="-2" mode="M16"><axsl:apply-templates select="*" mode="M16"/></axsl:template>

<!--PATTERN [OccupancyCalculationType=Operational]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[OccupancyCalculationType=Operational]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:SoftwareInfo/h:extension/h:OccupancyCalculationType[text()=&quot;operational&quot;]" priority="1000" mode="M17"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:SoftwareInfo/h:extension/h:OccupancyCalculationType[text()=&quot;operational&quot;]"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(../../../h:Building/h:BuildingDetails/h:BuildingSummary/h:BuildingOccupancy/h:NumberofResidents) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(../../../h:Building/h:BuildingDetails/h:BuildingSummary/h:BuildingOccupancy/h:NumberofResidents) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: NumberofResidents</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M17"/></axsl:template><axsl:template match="text()" priority="-1" mode="M17"/><axsl:template match="@*|node()" priority="-2" mode="M17"><axsl:apply-templates select="*" mode="M17"/></axsl:template>

<!--PATTERN [BuildingConstruction]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[BuildingConstruction]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:BuildingSummary/h:BuildingConstruction" priority="1000" mode="M18"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:BuildingSummary/h:BuildingConstruction"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:ResidentialFacilityType) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:ResidentialFacilityType) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: ResidentialFacilityType</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="h:ResidentialFacilityType[text()=&quot;single-family detached&quot; or text()=&quot;single-family attached&quot; or text()=&quot;apartment unit&quot; or text()=&quot;manufactured home&quot;] or not(h:ResidentialFacilityType)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="h:ResidentialFacilityType[text()=&quot;single-family detached&quot; or text()=&quot;single-family attached&quot; or text()=&quot;apartment unit&quot; or text()=&quot;manufactured home&quot;] or not(h:ResidentialFacilityType)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected ResidentialFacilityType to be 'single-family detached' or 'single-family attached' or 'apartment unit' or 'manufactured home'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:NumberofConditionedFloors) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:NumberofConditionedFloors) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: NumberofConditionedFloors</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:NumberofConditionedFloorsAboveGrade) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:NumberofConditionedFloorsAboveGrade) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: NumberofConditionedFloorsAboveGrade</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="number(h:NumberofConditionedFloors) &gt;= number(h:NumberofConditionedFloorsAboveGrade) or not(h:NumberofConditionedFloors) or not(h:NumberofConditionedFloorsAboveGrade)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:NumberofConditionedFloors) &gt;= number(h:NumberofConditionedFloorsAboveGrade) or not(h:NumberofConditionedFloors) or not(h:NumberofConditionedFloorsAboveGrade)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected NumberofConditionedFloors to be greater than or equal to NumberofConditionedFloorsAboveGrade</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:NumberofBedrooms) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:NumberofBedrooms) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: NumberofBedrooms</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:NumberofBathrooms) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:NumberofBathrooms) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: NumberofBathrooms</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:ConditionedFloorArea) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:ConditionedFloorArea) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: ConditionedFloorArea</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="number(h:ConditionedFloorArea) &gt;= (sum(../../h:Enclosure/h:Slabs/h:Slab[h:InteriorAdjacentTo=&quot;living space&quot; or h:InteriorAdjacentTo=&quot;basement - conditioned&quot;]/h:Area) + sum(../../h:Enclosure/h:FrameFloors/h:FrameFloor[h:InteriorAdjacentTo=&quot;living space&quot; and not(h:ExteriorAdjacentTo=&quot;attic - vented&quot; or h:ExteriorAdjacentTo=&quot;attic - unvented&quot; or ((h:ExteriorAdjacentTo=&quot;other housing unit&quot; or h:ExteriorAdjacentTo=&quot;other heated space&quot; or h:ExteriorAdjacentTo=&quot;other multifamily buffer space&quot; or h:ExteriorAdjacentTo=&quot;other non-freezing space&quot;) and h:extension/h:OtherSpaceAboveOrBelow=&quot;above&quot;))]/h:Area) - 1) or not(h:ConditionedFloorArea)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:ConditionedFloorArea) &gt;= (sum(../../h:Enclosure/h:Slabs/h:Slab[h:InteriorAdjacentTo=&quot;living space&quot; or h:InteriorAdjacentTo=&quot;basement - conditioned&quot;]/h:Area) + sum(../../h:Enclosure/h:FrameFloors/h:FrameFloor[h:InteriorAdjacentTo=&quot;living space&quot; and not(h:ExteriorAdjacentTo=&quot;attic - vented&quot; or h:ExteriorAdjacentTo=&quot;attic - unvented&quot; or ((h:ExteriorAdjacentTo=&quot;other housing unit&quot; or h:ExteriorAdjacentTo=&quot;other heated space&quot; or h:ExteriorAdjacentTo=&quot;other multifamily buffer space&quot; or h:ExteriorAdjacentTo=&quot;other non-freezing space&quot;) and h:extension/h:OtherSpaceAboveOrBelow=&quot;above&quot;))]/h:Area) - 1) or not(h:ConditionedFloorArea)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected ConditionedFloorArea to be greater than or equal to the sum of conditioned slab/floor areas.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:ConditionedBuildingVolume) + count(h:AverageCeilingHeight) &gt;= 0"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:ConditionedBuildingVolume) + count(h:AverageCeilingHeight) &gt;= 0"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or more element(s) for xpath: ConditionedBuildingVolume | AverageCeilingHeight</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:extension/h:HasFlueOrChimney) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:extension/h:HasFlueOrChimney) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: extension/HasFlueOrChimney</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M18"/></axsl:template><axsl:template match="text()" priority="-1" mode="M18"/><axsl:template match="@*|node()" priority="-2" mode="M18"><axsl:apply-templates select="*" mode="M18"/></axsl:template>

<!--PATTERN [ClimateZoneIECC]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[ClimateZoneIECC]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:ClimateandRiskZones/h:ClimateZoneIECC" priority="1000" mode="M19"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:ClimateandRiskZones/h:ClimateZoneIECC"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Year) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Year) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: Year</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:ClimateZone) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:ClimateZone) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: ClimateZone</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M19"/></axsl:template><axsl:template match="text()" priority="-1" mode="M19"/><axsl:template match="@*|node()" priority="-2" mode="M19"><axsl:apply-templates select="*" mode="M19"/></axsl:template>

<!--PATTERN [WeatherStation]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[WeatherStation]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:ClimateandRiskZones/h:WeatherStation" priority="1000" mode="M20"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:ClimateandRiskZones/h:WeatherStation"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:extension/h:EPWFilePath) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:extension/h:EPWFilePath) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: extension/EPWFilePath</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M20"/></axsl:template><axsl:template match="text()" priority="-1" mode="M20"/><axsl:template match="@*|node()" priority="-2" mode="M20"><axsl:apply-templates select="*" mode="M20"/></axsl:template>

<!--PATTERN [AirInfiltrationUnits=ACHorCFM]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[AirInfiltrationUnits=ACHorCFM]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Enclosure/h:AirInfiltration/h:AirInfiltrationMeasurement[h:BuildingAirLeakage/h:UnitofMeasure[text()=&quot;ACH&quot; or text()=&quot;CFM&quot;]]" priority="1000" mode="M21"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Enclosure/h:AirInfiltration/h:AirInfiltrationMeasurement[h:BuildingAirLeakage/h:UnitofMeasure[text()=&quot;ACH&quot; or text()=&quot;CFM&quot;]]"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:HousePressure) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:HousePressure) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: HousePressure</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:BuildingAirLeakage/h:AirLeakage) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:BuildingAirLeakage/h:AirLeakage) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: BuildingAirLeakage/AirLeakage</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:InfiltrationVolume) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:InfiltrationVolume) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: InfiltrationVolume</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:InfiltrationHeight) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:InfiltrationHeight) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: InfiltrationHeight</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="number(h:InfiltrationHeight) &gt; 0 or not(h:InfiltrationHeight)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:InfiltrationHeight) &gt; 0 or not(h:InfiltrationHeight)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected InfiltrationHeight to be greater than 0</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M21"/></axsl:template><axsl:template match="text()" priority="-1" mode="M21"/><axsl:template match="@*|node()" priority="-2" mode="M21"><axsl:apply-templates select="*" mode="M21"/></axsl:template>

<!--PATTERN [AirInfiltrationUnits=ACHnatural]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[AirInfiltrationUnits=ACHnatural]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Enclosure/h:AirInfiltration/h:AirInfiltrationMeasurement[h:BuildingAirLeakage/h:UnitofMeasure[text()=&quot;ACHnatural&quot;]]" priority="1000" mode="M22"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Enclosure/h:AirInfiltration/h:AirInfiltrationMeasurement[h:BuildingAirLeakage/h:UnitofMeasure[text()=&quot;ACHnatural&quot;]]"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:HousePressure) = 0"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:HousePressure) = 0"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 element(s) for xpath: HousePressure</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:BuildingAirLeakage/h:AirLeakage) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:BuildingAirLeakage/h:AirLeakage) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: BuildingAirLeakage/AirLeakage</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:InfiltrationVolume) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:InfiltrationVolume) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: InfiltrationVolume</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:InfiltrationHeight) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:InfiltrationHeight) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: InfiltrationHeight</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="number(h:InfiltrationHeight) &gt; 0 or not(h:InfiltrationHeight)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:InfiltrationHeight) &gt; 0 or not(h:InfiltrationHeight)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected InfiltrationHeight to be greater than 0</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M22"/></axsl:template><axsl:template match="text()" priority="-1" mode="M22"/><axsl:template match="@*|node()" priority="-2" mode="M22"><axsl:apply-templates select="*" mode="M22"/></axsl:template>

<!--PATTERN [Roof]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[Roof]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Enclosure/h:Roofs/h:Roof" priority="1000" mode="M23"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Enclosure/h:Roofs/h:Roof"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:InteriorAdjacentTo) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:InteriorAdjacentTo) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: InteriorAdjacentTo</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="h:InteriorAdjacentTo[text()=&quot;attic - vented&quot; or text()=&quot;attic - unvented&quot; or text()=&quot;living space&quot; or text()=&quot;garage&quot;] or not(h:InteriorAdjacentTo)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="h:InteriorAdjacentTo[text()=&quot;attic - vented&quot; or text()=&quot;attic - unvented&quot; or text()=&quot;living space&quot; or text()=&quot;garage&quot;] or not(h:InteriorAdjacentTo)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected InteriorAdjacentTo to be 'attic - vented' or 'attic - unvented' or 'living space' or 'garage'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Area) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Area) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: Area</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Azimuth) + count(h:Orientation) &gt;= 0"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Azimuth) + count(h:Orientation) &gt;= 0"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or more element(s) for xpath: Azimuth | Orientation</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:RoofType) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:RoofType) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: RoofType</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="h:RoofType[text()=&quot;asphalt or fiberglass shingles&quot; or text()=&quot;wood shingles or shakes&quot; or text()=&quot;shingles&quot; or text()=&quot;slate or tile shingles&quot; or text()=&quot;metal surfacing&quot; or text()=&quot;plastic/rubber/synthetic sheeting&quot; or text()=&quot;expanded polystyrene sheathing&quot; or text()=&quot;concrete&quot; or text()=&quot;cool roof&quot;] or not(h:RoofType)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="h:RoofType[text()=&quot;asphalt or fiberglass shingles&quot; or text()=&quot;wood shingles or shakes&quot; or text()=&quot;shingles&quot; or text()=&quot;slate or tile shingles&quot; or text()=&quot;metal surfacing&quot; or text()=&quot;plastic/rubber/synthetic sheeting&quot; or text()=&quot;expanded polystyrene sheathing&quot; or text()=&quot;concrete&quot; or text()=&quot;cool roof&quot;] or not(h:RoofType)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected RoofType to be 'asphalt or fiberglass shingles' or 'wood shingles or shakes' or 'shingles' or 'slate or tile shingles' or 'metal surfacing' or 'plastic/rubber/synthetic sheeting' or 'expanded polystyrene sheathing' or 'concrete' or 'cool roof'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:RoofColor) + count(h:SolarAbsorptance) &gt;= 0"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:RoofColor) + count(h:SolarAbsorptance) &gt;= 0"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or more element(s) for xpath: RoofColor | SolarAbsorptance</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Emittance) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Emittance) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: Emittance</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:InteriorFinish/h:Type) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:InteriorFinish/h:Type) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: InteriorFinish/Type</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="h:InteriorFinish/h:Type[text()=&quot;gypsum board&quot; or text()=&quot;gypsum composite board&quot; or text()=&quot;plaster&quot; or text()=&quot;wood&quot; or text()=&quot;none&quot;] or not(h:InteriorFinish/h:Type)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="h:InteriorFinish/h:Type[text()=&quot;gypsum board&quot; or text()=&quot;gypsum composite board&quot; or text()=&quot;plaster&quot; or text()=&quot;wood&quot; or text()=&quot;none&quot;] or not(h:InteriorFinish/h:Type)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected InteriorFinish/Type to be 'gypsum board' or 'gypsum composite board' or 'plaster' or 'wood' or 'none'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:InteriorFinish/h:Thickness) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:InteriorFinish/h:Thickness) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: InteriorFinish/Thickness</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Pitch) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Pitch) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: Pitch</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:RadiantBarrier) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:RadiantBarrier) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: RadiantBarrier</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Insulation/h:AssemblyEffectiveRValue) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Insulation/h:AssemblyEffectiveRValue) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: Insulation/AssemblyEffectiveRValue</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M23"/></axsl:template><axsl:template match="text()" priority="-1" mode="M23"/><axsl:template match="@*|node()" priority="-2" mode="M23"><axsl:apply-templates select="*" mode="M23"/></axsl:template>

<!--PATTERN [RoofType=AdjacentToVentedAttic]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[RoofType=AdjacentToVentedAttic]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Enclosure/h:Roofs/h:Roof[h:InteriorAdjacentTo=&quot;attic - vented&quot;]" priority="1000" mode="M24"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Enclosure/h:Roofs/h:Roof[h:InteriorAdjacentTo=&quot;attic - vented&quot;]"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(../../h:Attics/h:Attic[h:AtticType/h:Attic[h:Vented=&quot;true&quot;]]/h:VentilationRate[h:UnitofMeasure=&quot;SLA&quot; or h:UnitofMeasure=&quot;ACHnatural&quot;]/h:Value) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(../../h:Attics/h:Attic[h:AtticType/h:Attic[h:Vented=&quot;true&quot;]]/h:VentilationRate[h:UnitofMeasure=&quot;SLA&quot; or h:UnitofMeasure=&quot;ACHnatural&quot;]/h:Value) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: ../../Attics/Attic[AtticType/Attic[Vented="true"]]/VentilationRate[UnitofMeasure="SLA" or UnitofMeasure="ACHnatural"]/Value</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M24"/></axsl:template><axsl:template match="text()" priority="-1" mode="M24"/><axsl:template match="@*|node()" priority="-2" mode="M24"><axsl:apply-templates select="*" mode="M24"/></axsl:template>

<!--PATTERN [RadiantBarrier]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[RadiantBarrier]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Enclosure/h:Roofs/h:Roof[h:RadiantBarrier=&quot;true&quot;]" priority="1000" mode="M25"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Enclosure/h:Roofs/h:Roof[h:RadiantBarrier=&quot;true&quot;]"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:RadiantBarrierGrade) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:RadiantBarrierGrade) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: RadiantBarrierGrade</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M25"/></axsl:template><axsl:template match="text()" priority="-1" mode="M25"/><axsl:template match="@*|node()" priority="-2" mode="M25"><axsl:apply-templates select="*" mode="M25"/></axsl:template>

<!--PATTERN [RimJoist]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[RimJoist]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Enclosure/h:RimJoists/h:RimJoist" priority="1000" mode="M26"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Enclosure/h:RimJoists/h:RimJoist"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:ExteriorAdjacentTo) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:ExteriorAdjacentTo) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: ExteriorAdjacentTo</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="h:ExteriorAdjacentTo[text()=&quot;outside&quot; or text()=&quot;attic - vented&quot; or text()=&quot;attic - unvented&quot; or text()=&quot;basement - conditioned&quot; or text()=&quot;basement - unconditioned&quot; or text()=&quot;crawlspace - vented&quot; or text()=&quot;crawlspace - unvented&quot; or text()=&quot;crawlspace - conditioned&quot; or text()=&quot;garage&quot; or text()=&quot;other housing unit&quot; or text()=&quot;other heated space&quot; or text()=&quot;other multifamily buffer space&quot; or text()=&quot;other non-freezing space&quot;] or not(h:ExteriorAdjacentTo)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="h:ExteriorAdjacentTo[text()=&quot;outside&quot; or text()=&quot;attic - vented&quot; or text()=&quot;attic - unvented&quot; or text()=&quot;basement - conditioned&quot; or text()=&quot;basement - unconditioned&quot; or text()=&quot;crawlspace - vented&quot; or text()=&quot;crawlspace - unvented&quot; or text()=&quot;crawlspace - conditioned&quot; or text()=&quot;garage&quot; or text()=&quot;other housing unit&quot; or text()=&quot;other heated space&quot; or text()=&quot;other multifamily buffer space&quot; or text()=&quot;other non-freezing space&quot;] or not(h:ExteriorAdjacentTo)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected ExteriorAdjacentTo to be 'outside' or 'attic - vented' or 'attic - unvented' or 'basement - conditioned' or 'basement - unconditioned' or 'crawlspace - vented' or 'crawlspace - unvented' or 'crawlspace - conditioned' or 'garage' or 'other housing unit' or 'other heated space' or 'other multifamily buffer space' or 'other non-freezing space'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:InteriorAdjacentTo) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:InteriorAdjacentTo) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: InteriorAdjacentTo</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="h:InteriorAdjacentTo[text()=&quot;living space&quot; or text()=&quot;attic - vented&quot; or text()=&quot;attic - unvented&quot; or text()=&quot;basement - conditioned&quot; or text()=&quot;basement - unconditioned&quot; or text()=&quot;crawlspace - vented&quot; or text()=&quot;crawlspace - unvented&quot; or text()=&quot;crawlspace - conditioned&quot; or text()=&quot;garage&quot;] or not(h:InteriorAdjacentTo)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="h:InteriorAdjacentTo[text()=&quot;living space&quot; or text()=&quot;attic - vented&quot; or text()=&quot;attic - unvented&quot; or text()=&quot;basement - conditioned&quot; or text()=&quot;basement - unconditioned&quot; or text()=&quot;crawlspace - vented&quot; or text()=&quot;crawlspace - unvented&quot; or text()=&quot;crawlspace - conditioned&quot; or text()=&quot;garage&quot;] or not(h:InteriorAdjacentTo)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected InteriorAdjacentTo to be 'living space' or 'attic - vented' or 'attic - unvented' or 'basement - conditioned' or 'basement - unconditioned' or 'crawlspace - vented' or 'crawlspace - unvented' or 'crawlspace - conditioned' or 'garage'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Area) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Area) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: Area</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Azimuth) + count(h:Orientation) &gt;= 0"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Azimuth) + count(h:Orientation) &gt;= 0"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or more element(s) for xpath: Azimuth | Orientation</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Siding) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Siding) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: Siding</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="h:Siding[text()=&quot;wood siding&quot; or text()=&quot;vinyl siding&quot; or text()=&quot;stucco&quot; or text()=&quot;fiber cement siding&quot; or text()=&quot;brick veneer&quot; or text()=&quot;aluminum siding&quot; or text()=&quot;masonite siding&quot; or text()=&quot;composite shingle siding&quot; or text()=&quot;asbestos siding&quot; or text()=&quot;synthetic stucco&quot; or text()=&quot;none&quot;] or not(h:Siding)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="h:Siding[text()=&quot;wood siding&quot; or text()=&quot;vinyl siding&quot; or text()=&quot;stucco&quot; or text()=&quot;fiber cement siding&quot; or text()=&quot;brick veneer&quot; or text()=&quot;aluminum siding&quot; or text()=&quot;masonite siding&quot; or text()=&quot;composite shingle siding&quot; or text()=&quot;asbestos siding&quot; or text()=&quot;synthetic stucco&quot; or text()=&quot;none&quot;] or not(h:Siding)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected Siding to be 'wood siding' or 'vinyl siding' or 'stucco' or 'fiber cement siding' or 'brick veneer' or 'aluminum siding' or 'masonite siding' or 'composite shingle siding' or 'asbestos siding' or 'synthetic stucco' or 'none'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Color) + count(h:SolarAbsorptance) &gt;= 0"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Color) + count(h:SolarAbsorptance) &gt;= 0"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or more element(s) for xpath: Color | SolarAbsorptance</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Emittance) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Emittance) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: Emittance</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Insulation/h:AssemblyEffectiveRValue) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Insulation/h:AssemblyEffectiveRValue) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: Insulation/AssemblyEffectiveRValue</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M26"/></axsl:template><axsl:template match="text()" priority="-1" mode="M26"/><axsl:template match="@*|node()" priority="-2" mode="M26"><axsl:apply-templates select="*" mode="M26"/></axsl:template>

<!--PATTERN [Wall]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[Wall]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Enclosure/h:Walls/h:Wall" priority="1000" mode="M27"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Enclosure/h:Walls/h:Wall"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:ExteriorAdjacentTo) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:ExteriorAdjacentTo) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: ExteriorAdjacentTo</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="h:ExteriorAdjacentTo[text()=&quot;outside&quot; or text()=&quot;attic - vented&quot; or text()=&quot;attic - unvented&quot; or text()=&quot;basement - conditioned&quot; or text()=&quot;basement - unconditioned&quot; or text()=&quot;crawlspace - vented&quot; or text()=&quot;crawlspace - unvented&quot; or text()=&quot;crawlspace - conditioned&quot; or text()=&quot;garage&quot; or text()=&quot;other housing unit&quot; or text()=&quot;other heated space&quot; or text()=&quot;other multifamily buffer space&quot; or text()=&quot;other non-freezing space&quot;] or not(h:ExteriorAdjacentTo)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="h:ExteriorAdjacentTo[text()=&quot;outside&quot; or text()=&quot;attic - vented&quot; or text()=&quot;attic - unvented&quot; or text()=&quot;basement - conditioned&quot; or text()=&quot;basement - unconditioned&quot; or text()=&quot;crawlspace - vented&quot; or text()=&quot;crawlspace - unvented&quot; or text()=&quot;crawlspace - conditioned&quot; or text()=&quot;garage&quot; or text()=&quot;other housing unit&quot; or text()=&quot;other heated space&quot; or text()=&quot;other multifamily buffer space&quot; or text()=&quot;other non-freezing space&quot;] or not(h:ExteriorAdjacentTo)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected ExteriorAdjacentTo to be 'outside' or 'attic - vented' or 'attic - unvented' or 'basement - conditioned' or 'basement - unconditioned' or 'crawlspace - vented' or 'crawlspace - unvented' or 'crawlspace - conditioned' or 'garage' or 'other housing unit' or 'other heated space' or 'other multifamily buffer space' or 'other non-freezing space'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:InteriorAdjacentTo) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:InteriorAdjacentTo) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: InteriorAdjacentTo</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="h:InteriorAdjacentTo[text()=&quot;living space&quot; or text()=&quot;attic - vented&quot; or text()=&quot;attic - unvented&quot; or text()=&quot;basement - conditioned&quot; or text()=&quot;basement - unconditioned&quot; or text()=&quot;crawlspace - vented&quot; or text()=&quot;crawlspace - unvented&quot; or text()=&quot;crawlspace - conditioned&quot; or text()=&quot;garage&quot;] or not(h:InteriorAdjacentTo)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="h:InteriorAdjacentTo[text()=&quot;living space&quot; or text()=&quot;attic - vented&quot; or text()=&quot;attic - unvented&quot; or text()=&quot;basement - conditioned&quot; or text()=&quot;basement - unconditioned&quot; or text()=&quot;crawlspace - vented&quot; or text()=&quot;crawlspace - unvented&quot; or text()=&quot;crawlspace - conditioned&quot; or text()=&quot;garage&quot;] or not(h:InteriorAdjacentTo)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected InteriorAdjacentTo to be 'living space' or 'attic - vented' or 'attic - unvented' or 'basement - conditioned' or 'basement - unconditioned' or 'crawlspace - vented' or 'crawlspace - unvented' or 'crawlspace - conditioned' or 'garage'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:WallType[h:WoodStud | h:DoubleWoodStud | h:ConcreteMasonryUnit | h:StructurallyInsulatedPanel | h:InsulatedConcreteForms | h:SteelFrame | h:SolidConcrete | h:StructuralBrick | h:StrawBale | h:Stone | h:LogWall | h:Adobe]) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:WallType[h:WoodStud | h:DoubleWoodStud | h:ConcreteMasonryUnit | h:StructurallyInsulatedPanel | h:InsulatedConcreteForms | h:SteelFrame | h:SolidConcrete | h:StructuralBrick | h:StrawBale | h:Stone | h:LogWall | h:Adobe]) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: WallType[WoodStud | DoubleWoodStud | ConcreteMasonryUnit | StructurallyInsulatedPanel | InsulatedConcreteForms | SteelFrame | SolidConcrete | StructuralBrick | StrawBale | Stone | LogWall | Adobe]</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Area) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Area) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: Area</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Azimuth) + count(h:Orientation) &gt;= 0"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Azimuth) + count(h:Orientation) &gt;= 0"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or more element(s) for xpath: Azimuth | Orientation</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Siding) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Siding) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: Siding</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="h:Siding[text()=&quot;wood siding&quot; or text()=&quot;vinyl siding&quot; or text()=&quot;stucco&quot; or text()=&quot;fiber cement siding&quot; or text()=&quot;brick veneer&quot; or text()=&quot;aluminum siding&quot; or text()=&quot;masonite siding&quot; or text()=&quot;composite shingle siding&quot; or text()=&quot;asbestos siding&quot; or text()=&quot;synthetic stucco&quot; or text()=&quot;none&quot;] or not(h:Siding)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="h:Siding[text()=&quot;wood siding&quot; or text()=&quot;vinyl siding&quot; or text()=&quot;stucco&quot; or text()=&quot;fiber cement siding&quot; or text()=&quot;brick veneer&quot; or text()=&quot;aluminum siding&quot; or text()=&quot;masonite siding&quot; or text()=&quot;composite shingle siding&quot; or text()=&quot;asbestos siding&quot; or text()=&quot;synthetic stucco&quot; or text()=&quot;none&quot;] or not(h:Siding)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected Siding to be 'wood siding' or 'vinyl siding' or 'stucco' or 'fiber cement siding' or 'brick veneer' or 'aluminum siding' or 'masonite siding' or 'composite shingle siding' or 'asbestos siding' or 'synthetic stucco' or 'none'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Color) + count(h:SolarAbsorptance) &gt;= 0"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Color) + count(h:SolarAbsorptance) &gt;= 0"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or more element(s) for xpath: Color | SolarAbsorptance</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Emittance) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Emittance) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: Emittance</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:InteriorFinish/h:Type) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:InteriorFinish/h:Type) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: InteriorFinish/Type</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="h:InteriorFinish/h:Type[text()=&quot;gypsum board&quot; or text()=&quot;gypsum composite board&quot; or text()=&quot;plaster&quot; or text()=&quot;wood&quot; or text()=&quot;none&quot;] or not(h:InteriorFinish/h:Type)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="h:InteriorFinish/h:Type[text()=&quot;gypsum board&quot; or text()=&quot;gypsum composite board&quot; or text()=&quot;plaster&quot; or text()=&quot;wood&quot; or text()=&quot;none&quot;] or not(h:InteriorFinish/h:Type)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected InteriorFinish/Type to be 'gypsum board' or 'gypsum composite board' or 'plaster' or 'wood' or 'none'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:InteriorFinish/h:Thickness) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:InteriorFinish/h:Thickness) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: InteriorFinish/Thickness</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Insulation/h:AssemblyEffectiveRValue) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Insulation/h:AssemblyEffectiveRValue) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: Insulation/AssemblyEffectiveRValue</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M27"/></axsl:template><axsl:template match="text()" priority="-1" mode="M27"/><axsl:template match="@*|node()" priority="-2" mode="M27"><axsl:apply-templates select="*" mode="M27"/></axsl:template>

<!--PATTERN [FoundationWall]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[FoundationWall]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Enclosure/h:FoundationWalls/h:FoundationWall" priority="1000" mode="M28"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Enclosure/h:FoundationWalls/h:FoundationWall"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:ExteriorAdjacentTo) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:ExteriorAdjacentTo) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: ExteriorAdjacentTo</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="h:ExteriorAdjacentTo[text()=&quot;ground&quot; or text()=&quot;basement - conditioned&quot; or text()=&quot;basement - unconditioned&quot; or text()=&quot;crawlspace - vented&quot; or text()=&quot;crawlspace - unvented&quot; or text()=&quot;crawlspace - conditioned&quot; or text()=&quot;garage&quot; or text()=&quot;other housing unit&quot; or text()=&quot;other heated space&quot; or text()=&quot;other multifamily buffer space&quot; or text()=&quot;other non-freezing space&quot;] or not(h:ExteriorAdjacentTo)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="h:ExteriorAdjacentTo[text()=&quot;ground&quot; or text()=&quot;basement - conditioned&quot; or text()=&quot;basement - unconditioned&quot; or text()=&quot;crawlspace - vented&quot; or text()=&quot;crawlspace - unvented&quot; or text()=&quot;crawlspace - conditioned&quot; or text()=&quot;garage&quot; or text()=&quot;other housing unit&quot; or text()=&quot;other heated space&quot; or text()=&quot;other multifamily buffer space&quot; or text()=&quot;other non-freezing space&quot;] or not(h:ExteriorAdjacentTo)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected ExteriorAdjacentTo to be 'ground' or 'basement - conditioned' or 'basement - unconditioned' or 'crawlspace - vented' or 'crawlspace - unvented' or 'crawlspace - conditioned' or 'garage' or 'other housing unit' or 'other heated space' or 'other multifamily buffer space' or 'other non-freezing space'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:InteriorAdjacentTo) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:InteriorAdjacentTo) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: InteriorAdjacentTo</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="h:InteriorAdjacentTo[text()=&quot;basement - conditioned&quot; or text()=&quot;basement - unconditioned&quot; or text()=&quot;crawlspace - vented&quot; or text()=&quot;crawlspace - unvented&quot; or text()=&quot;crawlspace - conditioned&quot; or text()=&quot;garage&quot;] or not(h:InteriorAdjacentTo)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="h:InteriorAdjacentTo[text()=&quot;basement - conditioned&quot; or text()=&quot;basement - unconditioned&quot; or text()=&quot;crawlspace - vented&quot; or text()=&quot;crawlspace - unvented&quot; or text()=&quot;crawlspace - conditioned&quot; or text()=&quot;garage&quot;] or not(h:InteriorAdjacentTo)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected InteriorAdjacentTo to be 'basement - conditioned' or 'basement - unconditioned' or 'crawlspace - vented' or 'crawlspace - unvented' or 'crawlspace - conditioned' or 'garage'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Type) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Type) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: Type</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="h:Type[text()=&quot;solid concrete&quot; or text()=&quot;concrete block&quot; or text()=&quot;concrete block foam core&quot; or text()=&quot;concrete block vermiculite core&quot; or text()=&quot;concrete block perlite core&quot; or text()=&quot;concrete block solid core&quot; or text()=&quot;double brick&quot; or text()=&quot;wood&quot;] or not(h:Type)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="h:Type[text()=&quot;solid concrete&quot; or text()=&quot;concrete block&quot; or text()=&quot;concrete block foam core&quot; or text()=&quot;concrete block vermiculite core&quot; or text()=&quot;concrete block perlite core&quot; or text()=&quot;concrete block solid core&quot; or text()=&quot;double brick&quot; or text()=&quot;wood&quot;] or not(h:Type)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected Type to be 'solid concrete' or 'concrete block' or 'concrete block foam core' or 'concrete block vermiculite core' or 'concrete block perlite core' or 'concrete block solid core' or 'double brick' or 'wood'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Height) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Height) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: Height</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Area) + count(h:Length) &gt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Area) + count(h:Length) &gt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 or more element(s) for xpath: Area | Length</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Azimuth) + count(h:Orientation) &gt;= 0"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Azimuth) + count(h:Orientation) &gt;= 0"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or more element(s) for xpath: Azimuth | Orientation</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Thickness) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Thickness) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: Thickness</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="number(h:Thickness) &gt; 0 or not(h:Thickness)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:Thickness) &gt; 0 or not(h:Thickness)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected Thickness to be greater than 0</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:InteriorFinish/h:Type) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:InteriorFinish/h:Type) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: InteriorFinish/Type</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="h:InteriorFinish/h:Type[text()=&quot;gypsum board&quot; or text()=&quot;gypsum composite board&quot; or text()=&quot;plaster&quot; or text()=&quot;wood&quot; or text()=&quot;none&quot;] or not(h:InteriorFinish/h:Type)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="h:InteriorFinish/h:Type[text()=&quot;gypsum board&quot; or text()=&quot;gypsum composite board&quot; or text()=&quot;plaster&quot; or text()=&quot;wood&quot; or text()=&quot;none&quot;] or not(h:InteriorFinish/h:Type)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected InteriorFinish/Type to be 'gypsum board' or 'gypsum composite board' or 'plaster' or 'wood' or 'none'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:InteriorFinish/h:Thickness) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:InteriorFinish/h:Thickness) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: InteriorFinish/Thickness</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:DepthBelowGrade) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:DepthBelowGrade) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: DepthBelowGrade</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="number(h:DepthBelowGrade) &lt;= number(h:Height) or not(h:DepthBelowGrade) or not(h:Height)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:DepthBelowGrade) &lt;= number(h:Height) or not(h:DepthBelowGrade) or not(h:Height)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected DepthBelowGrade to be less than or equal to Height</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Insulation/h:Layer[h:InstallationType[text()=&quot;continuous - interior&quot;]]) + count(h:Insulation/h:AssemblyEffectiveRValue) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Insulation/h:Layer[h:InstallationType[text()=&quot;continuous - interior&quot;]]) + count(h:Insulation/h:AssemblyEffectiveRValue) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: Insulation/Layer[InstallationType[text()="continuous - interior"]] | Insulation/AssemblyEffectiveRValue</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Insulation/h:Layer[h:InstallationType[text()=&quot;continuous - exterior&quot;]]) + count(h:Insulation/h:AssemblyEffectiveRValue) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Insulation/h:Layer[h:InstallationType[text()=&quot;continuous - exterior&quot;]]) + count(h:Insulation/h:AssemblyEffectiveRValue) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: Insulation/Layer[InstallationType[text()="continuous - exterior"]] | Insulation/AssemblyEffectiveRValue</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--REPORT WARN-->
<axsl:if test="number(h:Thickness) &lt; 1 and number(h:Thickness) &gt; 0"><svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:Thickness) &lt; 1 and number(h:Thickness) &gt; 0"><axsl:attribute name="role">WARN</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Thickness is less than 1 inch; this may indicate incorrect units.</svrl:text></svrl:successful-report></axsl:if>

		<!--REPORT WARN-->
<axsl:if test="number(h:Thickness) &gt; 12"><svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:Thickness) &gt; 12"><axsl:attribute name="role">WARN</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Thickness is greater than 12 inches; this may indicate incorrect units.</svrl:text></svrl:successful-report></axsl:if><axsl:apply-templates select="*" mode="M28"/></axsl:template><axsl:template match="text()" priority="-1" mode="M28"/><axsl:template match="@*|node()" priority="-2" mode="M28"><axsl:apply-templates select="*" mode="M28"/></axsl:template>

<!--PATTERN [FoundationWallType=AdjacentToVentedCrawl]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[FoundationWallType=AdjacentToVentedCrawl]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Enclosure/h:FoundationWalls/h:FoundationWall[h:InteriorAdjacentTo=&quot;crawlspace - vented&quot;]" priority="1000" mode="M29"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Enclosure/h:FoundationWalls/h:FoundationWall[h:InteriorAdjacentTo=&quot;crawlspace - vented&quot;]"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(../../h:Foundations/h:Foundation[h:FoundationType/h:Crawlspace[h:Vented=&quot;true&quot;]]/h:VentilationRate[h:UnitofMeasure=&quot;SLA&quot;]/h:Value) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(../../h:Foundations/h:Foundation[h:FoundationType/h:Crawlspace[h:Vented=&quot;true&quot;]]/h:VentilationRate[h:UnitofMeasure=&quot;SLA&quot;]/h:Value) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: ../../Foundations/Foundation[FoundationType/Crawlspace[Vented="true"]]/VentilationRate[UnitofMeasure="SLA"]/Value</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M29"/></axsl:template><axsl:template match="text()" priority="-1" mode="M29"/><axsl:template match="@*|node()" priority="-2" mode="M29"><axsl:apply-templates select="*" mode="M29"/></axsl:template>

<!--PATTERN [FoundationWallInsulationLayer]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[FoundationWallInsulationLayer]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Enclosure/h:FoundationWalls/h:FoundationWall/h:Insulation/h:Layer[h:InstallationType=&quot;continuous - exterior&quot; or h:InstallationType=&quot;continuous - interior&quot;]" priority="1000" mode="M30"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Enclosure/h:FoundationWalls/h:FoundationWall/h:Insulation/h:Layer[h:InstallationType=&quot;continuous - exterior&quot; or h:InstallationType=&quot;continuous - interior&quot;]"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:NominalRValue) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:NominalRValue) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: NominalRValue</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:DistanceToTopOfInsulation) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:DistanceToTopOfInsulation) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: DistanceToTopOfInsulation</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:DistanceToBottomOfInsulation) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:DistanceToBottomOfInsulation) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: DistanceToBottomOfInsulation</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="number(h:DistanceToBottomOfInsulation) &gt;= number(h:DistanceToTopOfInsulation) or not(h:DistanceToBottomOfInsulation) or not(h:DistanceToTopOfInsulation)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:DistanceToBottomOfInsulation) &gt;= number(h:DistanceToTopOfInsulation) or not(h:DistanceToBottomOfInsulation) or not(h:DistanceToTopOfInsulation)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected DistanceToBottomOfInsulation to be greater than or equal to DistanceToTopOfInsulation</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="number(h:DistanceToBottomOfInsulation) &lt;= number(../../h:Height) or not(h:DistanceToBottomOfInsulation) or not(../../h:Height)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:DistanceToBottomOfInsulation) &lt;= number(../../h:Height) or not(h:DistanceToBottomOfInsulation) or not(../../h:Height)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected DistanceToBottomOfInsulation to be less than or equal to ../../Height</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M30"/></axsl:template><axsl:template match="text()" priority="-1" mode="M30"/><axsl:template match="@*|node()" priority="-2" mode="M30"><axsl:apply-templates select="*" mode="M30"/></axsl:template>

<!--PATTERN [FrameFloor]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[FrameFloor]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Enclosure/h:FrameFloors/h:FrameFloor" priority="1000" mode="M31"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Enclosure/h:FrameFloors/h:FrameFloor"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:ExteriorAdjacentTo) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:ExteriorAdjacentTo) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: ExteriorAdjacentTo</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="h:ExteriorAdjacentTo[text()=&quot;outside&quot; or text()=&quot;attic - vented&quot; or text()=&quot;attic - unvented&quot; or text()=&quot;basement - conditioned&quot; or text()=&quot;basement - unconditioned&quot; or text()=&quot;crawlspace - vented&quot; or text()=&quot;crawlspace - unvented&quot; or text()=&quot;crawlspace - conditioned&quot; or text()=&quot;garage&quot; or text()=&quot;other housing unit&quot; or text()=&quot;other heated space&quot; or text()=&quot;other multifamily buffer space&quot; or text()=&quot;other non-freezing space&quot;] or not(h:ExteriorAdjacentTo)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="h:ExteriorAdjacentTo[text()=&quot;outside&quot; or text()=&quot;attic - vented&quot; or text()=&quot;attic - unvented&quot; or text()=&quot;basement - conditioned&quot; or text()=&quot;basement - unconditioned&quot; or text()=&quot;crawlspace - vented&quot; or text()=&quot;crawlspace - unvented&quot; or text()=&quot;crawlspace - conditioned&quot; or text()=&quot;garage&quot; or text()=&quot;other housing unit&quot; or text()=&quot;other heated space&quot; or text()=&quot;other multifamily buffer space&quot; or text()=&quot;other non-freezing space&quot;] or not(h:ExteriorAdjacentTo)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected ExteriorAdjacentTo to be 'outside' or 'attic - vented' or 'attic - unvented' or 'basement - conditioned' or 'basement - unconditioned' or 'crawlspace - vented' or 'crawlspace - unvented' or 'crawlspace - conditioned' or 'garage' or 'other housing unit' or 'other heated space' or 'other multifamily buffer space' or 'other non-freezing space'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:InteriorAdjacentTo) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:InteriorAdjacentTo) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: InteriorAdjacentTo</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="h:InteriorAdjacentTo[text()=&quot;living space&quot; or text()=&quot;attic - vented&quot; or text()=&quot;attic - unvented&quot; or text()=&quot;basement - conditioned&quot; or text()=&quot;basement - unconditioned&quot; or text()=&quot;crawlspace - vented&quot; or text()=&quot;crawlspace - unvented&quot; or text()=&quot;crawlspace - conditioned&quot; or text()=&quot;garage&quot;] or not(h:InteriorAdjacentTo)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="h:InteriorAdjacentTo[text()=&quot;living space&quot; or text()=&quot;attic - vented&quot; or text()=&quot;attic - unvented&quot; or text()=&quot;basement - conditioned&quot; or text()=&quot;basement - unconditioned&quot; or text()=&quot;crawlspace - vented&quot; or text()=&quot;crawlspace - unvented&quot; or text()=&quot;crawlspace - conditioned&quot; or text()=&quot;garage&quot;] or not(h:InteriorAdjacentTo)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected InteriorAdjacentTo to be 'living space' or 'attic - vented' or 'attic - unvented' or 'basement - conditioned' or 'basement - unconditioned' or 'crawlspace - vented' or 'crawlspace - unvented' or 'crawlspace - conditioned' or 'garage'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Area) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Area) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: Area</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:InteriorFinish/h:Type) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:InteriorFinish/h:Type) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: InteriorFinish/Type</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="h:InteriorFinish/h:Type[text()=&quot;gypsum board&quot; or text()=&quot;gypsum composite board&quot; or text()=&quot;plaster&quot; or text()=&quot;wood&quot; or text()=&quot;none&quot;] or not(h:InteriorFinish/h:Type)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="h:InteriorFinish/h:Type[text()=&quot;gypsum board&quot; or text()=&quot;gypsum composite board&quot; or text()=&quot;plaster&quot; or text()=&quot;wood&quot; or text()=&quot;none&quot;] or not(h:InteriorFinish/h:Type)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected InteriorFinish/Type to be 'gypsum board' or 'gypsum composite board' or 'plaster' or 'wood' or 'none'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:InteriorFinish/h:Thickness) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:InteriorFinish/h:Thickness) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: InteriorFinish/Thickness</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Insulation/h:AssemblyEffectiveRValue) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Insulation/h:AssemblyEffectiveRValue) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: Insulation/AssemblyEffectiveRValue</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M31"/></axsl:template><axsl:template match="text()" priority="-1" mode="M31"/><axsl:template match="@*|node()" priority="-2" mode="M31"><axsl:apply-templates select="*" mode="M31"/></axsl:template>

<!--PATTERN [FrameFloorType=AdjacentToOther]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[FrameFloorType=AdjacentToOther]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Enclosure/h:FrameFloors/h:FrameFloor[h:ExteriorAdjacentTo[text()=&quot;other housing unit&quot; or text()=&quot;other heated space&quot; or text()=&quot;other multifamily buffer space&quot; or text()=&quot;other non-freezing space&quot;]]" priority="1000" mode="M32"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Enclosure/h:FrameFloors/h:FrameFloor[h:ExteriorAdjacentTo[text()=&quot;other housing unit&quot; or text()=&quot;other heated space&quot; or text()=&quot;other multifamily buffer space&quot; or text()=&quot;other non-freezing space&quot;]]"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:extension/h:OtherSpaceAboveOrBelow[text()=&quot;above&quot; or text()=&quot;below&quot;]) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:extension/h:OtherSpaceAboveOrBelow[text()=&quot;above&quot; or text()=&quot;below&quot;]) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: extension/OtherSpaceAboveOrBelow[text()="above" or text()="below"]</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M32"/></axsl:template><axsl:template match="text()" priority="-1" mode="M32"/><axsl:template match="@*|node()" priority="-2" mode="M32"><axsl:apply-templates select="*" mode="M32"/></axsl:template>

<!--PATTERN [Slab]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[Slab]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Enclosure/h:Slabs/h:Slab" priority="1000" mode="M33"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Enclosure/h:Slabs/h:Slab"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:InteriorAdjacentTo) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:InteriorAdjacentTo) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: InteriorAdjacentTo</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="h:InteriorAdjacentTo[text()=&quot;living space&quot; or text()=&quot;basement - conditioned&quot; or text()=&quot;basement - unconditioned&quot; or text()=&quot;crawlspace - vented&quot; or text()=&quot;crawlspace - unvented&quot; or text()=&quot;crawlspace - conditioned&quot; or text()=&quot;garage&quot;] or not(h:InteriorAdjacentTo)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="h:InteriorAdjacentTo[text()=&quot;living space&quot; or text()=&quot;basement - conditioned&quot; or text()=&quot;basement - unconditioned&quot; or text()=&quot;crawlspace - vented&quot; or text()=&quot;crawlspace - unvented&quot; or text()=&quot;crawlspace - conditioned&quot; or text()=&quot;garage&quot;] or not(h:InteriorAdjacentTo)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected InteriorAdjacentTo to be 'living space' or 'basement - conditioned' or 'basement - unconditioned' or 'crawlspace - vented' or 'crawlspace - unvented' or 'crawlspace - conditioned' or 'garage'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Area) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Area) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: Area</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Thickness) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Thickness) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: Thickness</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:ExposedPerimeter) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:ExposedPerimeter) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: ExposedPerimeter</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:DepthBelowGrade) + count(h:InteriorAdjacentTo[text()!=&quot;living space&quot; and text()!=&quot;garage&quot;]) &gt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:DepthBelowGrade) + count(h:InteriorAdjacentTo[text()!=&quot;living space&quot; and text()!=&quot;garage&quot;]) &gt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 or more element(s) for xpath: DepthBelowGrade | InteriorAdjacentTo[text()!="living space" and text()!="garage"]</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:PerimeterInsulation/h:Layer/h:NominalRValue) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:PerimeterInsulation/h:Layer/h:NominalRValue) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: PerimeterInsulation/Layer/NominalRValue</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:PerimeterInsulation/h:Layer/h:InsulationDepth) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:PerimeterInsulation/h:Layer/h:InsulationDepth) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: PerimeterInsulation/Layer/InsulationDepth</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:UnderSlabInsulation/h:Layer/h:NominalRValue) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:UnderSlabInsulation/h:Layer/h:NominalRValue) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: UnderSlabInsulation/Layer/NominalRValue</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:UnderSlabInsulation/h:Layer/h:InsulationWidth) + count(h:UnderSlabInsulation/h:Layer/h:InsulationSpansEntireSlab[text()=&quot;true&quot;]) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:UnderSlabInsulation/h:Layer/h:InsulationWidth) + count(h:UnderSlabInsulation/h:Layer/h:InsulationSpansEntireSlab[text()=&quot;true&quot;]) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: UnderSlabInsulation/Layer/InsulationWidth | UnderSlabInsulation/Layer/InsulationSpansEntireSlab[text()="true"]</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:extension/h:CarpetFraction) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:extension/h:CarpetFraction) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: extension/CarpetFraction</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:extension/h:CarpetRValue) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:extension/h:CarpetRValue) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: extension/CarpetRValue</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--REPORT WARN-->
<axsl:if test="number(h:ExposedPerimeter) = 0"><svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:ExposedPerimeter) = 0"><axsl:attribute name="role">WARN</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Slab has zero exposed perimeter, this may indicate an input error.</svrl:text></svrl:successful-report></axsl:if>

		<!--REPORT WARN-->
<axsl:if test="number(h:Thickness) &lt; 1 and number(h:Thickness) &gt; 0"><svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:Thickness) &lt; 1 and number(h:Thickness) &gt; 0"><axsl:attribute name="role">WARN</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Thickness is less than 1 inch; this may indicate incorrect units.</svrl:text></svrl:successful-report></axsl:if>

		<!--REPORT WARN-->
<axsl:if test="number(h:Thickness) &gt; 12"><svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:Thickness) &gt; 12"><axsl:attribute name="role">WARN</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Thickness is greater than 12 inches; this may indicate incorrect units.</svrl:text></svrl:successful-report></axsl:if><axsl:apply-templates select="*" mode="M33"/></axsl:template><axsl:template match="text()" priority="-1" mode="M33"/><axsl:template match="@*|node()" priority="-2" mode="M33"><axsl:apply-templates select="*" mode="M33"/></axsl:template>

<!--PATTERN [Window]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[Window]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Enclosure/h:Windows/h:Window" priority="1000" mode="M34"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Enclosure/h:Windows/h:Window"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Area) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Area) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: Area</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Azimuth) + count(h:Orientation) &gt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Azimuth) + count(h:Orientation) &gt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 or more element(s) for xpath: Azimuth | Orientation</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:UFactor) + count(h:GlassLayers) &gt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:UFactor) + count(h:GlassLayers) &gt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 or more element(s) for xpath: UFactor | GlassLayers</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:SHGC) + count(h:GlassLayers) &gt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:SHGC) + count(h:GlassLayers) &gt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 or more element(s) for xpath: SHGC | GlassLayers</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="h:GlassLayers[text()=&quot;single-pane&quot; or text()=&quot;double-pane&quot; or text()=&quot;triple-pane&quot; or text()=&quot;glass block&quot;] or not(h:GlassLayers) or h:UFactor"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="h:GlassLayers[text()=&quot;single-pane&quot; or text()=&quot;double-pane&quot; or text()=&quot;triple-pane&quot; or text()=&quot;glass block&quot;] or not(h:GlassLayers) or h:UFactor"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected GlassLayers to be 'single-pane' or 'double-pane' or 'triple-pane' or 'glass block'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:ExteriorShading/h:SummerShadingCoefficient) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:ExteriorShading/h:SummerShadingCoefficient) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: ExteriorShading/SummerShadingCoefficient</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:ExteriorShading/h:WinterShadingCoefficient) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:ExteriorShading/h:WinterShadingCoefficient) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: ExteriorShading/WinterShadingCoefficient</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:InteriorShading/h:SummerShadingCoefficient) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:InteriorShading/h:SummerShadingCoefficient) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: InteriorShading/SummerShadingCoefficient</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:InteriorShading/h:WinterShadingCoefficient) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:InteriorShading/h:WinterShadingCoefficient) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: InteriorShading/WinterShadingCoefficient</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:StormWindow) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:StormWindow) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: StormWindow</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Overhangs) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Overhangs) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: Overhangs</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:FractionOperable) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:FractionOperable) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: FractionOperable</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:AttachedToWall) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:AttachedToWall) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: AttachedToWall</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M34"/></axsl:template><axsl:template match="text()" priority="-1" mode="M34"/><axsl:template match="@*|node()" priority="-2" mode="M34"><axsl:apply-templates select="*" mode="M34"/></axsl:template>

<!--PATTERN [Window=PhysicalProperties]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[Window=PhysicalProperties]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Enclosure/h:Windows/h:Window[not(h:UFactor) and h:GlassLayers[text()=&quot;single-pane&quot; or text()=&quot;double-pane&quot; or text()=&quot;triple-pane&quot;]]" priority="1000" mode="M35"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Enclosure/h:Windows/h:Window[not(h:UFactor) and h:GlassLayers[text()=&quot;single-pane&quot; or text()=&quot;double-pane&quot; or text()=&quot;triple-pane&quot;]]"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:FrameType[h:Aluminum | h:Fiberglass | h:Metal | h:Vinyl | h:Wood]) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:FrameType[h:Aluminum | h:Fiberglass | h:Metal | h:Vinyl | h:Wood]) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: FrameType[Aluminum | Fiberglass | Metal | Vinyl | Wood]</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:GlassType) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:GlassType) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: GlassType</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="h:GlassType[text()=&quot;clear&quot; or text()=&quot;low-e&quot; or text()=&quot;tinted&quot; or text()=&quot;tinted/reflective&quot; or text()=&quot;reflective&quot;] or not(h:GlassType)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="h:GlassType[text()=&quot;clear&quot; or text()=&quot;low-e&quot; or text()=&quot;tinted&quot; or text()=&quot;tinted/reflective&quot; or text()=&quot;reflective&quot;] or not(h:GlassType)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected GlassType to be 'clear' or 'low-e' or 'tinted' or 'tinted/reflective' or 'reflective'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:GasFill) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:GasFill) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: GasFill</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="h:GasFill[text()=&quot;air&quot; or text()=&quot;argon&quot; or text()=&quot;krypton&quot; or text()=&quot;xenon&quot; or text()=&quot;nitrogen&quot; or text()=&quot;other&quot;] or not(h:GasFill)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="h:GasFill[text()=&quot;air&quot; or text()=&quot;argon&quot; or text()=&quot;krypton&quot; or text()=&quot;xenon&quot; or text()=&quot;nitrogen&quot; or text()=&quot;other&quot;] or not(h:GasFill)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected GasFill to be 'air' or 'argon' or 'krypton' or 'xenon' or 'nitrogen' or 'other'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M35"/></axsl:template><axsl:template match="text()" priority="-1" mode="M35"/><axsl:template match="@*|node()" priority="-2" mode="M35"><axsl:apply-templates select="*" mode="M35"/></axsl:template>

<!--PATTERN [Window=MetalFrame]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[Window=MetalFrame]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Enclosure/h:Windows/h:Window/h:FrameType/h:Metal | /h:HPXML/h:Building/h:BuildingDetails/h:Enclosure/h:Windows/h:Window/h:FrameType/h:Aluminum" priority="1000" mode="M36"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Enclosure/h:Windows/h:Window/h:FrameType/h:Metal | /h:HPXML/h:Building/h:BuildingDetails/h:Enclosure/h:Windows/h:Window/h:FrameType/h:Aluminum"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:ThermalBreak) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:ThermalBreak) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: ThermalBreak</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M36"/></axsl:template><axsl:template match="text()" priority="-1" mode="M36"/><axsl:template match="@*|node()" priority="-2" mode="M36"><axsl:apply-templates select="*" mode="M36"/></axsl:template>

<!--PATTERN [WindowStorm]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[WindowStorm]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Enclosure/h:Windows/h:Window/h:StormWindow" priority="1000" mode="M37"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Enclosure/h:Windows/h:Window/h:StormWindow"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:GlassType) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:GlassType) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: GlassType</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="h:GlassType[text()=&quot;clear&quot; or text()=&quot;low-e&quot;] or not(h:GlassType)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="h:GlassType[text()=&quot;clear&quot; or text()=&quot;low-e&quot;] or not(h:GlassType)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected GlassType to be 'clear' or 'low-e'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M37"/></axsl:template><axsl:template match="text()" priority="-1" mode="M37"/><axsl:template match="@*|node()" priority="-2" mode="M37"><axsl:apply-templates select="*" mode="M37"/></axsl:template>

<!--PATTERN [WindowOverhangs]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[WindowOverhangs]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Enclosure/h:Windows/h:Window/h:Overhangs" priority="1000" mode="M38"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Enclosure/h:Windows/h:Window/h:Overhangs"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Depth) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Depth) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: Depth</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--REPORT WARN-->
<axsl:if test="number(h:Depth) &gt; 72"><svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:Depth) &gt; 72"><axsl:attribute name="role">WARN</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Depth is greater than 72 feet; this may indicate incorrect units.</svrl:text></svrl:successful-report></axsl:if><axsl:apply-templates select="*" mode="M38"/></axsl:template><axsl:template match="text()" priority="-1" mode="M38"/><axsl:template match="@*|node()" priority="-2" mode="M38"><axsl:apply-templates select="*" mode="M38"/></axsl:template>

<!--PATTERN [WindowOverhangs=Present]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[WindowOverhangs=Present]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Enclosure/h:Windows/h:Window/h:Overhangs[number(h:Depth) &gt; 0]" priority="1000" mode="M39"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Enclosure/h:Windows/h:Window/h:Overhangs[number(h:Depth) &gt; 0]"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:DistanceToTopOfWindow) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:DistanceToTopOfWindow) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: DistanceToTopOfWindow</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:DistanceToBottomOfWindow) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:DistanceToBottomOfWindow) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: DistanceToBottomOfWindow</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="number(h:DistanceToBottomOfWindow) &gt; number(h:DistanceToTopOfWindow) or not(h:DistanceToBottomOfWindow) or not(h:DistanceToTopOfWindow)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:DistanceToBottomOfWindow) &gt; number(h:DistanceToTopOfWindow) or not(h:DistanceToBottomOfWindow) or not(h:DistanceToTopOfWindow)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected DistanceToBottomOfWindow to be greater than DistanceToTopOfWindow</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--REPORT WARN-->
<axsl:if test="number(h:DistanceToTopOfWindow) &gt; 12"><svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:DistanceToTopOfWindow) &gt; 12"><axsl:attribute name="role">WARN</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>DistanceToTopOfWindow is greater than 12 feet; this may indicate incorrect units.</svrl:text></svrl:successful-report></axsl:if><axsl:apply-templates select="*" mode="M39"/></axsl:template><axsl:template match="text()" priority="-1" mode="M39"/><axsl:template match="@*|node()" priority="-2" mode="M39"><axsl:apply-templates select="*" mode="M39"/></axsl:template>

<!--PATTERN [Skylight]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[Skylight]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Enclosure/h:Skylights/h:Skylight" priority="1000" mode="M40"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Enclosure/h:Skylights/h:Skylight"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Area) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Area) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: Area</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Azimuth) + count(h:Orientation) &gt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Azimuth) + count(h:Orientation) &gt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 or more element(s) for xpath: Azimuth | Orientation</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:UFactor) + count(h:GlassLayers) &gt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:UFactor) + count(h:GlassLayers) &gt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 or more element(s) for xpath: UFactor | GlassLayers</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:SHGC) + count(h:GlassLayers) &gt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:SHGC) + count(h:GlassLayers) &gt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 or more element(s) for xpath: SHGC | GlassLayers</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="h:GlassLayers[text()=&quot;single-pane&quot; or text()=&quot;double-pane&quot; or text()=&quot;triple-pane&quot; or text()=&quot;glass block&quot;] or not(h:GlassLayers) or h:UFactor"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="h:GlassLayers[text()=&quot;single-pane&quot; or text()=&quot;double-pane&quot; or text()=&quot;triple-pane&quot; or text()=&quot;glass block&quot;] or not(h:GlassLayers) or h:UFactor"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected GlassLayers to be 'single-pane' or 'double-pane' or 'triple-pane' or 'glass block'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:ExteriorShading/h:SummerShadingCoefficient) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:ExteriorShading/h:SummerShadingCoefficient) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: ExteriorShading/SummerShadingCoefficient</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:ExteriorShading/h:WinterShadingCoefficient) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:ExteriorShading/h:WinterShadingCoefficient) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: ExteriorShading/WinterShadingCoefficient</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:InteriorShading/h:SummerShadingCoefficient) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:InteriorShading/h:SummerShadingCoefficient) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: InteriorShading/SummerShadingCoefficient</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:InteriorShading/h:WinterShadingCoefficient) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:InteriorShading/h:WinterShadingCoefficient) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: InteriorShading/WinterShadingCoefficient</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:StormWindow) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:StormWindow) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: StormWindow</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:AttachedToRoof) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:AttachedToRoof) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: AttachedToRoof</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M40"/></axsl:template><axsl:template match="text()" priority="-1" mode="M40"/><axsl:template match="@*|node()" priority="-2" mode="M40"><axsl:apply-templates select="*" mode="M40"/></axsl:template>

<!--PATTERN [Skylight=PhysicalProperties]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[Skylight=PhysicalProperties]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Enclosure/h:Skylights/h:Skylight[not(h:UFactor) and h:GlassLayers[text()=&quot;single-pane&quot; or text()=&quot;double-pane&quot; or text()=&quot;triple-pane&quot;]]" priority="1000" mode="M41"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Enclosure/h:Skylights/h:Skylight[not(h:UFactor) and h:GlassLayers[text()=&quot;single-pane&quot; or text()=&quot;double-pane&quot; or text()=&quot;triple-pane&quot;]]"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:FrameType[h:Aluminum | h:Fiberglass | h:Metal | h:Vinyl | h:Wood]) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:FrameType[h:Aluminum | h:Fiberglass | h:Metal | h:Vinyl | h:Wood]) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: FrameType[Aluminum | Fiberglass | Metal | Vinyl | Wood]</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:GlassType) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:GlassType) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: GlassType</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="h:GlassType[text()=&quot;clear&quot; or text()=&quot;low-e&quot; or text()=&quot;tinted&quot; or text()=&quot;tinted/reflective&quot; or text()=&quot;reflective&quot;] or not(h:GlassType)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="h:GlassType[text()=&quot;clear&quot; or text()=&quot;low-e&quot; or text()=&quot;tinted&quot; or text()=&quot;tinted/reflective&quot; or text()=&quot;reflective&quot;] or not(h:GlassType)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected GlassType to be 'clear' or 'low-e' or 'tinted' or 'tinted/reflective' or 'reflective'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:GasFill) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:GasFill) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: GasFill</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="h:GasFill[text()=&quot;air&quot; or text()=&quot;argon&quot; or text()=&quot;krypton&quot; or text()=&quot;xenon&quot; or text()=&quot;nitrogen&quot; or text()=&quot;other&quot;] or not(h:GasFill)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="h:GasFill[text()=&quot;air&quot; or text()=&quot;argon&quot; or text()=&quot;krypton&quot; or text()=&quot;xenon&quot; or text()=&quot;nitrogen&quot; or text()=&quot;other&quot;] or not(h:GasFill)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected GasFill to be 'air' or 'argon' or 'krypton' or 'xenon' or 'nitrogen' or 'other'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M41"/></axsl:template><axsl:template match="text()" priority="-1" mode="M41"/><axsl:template match="@*|node()" priority="-2" mode="M41"><axsl:apply-templates select="*" mode="M41"/></axsl:template>

<!--PATTERN [Skylight=MetalFrame]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[Skylight=MetalFrame]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Enclosure/h:Skylights/h:Skylight/h:FrameType/h:Metal | /h:HPXML/h:Building/h:BuildingDetails/h:Enclosure/h:Skylights/h:Skylight/h:FrameType/h:Aluminum" priority="1000" mode="M42"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Enclosure/h:Skylights/h:Skylight/h:FrameType/h:Metal | /h:HPXML/h:Building/h:BuildingDetails/h:Enclosure/h:Skylights/h:Skylight/h:FrameType/h:Aluminum"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:ThermalBreak) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:ThermalBreak) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: ThermalBreak</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M42"/></axsl:template><axsl:template match="text()" priority="-1" mode="M42"/><axsl:template match="@*|node()" priority="-2" mode="M42"><axsl:apply-templates select="*" mode="M42"/></axsl:template>

<!--PATTERN [SkylightStorm]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[SkylightStorm]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Enclosure/h:Skylights/h:Skylight/h:StormWindow" priority="1000" mode="M43"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Enclosure/h:Skylights/h:Skylight/h:StormWindow"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:GlassType) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:GlassType) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: GlassType</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="h:GlassType[text()=&quot;clear&quot; or text()=&quot;low-e&quot;] or not(h:GlassType)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="h:GlassType[text()=&quot;clear&quot; or text()=&quot;low-e&quot;] or not(h:GlassType)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected GlassType to be 'clear' or 'low-e'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M43"/></axsl:template><axsl:template match="text()" priority="-1" mode="M43"/><axsl:template match="@*|node()" priority="-2" mode="M43"><axsl:apply-templates select="*" mode="M43"/></axsl:template>

<!--PATTERN [Door]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[Door]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Enclosure/h:Doors/h:Door" priority="1000" mode="M44"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Enclosure/h:Doors/h:Door"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:AttachedToWall) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:AttachedToWall) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: AttachedToWall</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Area) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Area) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: Area</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Azimuth) + count(h:Orientation) &gt;= 0"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Azimuth) + count(h:Orientation) &gt;= 0"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or more element(s) for xpath: Azimuth | Orientation</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:RValue) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:RValue) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: RValue</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M44"/></axsl:template><axsl:template match="text()" priority="-1" mode="M44"/><axsl:template match="@*|node()" priority="-2" mode="M44"><axsl:apply-templates select="*" mode="M44"/></axsl:template>

<!--PATTERN [PartitionWallMass]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[PartitionWallMass]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Enclosure/h:extension/h:PartitionWallMass" priority="1000" mode="M45"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Enclosure/h:extension/h:PartitionWallMass"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:AreaFraction) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:AreaFraction) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: AreaFraction</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="number(h:AreaFraction) &gt;= 0 or not(h:AreaFraction)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:AreaFraction) &gt;= 0 or not(h:AreaFraction)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected AreaFraction to be greater than or equal to 0</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:InteriorFinish/h:Type) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:InteriorFinish/h:Type) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: InteriorFinish/Type</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="h:InteriorFinish/h:Type[text()=&quot;gypsum board&quot; or text()=&quot;gypsum composite board&quot; or text()=&quot;plaster&quot; or text()=&quot;wood&quot; or text()=&quot;none&quot;] or not(h:InteriorFinish/h:Type)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="h:InteriorFinish/h:Type[text()=&quot;gypsum board&quot; or text()=&quot;gypsum composite board&quot; or text()=&quot;plaster&quot; or text()=&quot;wood&quot; or text()=&quot;none&quot;] or not(h:InteriorFinish/h:Type)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected InteriorFinish/Type to be 'gypsum board' or 'gypsum composite board' or 'plaster' or 'wood' or 'none'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:InteriorFinish/h:Thickness) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:InteriorFinish/h:Thickness) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: InteriorFinish/Thickness</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M45"/></axsl:template><axsl:template match="text()" priority="-1" mode="M45"/><axsl:template match="@*|node()" priority="-2" mode="M45"><axsl:apply-templates select="*" mode="M45"/></axsl:template>

<!--PATTERN [FurnitureMass]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[FurnitureMass]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Enclosure/h:extension/h:FurnitureMass" priority="1000" mode="M46"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Enclosure/h:extension/h:FurnitureMass"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:AreaFraction) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:AreaFraction) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: AreaFraction</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="number(h:AreaFraction) &gt;= 0 or not(h:AreaFraction)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:AreaFraction) &gt;= 0 or not(h:AreaFraction)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected AreaFraction to be greater than or equal to 0</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Type) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Type) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: Type</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="h:Type[text()=&quot;light-weight&quot; or text()=&quot;heavy-weight&quot;] or not(h:Type)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="h:Type[text()=&quot;light-weight&quot; or text()=&quot;heavy-weight&quot;] or not(h:Type)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected Type to be 'light-weight' or 'heavy-weight'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M46"/></axsl:template><axsl:template match="text()" priority="-1" mode="M46"/><axsl:template match="@*|node()" priority="-2" mode="M46"><axsl:apply-templates select="*" mode="M46"/></axsl:template>

<!--PATTERN [HeatingSystem]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[HeatingSystem]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:HVAC/h:HVACPlant/h:HeatingSystem" priority="1000" mode="M47"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:HVAC/h:HVACPlant/h:HeatingSystem"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(../../h:HVACControl) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(../../h:HVACControl) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: ../../HVACControl</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:HeatingSystemType[h:ElectricResistance | h:Furnace | h:WallFurnace | h:FloorFurnace | h:Boiler | h:Stove | h:PortableHeater | h:FixedHeater | h:Fireplace | h:PackagedTerminalAirConditionerHeating]) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:HeatingSystemType[h:ElectricResistance | h:Furnace | h:WallFurnace | h:FloorFurnace | h:Boiler | h:Stove | h:PortableHeater | h:FixedHeater | h:Fireplace | h:PackagedTerminalAirConditionerHeating]) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: HeatingSystemType[ElectricResistance | Furnace | WallFurnace | FloorFurnace | Boiler | Stove | PortableHeater | FixedHeater | Fireplace | PackagedTerminalAirConditionerHeating]</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:FractionHeatLoadServed) = 1 or count(../h:HeatPump/h:BackupSystem) &gt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:FractionHeatLoadServed) = 1 or count(../h:HeatPump/h:BackupSystem) &gt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: FractionHeatLoadServed</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M47"/></axsl:template><axsl:template match="text()" priority="-1" mode="M47"/><axsl:template match="@*|node()" priority="-2" mode="M47"><axsl:apply-templates select="*" mode="M47"/></axsl:template>

<!--PATTERN [HeatingSystemType=Resistance]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[HeatingSystemType=Resistance]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:HVAC/h:HVACPlant/h:HeatingSystem[h:HeatingSystemType/h:ElectricResistance]" priority="1000" mode="M48"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:HVAC/h:HVACPlant/h:HeatingSystem[h:HeatingSystemType/h:ElectricResistance]"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:DistributionSystem) = 0"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:DistributionSystem) = 0"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 element(s) for xpath: DistributionSystem</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:HeatingSystemFuel) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:HeatingSystemFuel) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: HeatingSystemFuel</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="h:HeatingSystemFuel[text()=&quot;electricity&quot;] or not(h:HeatingSystemFuel)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="h:HeatingSystemFuel[text()=&quot;electricity&quot;] or not(h:HeatingSystemFuel)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected HeatingSystemFuel to be 'electricity'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:HeatingCapacity) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:HeatingCapacity) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: HeatingCapacity</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:AnnualHeatingEfficiency[h:Units=&quot;Percent&quot;]/h:Value) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:AnnualHeatingEfficiency[h:Units=&quot;Percent&quot;]/h:Value) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: AnnualHeatingEfficiency[Units="Percent"]/Value</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="number(h:AnnualHeatingEfficiency[h:Units=&quot;Percent&quot;]/h:Value) &lt;= 1 or not(h:AnnualHeatingEfficiency[h:Units=&quot;Percent&quot;]/h:Value)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:AnnualHeatingEfficiency[h:Units=&quot;Percent&quot;]/h:Value) &lt;= 1 or not(h:AnnualHeatingEfficiency[h:Units=&quot;Percent&quot;]/h:Value)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected AnnualHeatingEfficiency[Units="Percent"]/Value to be less than or equal to 1</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--REPORT WARN-->
<axsl:if test="number(h:AnnualHeatingEfficiency[h:Units=&quot;Percent&quot;]/h:Value) &lt; 0.95"><svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:AnnualHeatingEfficiency[h:Units=&quot;Percent&quot;]/h:Value) &lt; 0.95"><axsl:attribute name="role">WARN</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Percent efficiency should typically be greater than or equal to 0.95.</svrl:text></svrl:successful-report></axsl:if>

		<!--REPORT WARN-->
<axsl:if test="number(h:HeatingCapacity) &lt;= 1000 and number(h:HeatingCapacity) &gt; 0 and h:HeatingCapacity"><svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:HeatingCapacity) &lt;= 1000 and number(h:HeatingCapacity) &gt; 0 and h:HeatingCapacity"><axsl:attribute name="role">WARN</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Heating capacity should typically be greater than or equal to 1000 Btu/hr.</svrl:text></svrl:successful-report></axsl:if><axsl:apply-templates select="*" mode="M48"/></axsl:template><axsl:template match="text()" priority="-1" mode="M48"/><axsl:template match="@*|node()" priority="-2" mode="M48"><axsl:apply-templates select="*" mode="M48"/></axsl:template>

<!--PATTERN [HeatingSystemType=PTACHeating]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[HeatingSystemType=PTACHeating]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:HVAC/h:HVACPlant/h:HeatingSystem[h:HeatingSystemType/h:PackagedTerminalAirConditionerHeating]" priority="1000" mode="M49"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:HVAC/h:HVACPlant/h:HeatingSystem[h:HeatingSystemType/h:PackagedTerminalAirConditionerHeating]"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:DistributionSystem) = 0"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:DistributionSystem) = 0"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 element(s) for xpath: DistributionSystem</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:HeatingSystemFuel) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:HeatingSystemFuel) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: HeatingSystemFuel</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="h:HeatingSystemFuel[text()=&quot;electricity&quot;] or not(h:HeatingSystemFuel)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="h:HeatingSystemFuel[text()=&quot;electricity&quot;] or not(h:HeatingSystemFuel)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected HeatingSystemFuel to be 'electricity'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:HeatingCapacity) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:HeatingCapacity) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: HeatingCapacity</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:AnnualHeatingEfficiency[h:Units=&quot;Percent&quot;]/h:Value) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:AnnualHeatingEfficiency[h:Units=&quot;Percent&quot;]/h:Value) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: AnnualHeatingEfficiency[Units="Percent"]/Value</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="number(h:AnnualHeatingEfficiency[h:Units=&quot;Percent&quot;]/h:Value) &lt;= 1 or not(h:AnnualHeatingEfficiency[h:Units=&quot;Percent&quot;]/h:Value)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:AnnualHeatingEfficiency[h:Units=&quot;Percent&quot;]/h:Value) &lt;= 1 or not(h:AnnualHeatingEfficiency[h:Units=&quot;Percent&quot;]/h:Value)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected AnnualHeatingEfficiency[Units="Percent"]/Value to be less than or equal to 1</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(../h:CoolingSystem/h:CoolingSystemType[text()=&quot;packaged terminal air conditioner&quot;]) &gt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(../h:CoolingSystem/h:CoolingSystemType[text()=&quot;packaged terminal air conditioner&quot;]) &gt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 or more element(s) for xpath: ../CoolingSystem/CoolingSystemType[text()="packaged terminal air conditioner"]</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--REPORT WARN-->
<axsl:if test="number(h:HeatingCapacity) &lt;= 1000 and number(h:HeatingCapacity) &gt; 0 and h:HeatingCapacity"><svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:HeatingCapacity) &lt;= 1000 and number(h:HeatingCapacity) &gt; 0 and h:HeatingCapacity"><axsl:attribute name="role">WARN</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Heating capacity should typically be greater than or equal to 1000 Btu/hr.</svrl:text></svrl:successful-report></axsl:if><axsl:apply-templates select="*" mode="M49"/></axsl:template><axsl:template match="text()" priority="-1" mode="M49"/><axsl:template match="@*|node()" priority="-2" mode="M49"><axsl:apply-templates select="*" mode="M49"/></axsl:template>

<!--PATTERN [HeatingSystemType=Furnace]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[HeatingSystemType=Furnace]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:HVAC/h:HVACPlant/h:HeatingSystem[h:HeatingSystemType/h:Furnace]" priority="1000" mode="M50"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:HVAC/h:HVACPlant/h:HeatingSystem[h:HeatingSystemType/h:Furnace]"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(../../h:HVACDistribution/h:DistributionSystemType/h:AirDistribution/h:AirDistributionType[text()=&quot;regular velocity&quot; or text()=&quot;gravity&quot;]) + count(../../h:HVACDistribution/h:DistributionSystemType/h:Other[text()=&quot;DSE&quot;]) &gt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(../../h:HVACDistribution/h:DistributionSystemType/h:AirDistribution/h:AirDistributionType[text()=&quot;regular velocity&quot; or text()=&quot;gravity&quot;]) + count(../../h:HVACDistribution/h:DistributionSystemType/h:Other[text()=&quot;DSE&quot;]) &gt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 or more element(s) for xpath: ../../HVACDistribution/DistributionSystemType/AirDistribution/AirDistributionType[text()="regular velocity" or text()="gravity"] | ../../HVACDistribution/DistributionSystemType/Other[text()="DSE"]</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:DistributionSystem) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:DistributionSystem) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: DistributionSystem</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:HeatingSystemFuel) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:HeatingSystemFuel) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: HeatingSystemFuel</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="h:HeatingSystemFuel[text()=&quot;electricity&quot; or text()=&quot;natural gas&quot; or text()=&quot;fuel oil&quot; or text()=&quot;fuel oil 1&quot; or text()=&quot;fuel oil 2&quot; or text()=&quot;fuel oil 4&quot; or text()=&quot;fuel oil 5/6&quot; or text()=&quot;diesel&quot; or text()=&quot;propane&quot; or text()=&quot;kerosene&quot; or text()=&quot;coal&quot; or text()=&quot;coke&quot; or text()=&quot;bituminous coal&quot; or text()=&quot;wood&quot; or text()=&quot;wood pellets&quot;] or not(h:HeatingSystemFuel)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="h:HeatingSystemFuel[text()=&quot;electricity&quot; or text()=&quot;natural gas&quot; or text()=&quot;fuel oil&quot; or text()=&quot;fuel oil 1&quot; or text()=&quot;fuel oil 2&quot; or text()=&quot;fuel oil 4&quot; or text()=&quot;fuel oil 5/6&quot; or text()=&quot;diesel&quot; or text()=&quot;propane&quot; or text()=&quot;kerosene&quot; or text()=&quot;coal&quot; or text()=&quot;coke&quot; or text()=&quot;bituminous coal&quot; or text()=&quot;wood&quot; or text()=&quot;wood pellets&quot;] or not(h:HeatingSystemFuel)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected HeatingSystemFuel to be 'electricity' or 'natural gas' or 'fuel oil' or 'fuel oil 1' or 'fuel oil 2' or 'fuel oil 4' or 'fuel oil 5/6' or 'diesel' or 'propane' or 'kerosene' or 'coal' or 'coke' or 'bituminous coal' or 'wood' or 'wood pellets'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:HeatingCapacity) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:HeatingCapacity) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: HeatingCapacity</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:AnnualHeatingEfficiency[h:Units=&quot;AFUE&quot;]/h:Value) + count(h:YearInstalled) &gt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:AnnualHeatingEfficiency[h:Units=&quot;AFUE&quot;]/h:Value) + count(h:YearInstalled) &gt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 or more element(s) for xpath: AnnualHeatingEfficiency[Units="AFUE"]/Value | YearInstalled</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="number(h:AnnualHeatingEfficiency[h:Units=&quot;AFUE&quot;]/h:Value) &lt;= 1 or not(h:AnnualHeatingEfficiency[h:Units=&quot;AFUE&quot;]/h:Value)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:AnnualHeatingEfficiency[h:Units=&quot;AFUE&quot;]/h:Value) &lt;= 1 or not(h:AnnualHeatingEfficiency[h:Units=&quot;AFUE&quot;]/h:Value)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected AnnualHeatingEfficiency[Units="AFUE"]/Value to be less than or equal to 1</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:extension/h:FanPowerWattsPerCFM) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:extension/h:FanPowerWattsPerCFM) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: extension/FanPowerWattsPerCFM</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="number(h:extension/h:FanPowerWattsPerCFM) &gt;= 0 or not(h:extension/h:FanPowerWattsPerCFM)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:extension/h:FanPowerWattsPerCFM) &gt;= 0 or not(h:extension/h:FanPowerWattsPerCFM)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected extension/FanPowerWattsPerCFM to be greater than or equal to 0</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:extension/h:AirflowDefectRatio) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:extension/h:AirflowDefectRatio) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: extension/AirflowDefectRatio</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="number(h:extension/h:AirflowDefectRatio) &gt;= -0.9 or not(h:extension/h:AirflowDefectRatio)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:extension/h:AirflowDefectRatio) &gt;= -0.9 or not(h:extension/h:AirflowDefectRatio)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected extension/AirflowDefectRatio to be greater than or equal to -0.9</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="number(h:extension/h:AirflowDefectRatio) &lt;= 9 or not(h:extension/h:AirflowDefectRatio)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:extension/h:AirflowDefectRatio) &lt;= 9 or not(h:extension/h:AirflowDefectRatio)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected extension/AirflowDefectRatio to be less than or equal to 9</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--REPORT WARN-->
<axsl:if test="number(h:AnnualHeatingEfficiency[h:Units=&quot;AFUE&quot;]/h:Value) &lt; 0.6"><svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:AnnualHeatingEfficiency[h:Units=&quot;AFUE&quot;]/h:Value) &lt; 0.6"><axsl:attribute name="role">WARN</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>AFUE should typically be greater than or equal to 0.6.</svrl:text></svrl:successful-report></axsl:if>

		<!--REPORT WARN-->
<axsl:if test="number(h:HeatingCapacity) &lt;= 1000 and number(h:HeatingCapacity) &gt; 0 and h:HeatingCapacity"><svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:HeatingCapacity) &lt;= 1000 and number(h:HeatingCapacity) &gt; 0 and h:HeatingCapacity"><axsl:attribute name="role">WARN</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Heating capacity should typically be greater than or equal to 1000 Btu/hr.</svrl:text></svrl:successful-report></axsl:if><axsl:apply-templates select="*" mode="M50"/></axsl:template><axsl:template match="text()" priority="-1" mode="M50"/><axsl:template match="@*|node()" priority="-2" mode="M50"><axsl:apply-templates select="*" mode="M50"/></axsl:template>

<!--PATTERN [HeatingSystemType=WallFurnace]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[HeatingSystemType=WallFurnace]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:HVAC/h:HVACPlant/h:HeatingSystem[h:HeatingSystemType/h:WallFurnace]" priority="1000" mode="M51"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:HVAC/h:HVACPlant/h:HeatingSystem[h:HeatingSystemType/h:WallFurnace]"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:DistributionSystem) = 0"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:DistributionSystem) = 0"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 element(s) for xpath: DistributionSystem</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:HeatingSystemFuel) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:HeatingSystemFuel) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: HeatingSystemFuel</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="h:HeatingSystemFuel[text()=&quot;electricity&quot; or text()=&quot;natural gas&quot; or text()=&quot;fuel oil&quot; or text()=&quot;fuel oil 1&quot; or text()=&quot;fuel oil 2&quot; or text()=&quot;fuel oil 4&quot; or text()=&quot;fuel oil 5/6&quot; or text()=&quot;diesel&quot; or text()=&quot;propane&quot; or text()=&quot;kerosene&quot; or text()=&quot;coal&quot; or text()=&quot;coke&quot; or text()=&quot;bituminous coal&quot; or text()=&quot;wood&quot; or text()=&quot;wood pellets&quot;] or not(h:HeatingSystemFuel)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="h:HeatingSystemFuel[text()=&quot;electricity&quot; or text()=&quot;natural gas&quot; or text()=&quot;fuel oil&quot; or text()=&quot;fuel oil 1&quot; or text()=&quot;fuel oil 2&quot; or text()=&quot;fuel oil 4&quot; or text()=&quot;fuel oil 5/6&quot; or text()=&quot;diesel&quot; or text()=&quot;propane&quot; or text()=&quot;kerosene&quot; or text()=&quot;coal&quot; or text()=&quot;coke&quot; or text()=&quot;bituminous coal&quot; or text()=&quot;wood&quot; or text()=&quot;wood pellets&quot;] or not(h:HeatingSystemFuel)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected HeatingSystemFuel to be 'electricity' or 'natural gas' or 'fuel oil' or 'fuel oil 1' or 'fuel oil 2' or 'fuel oil 4' or 'fuel oil 5/6' or 'diesel' or 'propane' or 'kerosene' or 'coal' or 'coke' or 'bituminous coal' or 'wood' or 'wood pellets'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:HeatingCapacity) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:HeatingCapacity) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: HeatingCapacity</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:AnnualHeatingEfficiency[h:Units=&quot;AFUE&quot;]/h:Value) + count(h:YearInstalled) &gt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:AnnualHeatingEfficiency[h:Units=&quot;AFUE&quot;]/h:Value) + count(h:YearInstalled) &gt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 or more element(s) for xpath: AnnualHeatingEfficiency[Units="AFUE"]/Value | YearInstalled</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="number(h:AnnualHeatingEfficiency[h:Units=&quot;AFUE&quot;]/h:Value) &lt;= 1 or not(h:AnnualHeatingEfficiency[h:Units=&quot;AFUE&quot;]/h:Value)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:AnnualHeatingEfficiency[h:Units=&quot;AFUE&quot;]/h:Value) &lt;= 1 or not(h:AnnualHeatingEfficiency[h:Units=&quot;AFUE&quot;]/h:Value)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected AnnualHeatingEfficiency[Units="AFUE"]/Value to be less than or equal to 1</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:extension/h:FanPowerWatts) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:extension/h:FanPowerWatts) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: extension/FanPowerWatts</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="number(h:extension/h:FanPowerWatts) &gt;= 0 or not(h:extension/h:FanPowerWatts)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:extension/h:FanPowerWatts) &gt;= 0 or not(h:extension/h:FanPowerWatts)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected extension/FanPowerWatts to be greater than or equal to 0</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--REPORT WARN-->
<axsl:if test="number(h:AnnualHeatingEfficiency[h:Units=&quot;AFUE&quot;]/h:Value) &lt; 0.6"><svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:AnnualHeatingEfficiency[h:Units=&quot;AFUE&quot;]/h:Value) &lt; 0.6"><axsl:attribute name="role">WARN</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>AFUE should typically be greater than or equal to 0.6.</svrl:text></svrl:successful-report></axsl:if>

		<!--REPORT WARN-->
<axsl:if test="number(h:HeatingCapacity) &lt;= 1000 and number(h:HeatingCapacity) &gt; 0 and h:HeatingCapacity"><svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:HeatingCapacity) &lt;= 1000 and number(h:HeatingCapacity) &gt; 0 and h:HeatingCapacity"><axsl:attribute name="role">WARN</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Heating capacity should typically be greater than or equal to 1000 Btu/hr.</svrl:text></svrl:successful-report></axsl:if><axsl:apply-templates select="*" mode="M51"/></axsl:template><axsl:template match="text()" priority="-1" mode="M51"/><axsl:template match="@*|node()" priority="-2" mode="M51"><axsl:apply-templates select="*" mode="M51"/></axsl:template>

<!--PATTERN [HeatingSystemType=FloorFurnace]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[HeatingSystemType=FloorFurnace]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:HVAC/h:HVACPlant/h:HeatingSystem[h:HeatingSystemType/h:FloorFurnace]" priority="1000" mode="M52"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:HVAC/h:HVACPlant/h:HeatingSystem[h:HeatingSystemType/h:FloorFurnace]"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:DistributionSystem) = 0"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:DistributionSystem) = 0"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 element(s) for xpath: DistributionSystem</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:HeatingSystemFuel) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:HeatingSystemFuel) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: HeatingSystemFuel</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="h:HeatingSystemFuel[text()=&quot;electricity&quot; or text()=&quot;natural gas&quot; or text()=&quot;fuel oil&quot; or text()=&quot;fuel oil 1&quot; or text()=&quot;fuel oil 2&quot; or text()=&quot;fuel oil 4&quot; or text()=&quot;fuel oil 5/6&quot; or text()=&quot;diesel&quot; or text()=&quot;propane&quot; or text()=&quot;kerosene&quot; or text()=&quot;coal&quot; or text()=&quot;coke&quot; or text()=&quot;bituminous coal&quot; or text()=&quot;wood&quot; or text()=&quot;wood pellets&quot;] or not(h:HeatingSystemFuel)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="h:HeatingSystemFuel[text()=&quot;electricity&quot; or text()=&quot;natural gas&quot; or text()=&quot;fuel oil&quot; or text()=&quot;fuel oil 1&quot; or text()=&quot;fuel oil 2&quot; or text()=&quot;fuel oil 4&quot; or text()=&quot;fuel oil 5/6&quot; or text()=&quot;diesel&quot; or text()=&quot;propane&quot; or text()=&quot;kerosene&quot; or text()=&quot;coal&quot; or text()=&quot;coke&quot; or text()=&quot;bituminous coal&quot; or text()=&quot;wood&quot; or text()=&quot;wood pellets&quot;] or not(h:HeatingSystemFuel)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected HeatingSystemFuel to be 'electricity' or 'natural gas' or 'fuel oil' or 'fuel oil 1' or 'fuel oil 2' or 'fuel oil 4' or 'fuel oil 5/6' or 'diesel' or 'propane' or 'kerosene' or 'coal' or 'coke' or 'bituminous coal' or 'wood' or 'wood pellets'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:HeatingCapacity) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:HeatingCapacity) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: HeatingCapacity</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:AnnualHeatingEfficiency[h:Units=&quot;AFUE&quot;]/h:Value) + count(h:YearInstalled) &gt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:AnnualHeatingEfficiency[h:Units=&quot;AFUE&quot;]/h:Value) + count(h:YearInstalled) &gt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 or more element(s) for xpath: AnnualHeatingEfficiency[Units="AFUE"]/Value | YearInstalled</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="number(h:AnnualHeatingEfficiency[h:Units=&quot;AFUE&quot;]/h:Value) &lt;= 1 or not(h:AnnualHeatingEfficiency[h:Units=&quot;AFUE&quot;]/h:Value)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:AnnualHeatingEfficiency[h:Units=&quot;AFUE&quot;]/h:Value) &lt;= 1 or not(h:AnnualHeatingEfficiency[h:Units=&quot;AFUE&quot;]/h:Value)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected AnnualHeatingEfficiency[Units="AFUE"]/Value to be less than or equal to 1</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:extension/h:FanPowerWatts) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:extension/h:FanPowerWatts) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: extension/FanPowerWatts</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="number(h:extension/h:FanPowerWatts) &gt;= 0 or not(h:extension/h:FanPowerWatts)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:extension/h:FanPowerWatts) &gt;= 0 or not(h:extension/h:FanPowerWatts)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected extension/FanPowerWatts to be greater than or equal to 0</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--REPORT WARN-->
<axsl:if test="number(h:AnnualHeatingEfficiency[h:Units=&quot;AFUE&quot;]/h:Value) &lt; 0.6"><svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:AnnualHeatingEfficiency[h:Units=&quot;AFUE&quot;]/h:Value) &lt; 0.6"><axsl:attribute name="role">WARN</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>AFUE should typically be greater than or equal to 0.6.</svrl:text></svrl:successful-report></axsl:if>

		<!--REPORT WARN-->
<axsl:if test="number(h:HeatingCapacity) &lt;= 1000 and number(h:HeatingCapacity) &gt; 0 and h:HeatingCapacity"><svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:HeatingCapacity) &lt;= 1000 and number(h:HeatingCapacity) &gt; 0 and h:HeatingCapacity"><axsl:attribute name="role">WARN</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Heating capacity should typically be greater than or equal to 1000 Btu/hr.</svrl:text></svrl:successful-report></axsl:if><axsl:apply-templates select="*" mode="M52"/></axsl:template><axsl:template match="text()" priority="-1" mode="M52"/><axsl:template match="@*|node()" priority="-2" mode="M52"><axsl:apply-templates select="*" mode="M52"/></axsl:template>

<!--PATTERN [HeatingSystemType=Boiler]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[HeatingSystemType=Boiler]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:HVAC/h:HVACPlant/h:HeatingSystem[h:HeatingSystemType/h:Boiler]" priority="1000" mode="M53"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:HVAC/h:HVACPlant/h:HeatingSystem[h:HeatingSystemType/h:Boiler]"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:IsSharedSystem) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:IsSharedSystem) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: IsSharedSystem</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:DistributionSystem) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:DistributionSystem) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: DistributionSystem</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:HeatingSystemFuel) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:HeatingSystemFuel) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: HeatingSystemFuel</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="h:HeatingSystemFuel[text()=&quot;electricity&quot; or text()=&quot;natural gas&quot; or text()=&quot;fuel oil&quot; or text()=&quot;fuel oil 1&quot; or text()=&quot;fuel oil 2&quot; or text()=&quot;fuel oil 4&quot; or text()=&quot;fuel oil 5/6&quot; or text()=&quot;diesel&quot; or text()=&quot;propane&quot; or text()=&quot;kerosene&quot; or text()=&quot;coal&quot; or text()=&quot;coke&quot; or text()=&quot;bituminous coal&quot; or text()=&quot;wood&quot; or text()=&quot;wood pellets&quot;] or not(h:HeatingSystemFuel)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="h:HeatingSystemFuel[text()=&quot;electricity&quot; or text()=&quot;natural gas&quot; or text()=&quot;fuel oil&quot; or text()=&quot;fuel oil 1&quot; or text()=&quot;fuel oil 2&quot; or text()=&quot;fuel oil 4&quot; or text()=&quot;fuel oil 5/6&quot; or text()=&quot;diesel&quot; or text()=&quot;propane&quot; or text()=&quot;kerosene&quot; or text()=&quot;coal&quot; or text()=&quot;coke&quot; or text()=&quot;bituminous coal&quot; or text()=&quot;wood&quot; or text()=&quot;wood pellets&quot;] or not(h:HeatingSystemFuel)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected HeatingSystemFuel to be 'electricity' or 'natural gas' or 'fuel oil' or 'fuel oil 1' or 'fuel oil 2' or 'fuel oil 4' or 'fuel oil 5/6' or 'diesel' or 'propane' or 'kerosene' or 'coal' or 'coke' or 'bituminous coal' or 'wood' or 'wood pellets'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:AnnualHeatingEfficiency[h:Units=&quot;AFUE&quot;]/h:Value) + count(h:YearInstalled) &gt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:AnnualHeatingEfficiency[h:Units=&quot;AFUE&quot;]/h:Value) + count(h:YearInstalled) &gt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 or more element(s) for xpath: AnnualHeatingEfficiency[Units="AFUE"]/Value | YearInstalled</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="number(h:AnnualHeatingEfficiency[h:Units=&quot;AFUE&quot;]/h:Value) &lt;= 1 or not(h:AnnualHeatingEfficiency[h:Units=&quot;AFUE&quot;]/h:Value)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:AnnualHeatingEfficiency[h:Units=&quot;AFUE&quot;]/h:Value) &lt;= 1 or not(h:AnnualHeatingEfficiency[h:Units=&quot;AFUE&quot;]/h:Value)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected AnnualHeatingEfficiency[Units="AFUE"]/Value to be less than or equal to 1</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--REPORT WARN-->
<axsl:if test="number(h:AnnualHeatingEfficiency[h:Units=&quot;AFUE&quot;]/h:Value) &lt; 0.6"><svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:AnnualHeatingEfficiency[h:Units=&quot;AFUE&quot;]/h:Value) &lt; 0.6"><axsl:attribute name="role">WARN</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>AFUE should typically be greater than or equal to 0.6.</svrl:text></svrl:successful-report></axsl:if><axsl:apply-templates select="*" mode="M53"/></axsl:template><axsl:template match="text()" priority="-1" mode="M53"/><axsl:template match="@*|node()" priority="-2" mode="M53"><axsl:apply-templates select="*" mode="M53"/></axsl:template>

<!--PATTERN [HeatingSystemType=InUnitBoiler]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[HeatingSystemType=InUnitBoiler]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:HVAC/h:HVACPlant/h:HeatingSystem[h:HeatingSystemType/h:Boiler and (not(h:IsSharedSystem) or h:IsSharedSystem=&quot;false&quot;)]" priority="1000" mode="M54"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:HVAC/h:HVACPlant/h:HeatingSystem[h:HeatingSystemType/h:Boiler and (not(h:IsSharedSystem) or h:IsSharedSystem=&quot;false&quot;)]"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(../../h:HVACDistribution/h:DistributionSystemType/h:HydronicDistribution/h:HydronicDistributionType[text()=&quot;radiator&quot; or text()=&quot;baseboard&quot; or text()=&quot;radiant floor&quot; or text()=&quot;radiant ceiling&quot;]) + count(../../h:HVACDistribution/h:DistributionSystemType/h:Other[text()=&quot;DSE&quot;]) &gt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(../../h:HVACDistribution/h:DistributionSystemType/h:HydronicDistribution/h:HydronicDistributionType[text()=&quot;radiator&quot; or text()=&quot;baseboard&quot; or text()=&quot;radiant floor&quot; or text()=&quot;radiant ceiling&quot;]) + count(../../h:HVACDistribution/h:DistributionSystemType/h:Other[text()=&quot;DSE&quot;]) &gt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 or more element(s) for xpath: ../../HVACDistribution/DistributionSystemType/HydronicDistribution/HydronicDistributionType[text()="radiator" or text()="baseboard" or text()="radiant floor" or text()="radiant ceiling"] | ../../HVACDistribution/DistributionSystemType/Other[text()="DSE"]</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:HeatingCapacity) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:HeatingCapacity) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: HeatingCapacity</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:ElectricAuxiliaryEnergy) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:ElectricAuxiliaryEnergy) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: ElectricAuxiliaryEnergy</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--REPORT WARN-->
<axsl:if test="number(h:HeatingCapacity) &lt;= 1000 and number(h:HeatingCapacity) &gt; 0 and h:HeatingCapacity"><svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:HeatingCapacity) &lt;= 1000 and number(h:HeatingCapacity) &gt; 0 and h:HeatingCapacity"><axsl:attribute name="role">WARN</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Heating capacity should typically be greater than or equal to 1000 Btu/hr.</svrl:text></svrl:successful-report></axsl:if><axsl:apply-templates select="*" mode="M54"/></axsl:template><axsl:template match="text()" priority="-1" mode="M54"/><axsl:template match="@*|node()" priority="-2" mode="M54"><axsl:apply-templates select="*" mode="M54"/></axsl:template>

<!--PATTERN [HeatingSystemType=SharedBoiler]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[HeatingSystemType=SharedBoiler]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:HVAC/h:HVACPlant/h:HeatingSystem[h:HeatingSystemType/h:Boiler and h:IsSharedSystem=&quot;true&quot;]" priority="1000" mode="M55"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:HVAC/h:HVACPlant/h:HeatingSystem[h:HeatingSystemType/h:Boiler and h:IsSharedSystem=&quot;true&quot;]"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(../../../../h:BuildingSummary/h:BuildingConstruction[h:ResidentialFacilityType[text()=&quot;single-family attached&quot; or text()=&quot;apartment unit&quot;]]) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(../../../../h:BuildingSummary/h:BuildingConstruction[h:ResidentialFacilityType[text()=&quot;single-family attached&quot; or text()=&quot;apartment unit&quot;]]) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: ../../../../BuildingSummary/BuildingConstruction[ResidentialFacilityType[text()="single-family attached" or text()="apartment unit"]]</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(../../h:HVACDistribution/h:DistributionSystemType/h:HydronicDistribution/h:HydronicDistributionType[text()=&quot;radiator&quot; or text()=&quot;baseboard&quot; or text()=&quot;radiant floor&quot; or text()=&quot;radiant ceiling&quot; or text()=&quot;water loop&quot;]) + count(../../h:HVACDistribution/h:DistributionSystemType/h:AirDistribution/h:AirDistributionType[text()=&quot;fan coil&quot;]) &gt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(../../h:HVACDistribution/h:DistributionSystemType/h:HydronicDistribution/h:HydronicDistributionType[text()=&quot;radiator&quot; or text()=&quot;baseboard&quot; or text()=&quot;radiant floor&quot; or text()=&quot;radiant ceiling&quot; or text()=&quot;water loop&quot;]) + count(../../h:HVACDistribution/h:DistributionSystemType/h:AirDistribution/h:AirDistributionType[text()=&quot;fan coil&quot;]) &gt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 or more element(s) for xpath: ../../HVACDistribution/DistributionSystemType/HydronicDistribution/HydronicDistributionType[text()="radiator" or text()="baseboard" or text()="radiant floor" or text()="radiant ceiling" or text()="water loop"] | ../../HVACDistribution/DistributionSystemType/AirDistribution/AirDistributionType[text()="fan coil"]</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:NumberofUnitsServed) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:NumberofUnitsServed) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: NumberofUnitsServed</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="number(h:NumberofUnitsServed) &gt; 1 or not(h:NumberofUnitsServed)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:NumberofUnitsServed) &gt; 1 or not(h:NumberofUnitsServed)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected NumberofUnitsServed to be greater than 1</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:ElectricAuxiliaryEnergy) + count(h:extension/h:SharedLoopWatts) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:ElectricAuxiliaryEnergy) + count(h:extension/h:SharedLoopWatts) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: ElectricAuxiliaryEnergy | extension/SharedLoopWatts</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="number(h:extension/h:SharedLoopWatts) &gt;= 0 or not(h:extension/h:SharedLoopWatts)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:extension/h:SharedLoopWatts) &gt;= 0 or not(h:extension/h:SharedLoopWatts)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected extension/SharedLoopWatts to be greater than or equal to 0</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M55"/></axsl:template><axsl:template match="text()" priority="-1" mode="M55"/><axsl:template match="@*|node()" priority="-2" mode="M55"><axsl:apply-templates select="*" mode="M55"/></axsl:template>

<!--PATTERN [HeatingSystemType=SharedBoilerWthFanCoil]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[HeatingSystemType=SharedBoilerWthFanCoil]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:HVAC/h:HVACPlant/h:HeatingSystem[h:HeatingSystemType/h:Boiler and h:IsSharedSystem=&quot;true&quot; and ../../h:HVACDistribution/h:DistributionSystemType/h:AirDistribution/h:AirDistributionType[text()=&quot;fan coil&quot;]]" priority="1000" mode="M56"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:HVAC/h:HVACPlant/h:HeatingSystem[h:HeatingSystemType/h:Boiler and h:IsSharedSystem=&quot;true&quot; and ../../h:HVACDistribution/h:DistributionSystemType/h:AirDistribution/h:AirDistributionType[text()=&quot;fan coil&quot;]]"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:ElectricAuxiliaryEnergy) + count(h:extension/h:FanCoilWatts) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:ElectricAuxiliaryEnergy) + count(h:extension/h:FanCoilWatts) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: ElectricAuxiliaryEnergy | extension/FanCoilWatts</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="number(h:extension/h:FanCoilWatts) &gt;= 0 or not(h:extension/h:FanCoilWatts)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:extension/h:FanCoilWatts) &gt;= 0 or not(h:extension/h:FanCoilWatts)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected extension/FanCoilWatts to be greater than or equal to 0</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M56"/></axsl:template><axsl:template match="text()" priority="-1" mode="M56"/><axsl:template match="@*|node()" priority="-2" mode="M56"><axsl:apply-templates select="*" mode="M56"/></axsl:template>

<!--PATTERN [HeatingSystemType=SharedBoilerWithWLHP]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[HeatingSystemType=SharedBoilerWithWLHP]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:HVAC/h:HVACPlant/h:HeatingSystem[h:HeatingSystemType/h:Boiler and h:IsSharedSystem=&quot;true&quot; and ../../h:HVACDistribution/h:DistributionSystemType/h:HydronicDistribution/h:HydronicDistributionType[text()=&quot;water loop&quot;]]" priority="1000" mode="M57"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:HVAC/h:HVACPlant/h:HeatingSystem[h:HeatingSystemType/h:Boiler and h:IsSharedSystem=&quot;true&quot; and ../../h:HVACDistribution/h:DistributionSystemType/h:HydronicDistribution/h:HydronicDistributionType[text()=&quot;water loop&quot;]]"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(../h:HeatPump[h:HeatPumpType=&quot;water-loop-to-air&quot;]/h:HeatingCapacity) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(../h:HeatPump[h:HeatPumpType=&quot;water-loop-to-air&quot;]/h:HeatingCapacity) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: ../HeatPump[HeatPumpType="water-loop-to-air"]/HeatingCapacity</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(../h:HeatPump[h:HeatPumpType=&quot;water-loop-to-air&quot;]/h:AnnualHeatingEfficiency[h:Units=&quot;COP&quot;]/h:Value) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(../h:HeatPump[h:HeatPumpType=&quot;water-loop-to-air&quot;]/h:AnnualHeatingEfficiency[h:Units=&quot;COP&quot;]/h:Value) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: ../HeatPump[HeatPumpType="water-loop-to-air"]/AnnualHeatingEfficiency[Units="COP"]/Value</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M57"/></axsl:template><axsl:template match="text()" priority="-1" mode="M57"/><axsl:template match="@*|node()" priority="-2" mode="M57"><axsl:apply-templates select="*" mode="M57"/></axsl:template>

<!--PATTERN [HeatingSystemType=Stove]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[HeatingSystemType=Stove]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:HVAC/h:HVACPlant/h:HeatingSystem[h:HeatingSystemType/h:Stove]" priority="1000" mode="M58"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:HVAC/h:HVACPlant/h:HeatingSystem[h:HeatingSystemType/h:Stove]"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:DistributionSystem) = 0"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:DistributionSystem) = 0"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 element(s) for xpath: DistributionSystem</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:HeatingSystemFuel) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:HeatingSystemFuel) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: HeatingSystemFuel</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="h:HeatingSystemFuel[text()=&quot;electricity&quot; or text()=&quot;natural gas&quot; or text()=&quot;fuel oil&quot; or text()=&quot;fuel oil 1&quot; or text()=&quot;fuel oil 2&quot; or text()=&quot;fuel oil 4&quot; or text()=&quot;fuel oil 5/6&quot; or text()=&quot;diesel&quot; or text()=&quot;propane&quot; or text()=&quot;kerosene&quot; or text()=&quot;coal&quot; or text()=&quot;coke&quot; or text()=&quot;bituminous coal&quot; or text()=&quot;wood&quot; or text()=&quot;wood pellets&quot;] or not(h:HeatingSystemFuel)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="h:HeatingSystemFuel[text()=&quot;electricity&quot; or text()=&quot;natural gas&quot; or text()=&quot;fuel oil&quot; or text()=&quot;fuel oil 1&quot; or text()=&quot;fuel oil 2&quot; or text()=&quot;fuel oil 4&quot; or text()=&quot;fuel oil 5/6&quot; or text()=&quot;diesel&quot; or text()=&quot;propane&quot; or text()=&quot;kerosene&quot; or text()=&quot;coal&quot; or text()=&quot;coke&quot; or text()=&quot;bituminous coal&quot; or text()=&quot;wood&quot; or text()=&quot;wood pellets&quot;] or not(h:HeatingSystemFuel)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected HeatingSystemFuel to be 'electricity' or 'natural gas' or 'fuel oil' or 'fuel oil 1' or 'fuel oil 2' or 'fuel oil 4' or 'fuel oil 5/6' or 'diesel' or 'propane' or 'kerosene' or 'coal' or 'coke' or 'bituminous coal' or 'wood' or 'wood pellets'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:HeatingCapacity) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:HeatingCapacity) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: HeatingCapacity</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:AnnualHeatingEfficiency[h:Units=&quot;Percent&quot;]/h:Value) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:AnnualHeatingEfficiency[h:Units=&quot;Percent&quot;]/h:Value) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: AnnualHeatingEfficiency[Units="Percent"]/Value</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="number(h:AnnualHeatingEfficiency[h:Units=&quot;Percent&quot;]/h:Value) &lt;= 1 or not(h:AnnualHeatingEfficiency[h:Units=&quot;Percent&quot;]/h:Value)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:AnnualHeatingEfficiency[h:Units=&quot;Percent&quot;]/h:Value) &lt;= 1 or not(h:AnnualHeatingEfficiency[h:Units=&quot;Percent&quot;]/h:Value)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected AnnualHeatingEfficiency[Units="Percent"]/Value to be less than or equal to 1</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:extension/h:FanPowerWatts) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:extension/h:FanPowerWatts) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: extension/FanPowerWatts</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="number(h:extension/h:FanPowerWatts) &gt;= 0 or not(h:extension/h:FanPowerWatts)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:extension/h:FanPowerWatts) &gt;= 0 or not(h:extension/h:FanPowerWatts)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected extension/FanPowerWatts to be greater than or equal to 0</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--REPORT WARN-->
<axsl:if test="number(h:AnnualHeatingEfficiency[h:Units=&quot;Percent&quot;]/h:Value) &lt; 0.6"><svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:AnnualHeatingEfficiency[h:Units=&quot;Percent&quot;]/h:Value) &lt; 0.6"><axsl:attribute name="role">WARN</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Percent efficiency should typically be greater than or equal to 0.6.</svrl:text></svrl:successful-report></axsl:if>

		<!--REPORT WARN-->
<axsl:if test="number(h:HeatingCapacity) &lt;= 1000 and number(h:HeatingCapacity) &gt; 0 and h:HeatingCapacity"><svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:HeatingCapacity) &lt;= 1000 and number(h:HeatingCapacity) &gt; 0 and h:HeatingCapacity"><axsl:attribute name="role">WARN</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Heating capacity should typically be greater than or equal to 1000 Btu/hr.</svrl:text></svrl:successful-report></axsl:if><axsl:apply-templates select="*" mode="M58"/></axsl:template><axsl:template match="text()" priority="-1" mode="M58"/><axsl:template match="@*|node()" priority="-2" mode="M58"><axsl:apply-templates select="*" mode="M58"/></axsl:template>

<!--PATTERN [HeatingSystemType=PortableHeater]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[HeatingSystemType=PortableHeater]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:HVAC/h:HVACPlant/h:HeatingSystem[h:HeatingSystemType/h:PortableHeater]" priority="1000" mode="M59"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:HVAC/h:HVACPlant/h:HeatingSystem[h:HeatingSystemType/h:PortableHeater]"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:DistributionSystem) = 0"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:DistributionSystem) = 0"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 element(s) for xpath: DistributionSystem</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:HeatingSystemFuel) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:HeatingSystemFuel) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: HeatingSystemFuel</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="h:HeatingSystemFuel[text()=&quot;electricity&quot; or text()=&quot;natural gas&quot; or text()=&quot;fuel oil&quot; or text()=&quot;fuel oil 1&quot; or text()=&quot;fuel oil 2&quot; or text()=&quot;fuel oil 4&quot; or text()=&quot;fuel oil 5/6&quot; or text()=&quot;diesel&quot; or text()=&quot;propane&quot; or text()=&quot;kerosene&quot; or text()=&quot;coal&quot; or text()=&quot;coke&quot; or text()=&quot;bituminous coal&quot; or text()=&quot;wood&quot; or text()=&quot;wood pellets&quot;] or not(h:HeatingSystemFuel)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="h:HeatingSystemFuel[text()=&quot;electricity&quot; or text()=&quot;natural gas&quot; or text()=&quot;fuel oil&quot; or text()=&quot;fuel oil 1&quot; or text()=&quot;fuel oil 2&quot; or text()=&quot;fuel oil 4&quot; or text()=&quot;fuel oil 5/6&quot; or text()=&quot;diesel&quot; or text()=&quot;propane&quot; or text()=&quot;kerosene&quot; or text()=&quot;coal&quot; or text()=&quot;coke&quot; or text()=&quot;bituminous coal&quot; or text()=&quot;wood&quot; or text()=&quot;wood pellets&quot;] or not(h:HeatingSystemFuel)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected HeatingSystemFuel to be 'electricity' or 'natural gas' or 'fuel oil' or 'fuel oil 1' or 'fuel oil 2' or 'fuel oil 4' or 'fuel oil 5/6' or 'diesel' or 'propane' or 'kerosene' or 'coal' or 'coke' or 'bituminous coal' or 'wood' or 'wood pellets'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:HeatingCapacity) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:HeatingCapacity) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: HeatingCapacity</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:AnnualHeatingEfficiency[h:Units=&quot;Percent&quot;]/h:Value) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:AnnualHeatingEfficiency[h:Units=&quot;Percent&quot;]/h:Value) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: AnnualHeatingEfficiency[Units="Percent"]/Value</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="number(h:AnnualHeatingEfficiency[h:Units=&quot;Percent&quot;]/h:Value) &lt;= 1 or not(h:AnnualHeatingEfficiency[h:Units=&quot;Percent&quot;]/h:Value)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:AnnualHeatingEfficiency[h:Units=&quot;Percent&quot;]/h:Value) &lt;= 1 or not(h:AnnualHeatingEfficiency[h:Units=&quot;Percent&quot;]/h:Value)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected AnnualHeatingEfficiency[Units="Percent"]/Value to be less than or equal to 1</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:extension/h:FanPowerWatts) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:extension/h:FanPowerWatts) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: extension/FanPowerWatts</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="number(h:extension/h:FanPowerWatts) &gt;= 0 or not(h:extension/h:FanPowerWatts)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:extension/h:FanPowerWatts) &gt;= 0 or not(h:extension/h:FanPowerWatts)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected extension/FanPowerWatts to be greater than or equal to 0</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--REPORT WARN-->
<axsl:if test="number(h:AnnualHeatingEfficiency[h:Units=&quot;Percent&quot;]/h:Value) &lt; 0.6"><svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:AnnualHeatingEfficiency[h:Units=&quot;Percent&quot;]/h:Value) &lt; 0.6"><axsl:attribute name="role">WARN</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Percent efficiency should typically be greater than or equal to 0.6.</svrl:text></svrl:successful-report></axsl:if>

		<!--REPORT WARN-->
<axsl:if test="number(h:HeatingCapacity) &lt;= 1000 and number(h:HeatingCapacity) &gt; 0 and h:HeatingCapacity"><svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:HeatingCapacity) &lt;= 1000 and number(h:HeatingCapacity) &gt; 0 and h:HeatingCapacity"><axsl:attribute name="role">WARN</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Heating capacity should typically be greater than or equal to 1000 Btu/hr.</svrl:text></svrl:successful-report></axsl:if><axsl:apply-templates select="*" mode="M59"/></axsl:template><axsl:template match="text()" priority="-1" mode="M59"/><axsl:template match="@*|node()" priority="-2" mode="M59"><axsl:apply-templates select="*" mode="M59"/></axsl:template>

<!--PATTERN [HeatingSystemType=FixedHeater]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[HeatingSystemType=FixedHeater]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:HVAC/h:HVACPlant/h:HeatingSystem[h:HeatingSystemType/h:FixedHeater]" priority="1000" mode="M60"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:HVAC/h:HVACPlant/h:HeatingSystem[h:HeatingSystemType/h:FixedHeater]"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:DistributionSystem) = 0"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:DistributionSystem) = 0"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 element(s) for xpath: DistributionSystem</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:HeatingSystemFuel) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:HeatingSystemFuel) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: HeatingSystemFuel</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="h:HeatingSystemFuel[text()=&quot;electricity&quot; or text()=&quot;natural gas&quot; or text()=&quot;fuel oil&quot; or text()=&quot;fuel oil 1&quot; or text()=&quot;fuel oil 2&quot; or text()=&quot;fuel oil 4&quot; or text()=&quot;fuel oil 5/6&quot; or text()=&quot;diesel&quot; or text()=&quot;propane&quot; or text()=&quot;kerosene&quot; or text()=&quot;coal&quot; or text()=&quot;coke&quot; or text()=&quot;bituminous coal&quot; or text()=&quot;wood&quot; or text()=&quot;wood pellets&quot;] or not(h:HeatingSystemFuel)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="h:HeatingSystemFuel[text()=&quot;electricity&quot; or text()=&quot;natural gas&quot; or text()=&quot;fuel oil&quot; or text()=&quot;fuel oil 1&quot; or text()=&quot;fuel oil 2&quot; or text()=&quot;fuel oil 4&quot; or text()=&quot;fuel oil 5/6&quot; or text()=&quot;diesel&quot; or text()=&quot;propane&quot; or text()=&quot;kerosene&quot; or text()=&quot;coal&quot; or text()=&quot;coke&quot; or text()=&quot;bituminous coal&quot; or text()=&quot;wood&quot; or text()=&quot;wood pellets&quot;] or not(h:HeatingSystemFuel)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected HeatingSystemFuel to be 'electricity' or 'natural gas' or 'fuel oil' or 'fuel oil 1' or 'fuel oil 2' or 'fuel oil 4' or 'fuel oil 5/6' or 'diesel' or 'propane' or 'kerosene' or 'coal' or 'coke' or 'bituminous coal' or 'wood' or 'wood pellets'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:HeatingCapacity) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:HeatingCapacity) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: HeatingCapacity</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:AnnualHeatingEfficiency[h:Units=&quot;Percent&quot;]/h:Value) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:AnnualHeatingEfficiency[h:Units=&quot;Percent&quot;]/h:Value) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: AnnualHeatingEfficiency[Units="Percent"]/Value</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="number(h:AnnualHeatingEfficiency[h:Units=&quot;Percent&quot;]/h:Value) &lt;= 1 or not(h:AnnualHeatingEfficiency[h:Units=&quot;Percent&quot;]/h:Value)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:AnnualHeatingEfficiency[h:Units=&quot;Percent&quot;]/h:Value) &lt;= 1 or not(h:AnnualHeatingEfficiency[h:Units=&quot;Percent&quot;]/h:Value)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected AnnualHeatingEfficiency[Units="Percent"]/Value to be less than or equal to 1</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:extension/h:FanPowerWatts) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:extension/h:FanPowerWatts) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: extension/FanPowerWatts</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="number(h:extension/h:FanPowerWatts) &gt;= 0 or not(h:extension/h:FanPowerWatts)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:extension/h:FanPowerWatts) &gt;= 0 or not(h:extension/h:FanPowerWatts)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected extension/FanPowerWatts to be greater than or equal to 0</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--REPORT WARN-->
<axsl:if test="number(h:AnnualHeatingEfficiency[h:Units=&quot;Percent&quot;]/h:Value) &lt; 0.6"><svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:AnnualHeatingEfficiency[h:Units=&quot;Percent&quot;]/h:Value) &lt; 0.6"><axsl:attribute name="role">WARN</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Percent efficiency should typically be greater than or equal to 0.6.</svrl:text></svrl:successful-report></axsl:if>

		<!--REPORT WARN-->
<axsl:if test="number(h:HeatingCapacity) &lt;= 1000 and number(h:HeatingCapacity) &gt; 0 and h:HeatingCapacity"><svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:HeatingCapacity) &lt;= 1000 and number(h:HeatingCapacity) &gt; 0 and h:HeatingCapacity"><axsl:attribute name="role">WARN</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Heating capacity should typically be greater than or equal to 1000 Btu/hr.</svrl:text></svrl:successful-report></axsl:if><axsl:apply-templates select="*" mode="M60"/></axsl:template><axsl:template match="text()" priority="-1" mode="M60"/><axsl:template match="@*|node()" priority="-2" mode="M60"><axsl:apply-templates select="*" mode="M60"/></axsl:template>

<!--PATTERN [HeatingSystemType=Fireplace]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[HeatingSystemType=Fireplace]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:HVAC/h:HVACPlant/h:HeatingSystem[h:HeatingSystemType/h:Fireplace]" priority="1000" mode="M61"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:HVAC/h:HVACPlant/h:HeatingSystem[h:HeatingSystemType/h:Fireplace]"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:DistributionSystem) = 0"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:DistributionSystem) = 0"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 element(s) for xpath: DistributionSystem</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:HeatingSystemFuel) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:HeatingSystemFuel) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: HeatingSystemFuel</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="h:HeatingSystemFuel[text()=&quot;electricity&quot; or text()=&quot;natural gas&quot; or text()=&quot;fuel oil&quot; or text()=&quot;fuel oil 1&quot; or text()=&quot;fuel oil 2&quot; or text()=&quot;fuel oil 4&quot; or text()=&quot;fuel oil 5/6&quot; or text()=&quot;diesel&quot; or text()=&quot;propane&quot; or text()=&quot;kerosene&quot; or text()=&quot;coal&quot; or text()=&quot;coke&quot; or text()=&quot;bituminous coal&quot; or text()=&quot;wood&quot; or text()=&quot;wood pellets&quot;] or not(h:HeatingSystemFuel)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="h:HeatingSystemFuel[text()=&quot;electricity&quot; or text()=&quot;natural gas&quot; or text()=&quot;fuel oil&quot; or text()=&quot;fuel oil 1&quot; or text()=&quot;fuel oil 2&quot; or text()=&quot;fuel oil 4&quot; or text()=&quot;fuel oil 5/6&quot; or text()=&quot;diesel&quot; or text()=&quot;propane&quot; or text()=&quot;kerosene&quot; or text()=&quot;coal&quot; or text()=&quot;coke&quot; or text()=&quot;bituminous coal&quot; or text()=&quot;wood&quot; or text()=&quot;wood pellets&quot;] or not(h:HeatingSystemFuel)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected HeatingSystemFuel to be 'electricity' or 'natural gas' or 'fuel oil' or 'fuel oil 1' or 'fuel oil 2' or 'fuel oil 4' or 'fuel oil 5/6' or 'diesel' or 'propane' or 'kerosene' or 'coal' or 'coke' or 'bituminous coal' or 'wood' or 'wood pellets'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:HeatingCapacity) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:HeatingCapacity) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: HeatingCapacity</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:AnnualHeatingEfficiency[h:Units=&quot;Percent&quot;]/h:Value) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:AnnualHeatingEfficiency[h:Units=&quot;Percent&quot;]/h:Value) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: AnnualHeatingEfficiency[Units="Percent"]/Value</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="number(h:AnnualHeatingEfficiency[h:Units=&quot;Percent&quot;]/h:Value) &lt;= 1 or not(h:AnnualHeatingEfficiency[h:Units=&quot;Percent&quot;]/h:Value)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:AnnualHeatingEfficiency[h:Units=&quot;Percent&quot;]/h:Value) &lt;= 1 or not(h:AnnualHeatingEfficiency[h:Units=&quot;Percent&quot;]/h:Value)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected AnnualHeatingEfficiency[Units="Percent"]/Value to be less than or equal to 1</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:extension/h:FanPowerWatts) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:extension/h:FanPowerWatts) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: extension/FanPowerWatts</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="number(h:extension/h:FanPowerWatts) &gt;= 0 or not(h:extension/h:FanPowerWatts)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:extension/h:FanPowerWatts) &gt;= 0 or not(h:extension/h:FanPowerWatts)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected extension/FanPowerWatts to be greater than or equal to 0</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--REPORT WARN-->
<axsl:if test="number(h:HeatingCapacity) &lt;= 1000 and number(h:HeatingCapacity) &gt; 0 and h:HeatingCapacity"><svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:HeatingCapacity) &lt;= 1000 and number(h:HeatingCapacity) &gt; 0 and h:HeatingCapacity"><axsl:attribute name="role">WARN</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Heating capacity should typically be greater than or equal to 1000 Btu/hr.</svrl:text></svrl:successful-report></axsl:if><axsl:apply-templates select="*" mode="M61"/></axsl:template><axsl:template match="text()" priority="-1" mode="M61"/><axsl:template match="@*|node()" priority="-2" mode="M61"><axsl:apply-templates select="*" mode="M61"/></axsl:template>

<!--PATTERN [CoolingSystem]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[CoolingSystem]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:HVAC/h:HVACPlant/h:CoolingSystem" priority="1000" mode="M62"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:HVAC/h:HVACPlant/h:CoolingSystem"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(../../h:HVACControl) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(../../h:HVACControl) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: ../../HVACControl</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:CoolingSystemType) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:CoolingSystemType) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: CoolingSystemType</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="h:CoolingSystemType[text()=&quot;central air conditioner&quot; or text()=&quot;room air conditioner&quot; or text()=&quot;evaporative cooler&quot; or text()=&quot;mini-split&quot; or text()=&quot;chiller&quot; or text()=&quot;cooling tower&quot; or text()=&quot;packaged terminal air conditioner&quot;] or not(h:CoolingSystemType)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="h:CoolingSystemType[text()=&quot;central air conditioner&quot; or text()=&quot;room air conditioner&quot; or text()=&quot;evaporative cooler&quot; or text()=&quot;mini-split&quot; or text()=&quot;chiller&quot; or text()=&quot;cooling tower&quot; or text()=&quot;packaged terminal air conditioner&quot;] or not(h:CoolingSystemType)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected CoolingSystemType to be 'central air conditioner' or 'room air conditioner' or 'evaporative cooler' or 'mini-split' or 'chiller' or 'cooling tower' or 'packaged terminal air conditioner'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:CoolingSystemFuel) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:CoolingSystemFuel) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: CoolingSystemFuel</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="h:CoolingSystemFuel[text()=&quot;electricity&quot;] or not(h:CoolingSystemFuel)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="h:CoolingSystemFuel[text()=&quot;electricity&quot;] or not(h:CoolingSystemFuel)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected CoolingSystemFuel to be 'electricity'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:FractionCoolLoadServed) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:FractionCoolLoadServed) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: FractionCoolLoadServed</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M62"/></axsl:template><axsl:template match="text()" priority="-1" mode="M62"/><axsl:template match="@*|node()" priority="-2" mode="M62"><axsl:apply-templates select="*" mode="M62"/></axsl:template>

<!--PATTERN [CoolingSystemType=CentralAC]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[CoolingSystemType=CentralAC]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:HVAC/h:HVACPlant/h:CoolingSystem[h:CoolingSystemType=&quot;central air conditioner&quot;]" priority="1000" mode="M63"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:HVAC/h:HVACPlant/h:CoolingSystem[h:CoolingSystemType=&quot;central air conditioner&quot;]"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(../../h:HVACDistribution/h:DistributionSystemType/h:AirDistribution/h:AirDistributionType[text()=&quot;regular velocity&quot;]) + count(../../h:HVACDistribution/h:DistributionSystemType/h:Other[text()=&quot;DSE&quot;]) &gt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(../../h:HVACDistribution/h:DistributionSystemType/h:AirDistribution/h:AirDistributionType[text()=&quot;regular velocity&quot;]) + count(../../h:HVACDistribution/h:DistributionSystemType/h:Other[text()=&quot;DSE&quot;]) &gt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 or more element(s) for xpath: ../../HVACDistribution/DistributionSystemType/AirDistribution/AirDistributionType[text()="regular velocity"] | ../../HVACDistribution/DistributionSystemType/Other[text()="DSE"]</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:DistributionSystem) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:DistributionSystem) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: DistributionSystem</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:CoolingCapacity) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:CoolingCapacity) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: CoolingCapacity</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:CompressorType) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:CompressorType) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: CompressorType</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="h:CompressorType[text()=&quot;single stage&quot; or text()=&quot;two stage&quot; or text()=&quot;variable speed&quot;] or not(h:CompressorType)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="h:CompressorType[text()=&quot;single stage&quot; or text()=&quot;two stage&quot; or text()=&quot;variable speed&quot;] or not(h:CompressorType)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected CompressorType to be 'single stage' or 'two stage' or 'variable speed'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:AnnualCoolingEfficiency[h:Units=&quot;SEER&quot;]/h:Value) + count(h:YearInstalled) &gt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:AnnualCoolingEfficiency[h:Units=&quot;SEER&quot;]/h:Value) + count(h:YearInstalled) &gt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 or more element(s) for xpath: AnnualCoolingEfficiency[Units="SEER"]/Value | YearInstalled</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:SensibleHeatFraction) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:SensibleHeatFraction) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: SensibleHeatFraction</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:extension/h:FanPowerWattsPerCFM) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:extension/h:FanPowerWattsPerCFM) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: extension/FanPowerWattsPerCFM</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="number(h:extension/h:FanPowerWattsPerCFM) &gt;= 0 or not(h:extension/h:FanPowerWattsPerCFM)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:extension/h:FanPowerWattsPerCFM) &gt;= 0 or not(h:extension/h:FanPowerWattsPerCFM)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected extension/FanPowerWattsPerCFM to be greater than or equal to 0</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:extension/h:AirflowDefectRatio) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:extension/h:AirflowDefectRatio) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: extension/AirflowDefectRatio</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="number(h:extension/h:AirflowDefectRatio) &gt;= -0.9 or not(h:extension/h:AirflowDefectRatio)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:extension/h:AirflowDefectRatio) &gt;= -0.9 or not(h:extension/h:AirflowDefectRatio)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected extension/AirflowDefectRatio to be greater than or equal to -0.9</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="number(h:extension/h:AirflowDefectRatio) &lt;= 9 or not(h:extension/h:AirflowDefectRatio)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:extension/h:AirflowDefectRatio) &lt;= 9 or not(h:extension/h:AirflowDefectRatio)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected extension/AirflowDefectRatio to be less than or equal to 9</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:extension/h:ChargeDefectRatio) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:extension/h:ChargeDefectRatio) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: extension/ChargeDefectRatio</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="number(h:extension/h:ChargeDefectRatio) &gt;= -0.9 or not(h:extension/h:ChargeDefectRatio)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:extension/h:ChargeDefectRatio) &gt;= -0.9 or not(h:extension/h:ChargeDefectRatio)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected extension/ChargeDefectRatio to be greater than or equal to -0.9</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="number(h:extension/h:ChargeDefectRatio) &lt;= 9 or not(h:extension/h:ChargeDefectRatio)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:extension/h:ChargeDefectRatio) &lt;= 9 or not(h:extension/h:ChargeDefectRatio)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected extension/ChargeDefectRatio to be less than or equal to 9</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--REPORT WARN-->
<axsl:if test="number(h:AnnualCoolingEfficiency[h:Units=&quot;SEER&quot;]/h:Value) &lt; 8"><svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:AnnualCoolingEfficiency[h:Units=&quot;SEER&quot;]/h:Value) &lt; 8"><axsl:attribute name="role">WARN</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>SEER should typically be greater than or equal to 8.</svrl:text></svrl:successful-report></axsl:if>

		<!--REPORT WARN-->
<axsl:if test="number(h:CoolingCapacity) &lt;= 1000 and number(h:CoolingCapacity) &gt; 0 and h:CoolingCapacity"><svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:CoolingCapacity) &lt;= 1000 and number(h:CoolingCapacity) &gt; 0 and h:CoolingCapacity"><axsl:attribute name="role">WARN</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Cooling capacity should typically be greater than or equal to 1000 Btu/hr.</svrl:text></svrl:successful-report></axsl:if><axsl:apply-templates select="*" mode="M63"/></axsl:template><axsl:template match="text()" priority="-1" mode="M63"/><axsl:template match="@*|node()" priority="-2" mode="M63"><axsl:apply-templates select="*" mode="M63"/></axsl:template>

<!--PATTERN [CoolingSystemType=RoomAC]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[CoolingSystemType=RoomAC]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:HVAC/h:HVACPlant/h:CoolingSystem[h:CoolingSystemType=&quot;room air conditioner&quot;]" priority="1000" mode="M64"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:HVAC/h:HVACPlant/h:CoolingSystem[h:CoolingSystemType=&quot;room air conditioner&quot;]"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:DistributionSystem) = 0"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:DistributionSystem) = 0"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 element(s) for xpath: DistributionSystem</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:CoolingCapacity) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:CoolingCapacity) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: CoolingCapacity</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:AnnualCoolingEfficiency[h:Units=&quot;EER&quot; or h:Units=&quot;CEER&quot;]/h:Value) + count(h:YearInstalled) &gt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:AnnualCoolingEfficiency[h:Units=&quot;EER&quot; or h:Units=&quot;CEER&quot;]/h:Value) + count(h:YearInstalled) &gt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 or more element(s) for xpath: AnnualCoolingEfficiency[Units="EER" or Units="CEER"]/Value | YearInstalled</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:SensibleHeatFraction) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:SensibleHeatFraction) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: SensibleHeatFraction</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--REPORT WARN-->
<axsl:if test="number(h:AnnualCoolingEfficiency[h:Units=&quot;EER&quot;]/h:Value) &lt; 8"><svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:AnnualCoolingEfficiency[h:Units=&quot;EER&quot;]/h:Value) &lt; 8"><axsl:attribute name="role">WARN</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>EER should typically be greater than or equal to 8.</svrl:text></svrl:successful-report></axsl:if>

		<!--REPORT WARN-->
<axsl:if test="number(h:AnnualCoolingEfficiency[h:Units=&quot;CEER&quot;]/h:Value) &lt; 8"><svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:AnnualCoolingEfficiency[h:Units=&quot;CEER&quot;]/h:Value) &lt; 8"><axsl:attribute name="role">WARN</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>CEER should typically be greater than or equal to 8.</svrl:text></svrl:successful-report></axsl:if>

		<!--REPORT WARN-->
<axsl:if test="number(h:CoolingCapacity) &lt;= 1000 and number(h:CoolingCapacity) &gt; 0 and h:CoolingCapacity"><svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:CoolingCapacity) &lt;= 1000 and number(h:CoolingCapacity) &gt; 0 and h:CoolingCapacity"><axsl:attribute name="role">WARN</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Cooling capacity should typically be greater than or equal to 1000 Btu/hr.</svrl:text></svrl:successful-report></axsl:if><axsl:apply-templates select="*" mode="M64"/></axsl:template><axsl:template match="text()" priority="-1" mode="M64"/><axsl:template match="@*|node()" priority="-2" mode="M64"><axsl:apply-templates select="*" mode="M64"/></axsl:template>

<!--PATTERN [CoolingSystemType=PTAC]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[CoolingSystemType=PTAC]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:HVAC/h:HVACPlant/h:CoolingSystem[h:CoolingSystemType=&quot;packaged terminal air conditioner&quot;]" priority="1000" mode="M65"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:HVAC/h:HVACPlant/h:CoolingSystem[h:CoolingSystemType=&quot;packaged terminal air conditioner&quot;]"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:DistributionSystem) = 0"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:DistributionSystem) = 0"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 element(s) for xpath: DistributionSystem</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:CoolingCapacity) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:CoolingCapacity) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: CoolingCapacity</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:AnnualCoolingEfficiency[h:Units=&quot;EER&quot; or h:Units=&quot;CEER&quot;]/h:Value) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:AnnualCoolingEfficiency[h:Units=&quot;EER&quot; or h:Units=&quot;CEER&quot;]/h:Value) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 for xpath: AnnualCoolingEfficiency[Units="EER" or Units="CEER"]/Value</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:SensibleHeatFraction) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:SensibleHeatFraction) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: SensibleHeatFraction</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--REPORT WARN-->
<axsl:if test="number(h:CoolingCapacity) &lt;= 1000 and number(h:CoolingCapacity) &gt; 0 and h:CoolingCapacity"><svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:CoolingCapacity) &lt;= 1000 and number(h:CoolingCapacity) &gt; 0 and h:CoolingCapacity"><axsl:attribute name="role">WARN</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Cooling capacity should typically be greater than or equal to 1000 Btu/hr.</svrl:text></svrl:successful-report></axsl:if><axsl:apply-templates select="*" mode="M65"/></axsl:template><axsl:template match="text()" priority="-1" mode="M65"/><axsl:template match="@*|node()" priority="-2" mode="M65"><axsl:apply-templates select="*" mode="M65"/></axsl:template>

<!--PATTERN [CoolingSystemType=EvapCooler]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[CoolingSystemType=EvapCooler]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:HVAC/h:HVACPlant/h:CoolingSystem[h:CoolingSystemType=&quot;evaporative cooler&quot;]" priority="1000" mode="M66"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:HVAC/h:HVACPlant/h:CoolingSystem[h:CoolingSystemType=&quot;evaporative cooler&quot;]"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(../../h:HVACDistribution/h:DistributionSystemType/h:AirDistribution/h:AirDistributionType[text()=&quot;regular velocity&quot;]) + count(../../h:HVACDistribution/h:DistributionSystemType/h:Other[text()=&quot;DSE&quot;]) &gt;= 0"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(../../h:HVACDistribution/h:DistributionSystemType/h:AirDistribution/h:AirDistributionType[text()=&quot;regular velocity&quot;]) + count(../../h:HVACDistribution/h:DistributionSystemType/h:Other[text()=&quot;DSE&quot;]) &gt;= 0"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or more element(s) for xpath: ../../HVACDistribution/DistributionSystemType/AirDistribution/AirDistributionType[text()="regular velocity"] | ../../HVACDistribution/DistributionSystemType/Other[text()="DSE"]</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:DistributionSystem) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:DistributionSystem) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: DistributionSystem</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:CoolingCapacity) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:CoolingCapacity) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: CoolingCapacity</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--REPORT WARN-->
<axsl:if test="number(h:CoolingCapacity) &lt;= 1000 and number(h:CoolingCapacity) &gt; 0 and h:CoolingCapacity"><svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:CoolingCapacity) &lt;= 1000 and number(h:CoolingCapacity) &gt; 0 and h:CoolingCapacity"><axsl:attribute name="role">WARN</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Cooling capacity should typically be greater than or equal to 1000 Btu/hr.</svrl:text></svrl:successful-report></axsl:if><axsl:apply-templates select="*" mode="M66"/></axsl:template><axsl:template match="text()" priority="-1" mode="M66"/><axsl:template match="@*|node()" priority="-2" mode="M66"><axsl:apply-templates select="*" mode="M66"/></axsl:template>

<!--PATTERN [CoolingSystemType=MiniSplitAC]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[CoolingSystemType=MiniSplitAC]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:HVAC/h:HVACPlant/h:CoolingSystem[h:CoolingSystemType=&quot;mini-split&quot;]" priority="1000" mode="M67"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:HVAC/h:HVACPlant/h:CoolingSystem[h:CoolingSystemType=&quot;mini-split&quot;]"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(../../h:HVACDistribution/h:DistributionSystemType/h:AirDistribution/h:AirDistributionType[text()=&quot;regular velocity&quot;]) + count(../../h:HVACDistribution/h:DistributionSystemType/h:Other[text()=&quot;DSE&quot;]) &gt;= 0"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(../../h:HVACDistribution/h:DistributionSystemType/h:AirDistribution/h:AirDistributionType[text()=&quot;regular velocity&quot;]) + count(../../h:HVACDistribution/h:DistributionSystemType/h:Other[text()=&quot;DSE&quot;]) &gt;= 0"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or more element(s) for xpath: ../../HVACDistribution/DistributionSystemType/AirDistribution/AirDistributionType[text()="regular velocity"] | ../../HVACDistribution/DistributionSystemType/Other[text()="DSE"]</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:DistributionSystem) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:DistributionSystem) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: DistributionSystem</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:CoolingCapacity) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:CoolingCapacity) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: CoolingCapacity</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:AnnualCoolingEfficiency[h:Units=&quot;SEER&quot;]/h:Value) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:AnnualCoolingEfficiency[h:Units=&quot;SEER&quot;]/h:Value) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: AnnualCoolingEfficiency[Units="SEER"]/Value</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:SensibleHeatFraction) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:SensibleHeatFraction) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: SensibleHeatFraction</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:extension/h:FanPowerWattsPerCFM) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:extension/h:FanPowerWattsPerCFM) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: extension/FanPowerWattsPerCFM</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="number(h:extension/h:FanPowerWattsPerCFM) &gt;= 0 or not(h:extension/h:FanPowerWattsPerCFM)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:extension/h:FanPowerWattsPerCFM) &gt;= 0 or not(h:extension/h:FanPowerWattsPerCFM)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected extension/FanPowerWattsPerCFM to be greater than or equal to 0</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:extension/h:AirflowDefectRatio) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:extension/h:AirflowDefectRatio) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: extension/AirflowDefectRatio</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="number(h:extension/h:AirflowDefectRatio) &gt;= -0.9 or not(h:extension/h:AirflowDefectRatio)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:extension/h:AirflowDefectRatio) &gt;= -0.9 or not(h:extension/h:AirflowDefectRatio)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected extension/AirflowDefectRatio to be greater than or equal to -0.9</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="number(h:extension/h:AirflowDefectRatio) &lt;= 9 or not(h:extension/h:AirflowDefectRatio)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:extension/h:AirflowDefectRatio) &lt;= 9 or not(h:extension/h:AirflowDefectRatio)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected extension/AirflowDefectRatio to be less than or equal to 9</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:extension/h:ChargeDefectRatio) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:extension/h:ChargeDefectRatio) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: extension/ChargeDefectRatio</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="number(h:extension/h:ChargeDefectRatio) &gt;= -0.9 or not(h:extension/h:ChargeDefectRatio)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:extension/h:ChargeDefectRatio) &gt;= -0.9 or not(h:extension/h:ChargeDefectRatio)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected extension/ChargeDefectRatio to be greater than or equal to -0.9</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="number(h:extension/h:ChargeDefectRatio) &lt;= 9 or not(h:extension/h:ChargeDefectRatio)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:extension/h:ChargeDefectRatio) &lt;= 9 or not(h:extension/h:ChargeDefectRatio)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected extension/ChargeDefectRatio to be less than or equal to 9</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--REPORT WARN-->
<axsl:if test="number(h:AnnualCoolingEfficiency[h:Units=&quot;SEER&quot;]/h:Value) &lt; 8"><svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:AnnualCoolingEfficiency[h:Units=&quot;SEER&quot;]/h:Value) &lt; 8"><axsl:attribute name="role">WARN</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>SEER should typically be greater than or equal to 8.</svrl:text></svrl:successful-report></axsl:if>

		<!--REPORT WARN-->
<axsl:if test="number(h:CoolingCapacity) &lt;= 1000 and number(h:CoolingCapacity) &gt; 0 and h:CoolingCapacity"><svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:CoolingCapacity) &lt;= 1000 and number(h:CoolingCapacity) &gt; 0 and h:CoolingCapacity"><axsl:attribute name="role">WARN</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Cooling capacity should typically be greater than or equal to 1000 Btu/hr.</svrl:text></svrl:successful-report></axsl:if><axsl:apply-templates select="*" mode="M67"/></axsl:template><axsl:template match="text()" priority="-1" mode="M67"/><axsl:template match="@*|node()" priority="-2" mode="M67"><axsl:apply-templates select="*" mode="M67"/></axsl:template>

<!--PATTERN [CoolingSystemType=SharedChiller]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[CoolingSystemType=SharedChiller]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:HVAC/h:HVACPlant/h:CoolingSystem[h:CoolingSystemType=&quot;chiller&quot;]" priority="1000" mode="M68"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:HVAC/h:HVACPlant/h:CoolingSystem[h:CoolingSystemType=&quot;chiller&quot;]"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(../../../../h:BuildingSummary/h:BuildingConstruction[h:ResidentialFacilityType[text()=&quot;single-family attached&quot; or text()=&quot;apartment unit&quot;]]) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(../../../../h:BuildingSummary/h:BuildingConstruction[h:ResidentialFacilityType[text()=&quot;single-family attached&quot; or text()=&quot;apartment unit&quot;]]) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: ../../../../BuildingSummary/BuildingConstruction[ResidentialFacilityType[text()="single-family attached" or text()="apartment unit"]]</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(../../h:HVACDistribution/h:DistributionSystemType/h:HydronicDistribution/h:HydronicDistributionType[text()=&quot;radiator&quot; or text()=&quot;baseboard&quot; or text()=&quot;radiant floor&quot; or text()=&quot;radiant ceiling&quot; or text()=&quot;water loop&quot;]) + count(../../h:HVACDistribution/h:DistributionSystemType/h:AirDistribution/h:AirDistributionType[text()=&quot;fan coil&quot;]) &gt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(../../h:HVACDistribution/h:DistributionSystemType/h:HydronicDistribution/h:HydronicDistributionType[text()=&quot;radiator&quot; or text()=&quot;baseboard&quot; or text()=&quot;radiant floor&quot; or text()=&quot;radiant ceiling&quot; or text()=&quot;water loop&quot;]) + count(../../h:HVACDistribution/h:DistributionSystemType/h:AirDistribution/h:AirDistributionType[text()=&quot;fan coil&quot;]) &gt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 or more element(s) for xpath: ../../HVACDistribution/DistributionSystemType/HydronicDistribution/HydronicDistributionType[text()="radiator" or text()="baseboard" or text()="radiant floor" or text()="radiant ceiling" or text()="water loop"] | ../../HVACDistribution/DistributionSystemType/AirDistribution/AirDistributionType[text()="fan coil"]</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:DistributionSystem) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:DistributionSystem) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: DistributionSystem</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:IsSharedSystem[text()=&quot;true&quot;]) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:IsSharedSystem[text()=&quot;true&quot;]) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: IsSharedSystem[text()="true"]</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:NumberofUnitsServed) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:NumberofUnitsServed) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: NumberofUnitsServed</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="number(h:NumberofUnitsServed) &gt; 1 or not(h:NumberofUnitsServed)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:NumberofUnitsServed) &gt; 1 or not(h:NumberofUnitsServed)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected NumberofUnitsServed to be greater than 1</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:CoolingCapacity) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:CoolingCapacity) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: CoolingCapacity</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:AnnualCoolingEfficiency[h:Units=&quot;kW/ton&quot;]/h:Value) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:AnnualCoolingEfficiency[h:Units=&quot;kW/ton&quot;]/h:Value) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: AnnualCoolingEfficiency[Units="kW/ton"]/Value</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:extension/h:SharedLoopWatts) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:extension/h:SharedLoopWatts) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: extension/SharedLoopWatts</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="number(h:extension/h:SharedLoopWatts) &gt;= 0 or not(h:extension/h:SharedLoopWatts)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:extension/h:SharedLoopWatts) &gt;= 0 or not(h:extension/h:SharedLoopWatts)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected extension/SharedLoopWatts to be greater than or equal to 0</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--REPORT WARN-->
<axsl:if test="number(h:CoolingCapacity) &lt;= 1000 and number(h:CoolingCapacity) &gt; 0 and h:CoolingCapacity"><svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:CoolingCapacity) &lt;= 1000 and number(h:CoolingCapacity) &gt; 0 and h:CoolingCapacity"><axsl:attribute name="role">WARN</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Cooling capacity should typically be greater than or equal to 1000 Btu/hr.</svrl:text></svrl:successful-report></axsl:if><axsl:apply-templates select="*" mode="M68"/></axsl:template><axsl:template match="text()" priority="-1" mode="M68"/><axsl:template match="@*|node()" priority="-2" mode="M68"><axsl:apply-templates select="*" mode="M68"/></axsl:template>

<!--PATTERN [CoolingSystemType=SharedChillerWithFanCoil]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[CoolingSystemType=SharedChillerWithFanCoil]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:HVAC/h:HVACPlant/h:CoolingSystem[h:CoolingSystemType=&quot;chiller&quot; and ../../h:HVACDistribution/h:DistributionSystemType/h:AirDistribution/h:AirDistributionType[text()=&quot;fan coil&quot;]]" priority="1000" mode="M69"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:HVAC/h:HVACPlant/h:CoolingSystem[h:CoolingSystemType=&quot;chiller&quot; and ../../h:HVACDistribution/h:DistributionSystemType/h:AirDistribution/h:AirDistributionType[text()=&quot;fan coil&quot;]]"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:extension/h:FanCoilWatts) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:extension/h:FanCoilWatts) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: extension/FanCoilWatts</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="number(h:extension/h:FanCoilWatts) &gt;= 0 or not(h:extension/h:FanCoilWatts)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:extension/h:FanCoilWatts) &gt;= 0 or not(h:extension/h:FanCoilWatts)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected extension/FanCoilWatts to be greater than or equal to 0</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M69"/></axsl:template><axsl:template match="text()" priority="-1" mode="M69"/><axsl:template match="@*|node()" priority="-2" mode="M69"><axsl:apply-templates select="*" mode="M69"/></axsl:template>

<!--PATTERN [CoolingSystemType=SharedChillerWithWLHP]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[CoolingSystemType=SharedChillerWithWLHP]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:HVAC/h:HVACPlant/h:CoolingSystem[h:CoolingSystemType=&quot;chiller&quot; and ../../h:HVACDistribution/h:DistributionSystemType/h:HydronicDistribution/h:HydronicDistributionType[text()=&quot;water loop&quot;]]" priority="1000" mode="M70"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:HVAC/h:HVACPlant/h:CoolingSystem[h:CoolingSystemType=&quot;chiller&quot; and ../../h:HVACDistribution/h:DistributionSystemType/h:HydronicDistribution/h:HydronicDistributionType[text()=&quot;water loop&quot;]]"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(../h:HeatPump[h:HeatPumpType=&quot;water-loop-to-air&quot;]/h:CoolingCapacity) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(../h:HeatPump[h:HeatPumpType=&quot;water-loop-to-air&quot;]/h:CoolingCapacity) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: ../HeatPump[HeatPumpType="water-loop-to-air"]/CoolingCapacity</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(../h:HeatPump[h:HeatPumpType=&quot;water-loop-to-air&quot;]/h:AnnualCoolingEfficiency[h:Units=&quot;EER&quot;]/h:Value) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(../h:HeatPump[h:HeatPumpType=&quot;water-loop-to-air&quot;]/h:AnnualCoolingEfficiency[h:Units=&quot;EER&quot;]/h:Value) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: ../HeatPump[HeatPumpType="water-loop-to-air"]/AnnualCoolingEfficiency[Units="EER"]/Value</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M70"/></axsl:template><axsl:template match="text()" priority="-1" mode="M70"/><axsl:template match="@*|node()" priority="-2" mode="M70"><axsl:apply-templates select="*" mode="M70"/></axsl:template>

<!--PATTERN [CoolingSystemType=SharedCoolingTowerWLHP]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[CoolingSystemType=SharedCoolingTowerWLHP]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:HVAC/h:HVACPlant/h:CoolingSystem[h:CoolingSystemType=&quot;cooling tower&quot;]" priority="1000" mode="M71"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:HVAC/h:HVACPlant/h:CoolingSystem[h:CoolingSystemType=&quot;cooling tower&quot;]"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(../../../../h:BuildingSummary/h:BuildingConstruction[h:ResidentialFacilityType[text()=&quot;single-family attached&quot; or text()=&quot;apartment unit&quot;]]) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(../../../../h:BuildingSummary/h:BuildingConstruction[h:ResidentialFacilityType[text()=&quot;single-family attached&quot; or text()=&quot;apartment unit&quot;]]) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: ../../../../BuildingSummary/BuildingConstruction[ResidentialFacilityType[text()="single-family attached" or text()="apartment unit"]]</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(../../h:HVACDistribution/h:DistributionSystemType/h:HydronicDistribution/h:HydronicDistributionType[text()=&quot;water loop&quot;]) &gt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(../../h:HVACDistribution/h:DistributionSystemType/h:HydronicDistribution/h:HydronicDistributionType[text()=&quot;water loop&quot;]) &gt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 or more element(s) for xpath: ../../HVACDistribution/DistributionSystemType/HydronicDistribution/HydronicDistributionType[text()="water loop"]</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:DistributionSystem) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:DistributionSystem) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: DistributionSystem</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:IsSharedSystem[text()=&quot;true&quot;]) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:IsSharedSystem[text()=&quot;true&quot;]) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: IsSharedSystem[text()="true"]</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:NumberofUnitsServed) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:NumberofUnitsServed) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: NumberofUnitsServed</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="number(h:NumberofUnitsServed) &gt; 1 or not(h:NumberofUnitsServed)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:NumberofUnitsServed) &gt; 1 or not(h:NumberofUnitsServed)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected NumberofUnitsServed to be greater than 1</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:extension/h:SharedLoopWatts) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:extension/h:SharedLoopWatts) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: extension/SharedLoopWatts</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="number(h:extension/h:SharedLoopWatts) &gt;= 0 or not(h:extension/h:SharedLoopWatts)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:extension/h:SharedLoopWatts) &gt;= 0 or not(h:extension/h:SharedLoopWatts)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected extension/SharedLoopWatts to be greater than or equal to 0</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(../h:HeatPump[h:HeatPumpType=&quot;water-loop-to-air&quot;]/h:CoolingCapacity) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(../h:HeatPump[h:HeatPumpType=&quot;water-loop-to-air&quot;]/h:CoolingCapacity) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: ../HeatPump[HeatPumpType="water-loop-to-air"]/CoolingCapacity</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(../h:HeatPump[h:HeatPumpType=&quot;water-loop-to-air&quot;]/h:AnnualCoolingEfficiency[h:Units=&quot;EER&quot;]/h:Value) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(../h:HeatPump[h:HeatPumpType=&quot;water-loop-to-air&quot;]/h:AnnualCoolingEfficiency[h:Units=&quot;EER&quot;]/h:Value) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: ../HeatPump[HeatPumpType="water-loop-to-air"]/AnnualCoolingEfficiency[Units="EER"]/Value</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M71"/></axsl:template><axsl:template match="text()" priority="-1" mode="M71"/><axsl:template match="@*|node()" priority="-2" mode="M71"><axsl:apply-templates select="*" mode="M71"/></axsl:template>

<!--PATTERN [HeatPump]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[HeatPump]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:HVAC/h:HVACPlant/h:HeatPump" priority="1000" mode="M72"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:HVAC/h:HVACPlant/h:HeatPump"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(../../h:HVACControl) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(../../h:HVACControl) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: ../../HVACControl</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:HeatPumpType) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:HeatPumpType) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: HeatPumpType</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="h:HeatPumpType[text()=&quot;air-to-air&quot; or text()=&quot;mini-split&quot; or text()=&quot;ground-to-air&quot; or text()=&quot;water-loop-to-air&quot; or text()=&quot;packaged terminal heat pump&quot;] or not(h:HeatPumpType)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="h:HeatPumpType[text()=&quot;air-to-air&quot; or text()=&quot;mini-split&quot; or text()=&quot;ground-to-air&quot; or text()=&quot;water-loop-to-air&quot; or text()=&quot;packaged terminal heat pump&quot;] or not(h:HeatPumpType)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected HeatPumpType to be 'air-to-air' or 'mini-split' or 'ground-to-air' or 'water-loop-to-air' or 'packaged terminal heat pump'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:HeatPumpFuel) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:HeatPumpFuel) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: HeatPumpFuel</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="h:HeatPumpFuel[text()=&quot;electricity&quot;] or not(h:HeatPumpFuel)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="h:HeatPumpFuel[text()=&quot;electricity&quot;] or not(h:HeatPumpFuel)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected HeatPumpFuel to be 'electricity'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:BackupType) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:BackupType) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: BackupType</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="h:BackupType[text()=&quot;integrated&quot; or text()=&quot;separate&quot;] or not(h:BackupType)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="h:BackupType[text()=&quot;integrated&quot; or text()=&quot;separate&quot;] or not(h:BackupType)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected BackupType to be 'integrated' or 'separate'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M72"/></axsl:template><axsl:template match="text()" priority="-1" mode="M72"/><axsl:template match="@*|node()" priority="-2" mode="M72"><axsl:apply-templates select="*" mode="M72"/></axsl:template>

<!--PATTERN [HeatPumpType=AirSource]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[HeatPumpType=AirSource]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:HVAC/h:HVACPlant/h:HeatPump[h:HeatPumpType=&quot;air-to-air&quot;]" priority="1000" mode="M73"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:HVAC/h:HVACPlant/h:HeatPump[h:HeatPumpType=&quot;air-to-air&quot;]"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(../../h:HVACDistribution/h:DistributionSystemType/h:AirDistribution/h:AirDistributionType[text()=&quot;regular velocity&quot;]) + count(../../h:HVACDistribution/h:DistributionSystemType/h:Other[text()=&quot;DSE&quot;]) &gt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(../../h:HVACDistribution/h:DistributionSystemType/h:AirDistribution/h:AirDistributionType[text()=&quot;regular velocity&quot;]) + count(../../h:HVACDistribution/h:DistributionSystemType/h:Other[text()=&quot;DSE&quot;]) &gt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 or more element(s) for xpath: ../../HVACDistribution/DistributionSystemType/AirDistribution/AirDistributionType[text()="regular velocity"] | ../../HVACDistribution/DistributionSystemType/Other[text()="DSE"]</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:DistributionSystem) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:DistributionSystem) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: DistributionSystem</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:CompressorType) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:CompressorType) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: CompressorType</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="h:CompressorType[text()=&quot;single stage&quot; or text()=&quot;two stage&quot; or text()=&quot;variable speed&quot;] or not(h:CompressorType)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="h:CompressorType[text()=&quot;single stage&quot; or text()=&quot;two stage&quot; or text()=&quot;variable speed&quot;] or not(h:CompressorType)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected CompressorType to be 'single stage' or 'two stage' or 'variable speed'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:HeatingCapacity) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:HeatingCapacity) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: HeatingCapacity</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:HeatingCapacity17F) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:HeatingCapacity17F) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: HeatingCapacity17F</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="number(h:HeatingCapacity17F) &lt;= number(h:HeatingCapacity) or not(h:HeatingCapacity17F) or not(h:HeatingCapacity)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:HeatingCapacity17F) &lt;= number(h:HeatingCapacity) or not(h:HeatingCapacity17F) or not(h:HeatingCapacity)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected HeatingCapacity17F to be less than or equal to HeatingCapacity</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:CoolingCapacity) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:CoolingCapacity) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: CoolingCapacity</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:CoolingSensibleHeatFraction) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:CoolingSensibleHeatFraction) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: CoolingSensibleHeatFraction</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:FractionHeatLoadServed) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:FractionHeatLoadServed) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: FractionHeatLoadServed</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:FractionCoolLoadServed) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:FractionCoolLoadServed) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: FractionCoolLoadServed</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:AnnualCoolingEfficiency[h:Units=&quot;SEER&quot;]/h:Value) + count(h:YearInstalled) &gt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:AnnualCoolingEfficiency[h:Units=&quot;SEER&quot;]/h:Value) + count(h:YearInstalled) &gt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 or more element(s) for xpath: AnnualCoolingEfficiency[Units="SEER"]/Value | YearInstalled</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:AnnualHeatingEfficiency[h:Units=&quot;HSPF&quot;]/h:Value) + count(h:YearInstalled) &gt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:AnnualHeatingEfficiency[h:Units=&quot;HSPF&quot;]/h:Value) + count(h:YearInstalled) &gt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 or more element(s) for xpath: AnnualHeatingEfficiency[Units="HSPF"]/Value | YearInstalled</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:extension/h:FanPowerWattsPerCFM) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:extension/h:FanPowerWattsPerCFM) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: extension/FanPowerWattsPerCFM</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="number(h:extension/h:FanPowerWattsPerCFM) &gt;= 0 or not(h:extension/h:FanPowerWattsPerCFM)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:extension/h:FanPowerWattsPerCFM) &gt;= 0 or not(h:extension/h:FanPowerWattsPerCFM)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected extension/FanPowerWattsPerCFM to be greater than or equal to 0</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:extension/h:AirflowDefectRatio) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:extension/h:AirflowDefectRatio) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: extension/AirflowDefectRatio</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="number(h:extension/h:AirflowDefectRatio) &gt;= -0.9 or not(h:extension/h:AirflowDefectRatio)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:extension/h:AirflowDefectRatio) &gt;= -0.9 or not(h:extension/h:AirflowDefectRatio)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected extension/AirflowDefectRatio to be greater than or equal to -0.9</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="number(h:extension/h:AirflowDefectRatio) &lt;= 9 or not(h:extension/h:AirflowDefectRatio)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:extension/h:AirflowDefectRatio) &lt;= 9 or not(h:extension/h:AirflowDefectRatio)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected extension/AirflowDefectRatio to be less than or equal to 9</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:extension/h:ChargeDefectRatio) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:extension/h:ChargeDefectRatio) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: extension/ChargeDefectRatio</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="number(h:extension/h:ChargeDefectRatio) &gt;= -0.9 or not(h:extension/h:ChargeDefectRatio)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:extension/h:ChargeDefectRatio) &gt;= -0.9 or not(h:extension/h:ChargeDefectRatio)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected extension/ChargeDefectRatio to be greater than or equal to -0.9</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="number(h:extension/h:ChargeDefectRatio) &lt;= 9 or not(h:extension/h:ChargeDefectRatio)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:extension/h:ChargeDefectRatio) &lt;= 9 or not(h:extension/h:ChargeDefectRatio)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected extension/ChargeDefectRatio to be less than or equal to 9</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--REPORT WARN-->
<axsl:if test="number(h:AnnualCoolingEfficiency[h:Units=&quot;SEER&quot;]/h:Value) &lt; 8"><svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:AnnualCoolingEfficiency[h:Units=&quot;SEER&quot;]/h:Value) &lt; 8"><axsl:attribute name="role">WARN</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>SEER should typically be greater than or equal to 8.</svrl:text></svrl:successful-report></axsl:if>

		<!--REPORT WARN-->
<axsl:if test="number(h:AnnualHeatingEfficiency[h:Units=&quot;HSPF&quot;]/h:Value) &lt; 6"><svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:AnnualHeatingEfficiency[h:Units=&quot;HSPF&quot;]/h:Value) &lt; 6"><axsl:attribute name="role">WARN</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>HSPF should typically be greater than or equal to 6.</svrl:text></svrl:successful-report></axsl:if>

		<!--REPORT WARN-->
<axsl:if test="number(h:HeatingCapacity) &lt;= 1000 and number(h:HeatingCapacity) &gt; 0 and h:HeatingCapacity"><svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:HeatingCapacity) &lt;= 1000 and number(h:HeatingCapacity) &gt; 0 and h:HeatingCapacity"><axsl:attribute name="role">WARN</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Heating capacity should typically be greater than or equal to 1000 Btu/hr.</svrl:text></svrl:successful-report></axsl:if>

		<!--REPORT WARN-->
<axsl:if test="number(h:CoolingCapacity) &lt;= 1000 and number(h:CoolingCapacity) &gt; 0 and h:CoolingCapacity"><svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:CoolingCapacity) &lt;= 1000 and number(h:CoolingCapacity) &gt; 0 and h:CoolingCapacity"><axsl:attribute name="role">WARN</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Cooling capacity should typically be greater than or equal to 1000 Btu/hr.</svrl:text></svrl:successful-report></axsl:if><axsl:apply-templates select="*" mode="M73"/></axsl:template><axsl:template match="text()" priority="-1" mode="M73"/><axsl:template match="@*|node()" priority="-2" mode="M73"><axsl:apply-templates select="*" mode="M73"/></axsl:template>

<!--PATTERN [HeatPumpType=MiniSplit]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[HeatPumpType=MiniSplit]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:HVAC/h:HVACPlant/h:HeatPump[h:HeatPumpType=&quot;mini-split&quot;]" priority="1000" mode="M74"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:HVAC/h:HVACPlant/h:HeatPump[h:HeatPumpType=&quot;mini-split&quot;]"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(../../h:HVACDistribution/h:DistributionSystemType/h:AirDistribution/h:AirDistributionType[text()=&quot;regular velocity&quot;]) + count(../../h:HVACDistribution/h:DistributionSystemType/h:Other[text()=&quot;DSE&quot;]) &gt;= 0"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(../../h:HVACDistribution/h:DistributionSystemType/h:AirDistribution/h:AirDistributionType[text()=&quot;regular velocity&quot;]) + count(../../h:HVACDistribution/h:DistributionSystemType/h:Other[text()=&quot;DSE&quot;]) &gt;= 0"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or more element(s) for xpath: ../../HVACDistribution/DistributionSystemType/AirDistribution/AirDistributionType[text()="regular velocity"] | ../../HVACDistribution/DistributionSystemType/Other[text()="DSE"]</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:DistributionSystem) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:DistributionSystem) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: DistributionSystem</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:HeatingCapacity) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:HeatingCapacity) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: HeatingCapacity</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:HeatingCapacity17F) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:HeatingCapacity17F) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: HeatingCapacity17F</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="number(h:HeatingCapacity17F) &lt;= number(h:HeatingCapacity) or not(h:HeatingCapacity17F) or not(h:HeatingCapacity)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:HeatingCapacity17F) &lt;= number(h:HeatingCapacity) or not(h:HeatingCapacity17F) or not(h:HeatingCapacity)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected HeatingCapacity17F to be less than or equal to HeatingCapacity</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:CoolingCapacity) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:CoolingCapacity) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: CoolingCapacity</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:CoolingSensibleHeatFraction) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:CoolingSensibleHeatFraction) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: CoolingSensibleHeatFraction</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:FractionHeatLoadServed) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:FractionHeatLoadServed) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: FractionHeatLoadServed</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:FractionCoolLoadServed) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:FractionCoolLoadServed) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: FractionCoolLoadServed</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:AnnualCoolingEfficiency[h:Units=&quot;SEER&quot;]/h:Value) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:AnnualCoolingEfficiency[h:Units=&quot;SEER&quot;]/h:Value) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: AnnualCoolingEfficiency[Units="SEER"]/Value</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:AnnualHeatingEfficiency[h:Units=&quot;HSPF&quot;]/h:Value) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:AnnualHeatingEfficiency[h:Units=&quot;HSPF&quot;]/h:Value) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: AnnualHeatingEfficiency[Units="HSPF"]/Value</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:extension/h:FanPowerWattsPerCFM) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:extension/h:FanPowerWattsPerCFM) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: extension/FanPowerWattsPerCFM</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="number(h:extension/h:FanPowerWattsPerCFM) &gt;= 0 or not(h:extension/h:FanPowerWattsPerCFM)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:extension/h:FanPowerWattsPerCFM) &gt;= 0 or not(h:extension/h:FanPowerWattsPerCFM)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected extension/FanPowerWattsPerCFM to be greater than or equal to 0</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:extension/h:AirflowDefectRatio) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:extension/h:AirflowDefectRatio) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: extension/AirflowDefectRatio</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="number(h:extension/h:AirflowDefectRatio) &gt;= -0.9 or not(h:extension/h:AirflowDefectRatio)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:extension/h:AirflowDefectRatio) &gt;= -0.9 or not(h:extension/h:AirflowDefectRatio)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected extension/AirflowDefectRatio to be greater than or equal to -0.9</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="number(h:extension/h:AirflowDefectRatio) &lt;= 9 or not(h:extension/h:AirflowDefectRatio)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:extension/h:AirflowDefectRatio) &lt;= 9 or not(h:extension/h:AirflowDefectRatio)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected extension/AirflowDefectRatio to be less than or equal to 9</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:extension/h:ChargeDefectRatio) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:extension/h:ChargeDefectRatio) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: extension/ChargeDefectRatio</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="number(h:extension/h:ChargeDefectRatio) &gt;= -0.9 or not(h:extension/h:ChargeDefectRatio)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:extension/h:ChargeDefectRatio) &gt;= -0.9 or not(h:extension/h:ChargeDefectRatio)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected extension/ChargeDefectRatio to be greater than or equal to -0.9</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="number(h:extension/h:ChargeDefectRatio) &lt;= 9 or not(h:extension/h:ChargeDefectRatio)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:extension/h:ChargeDefectRatio) &lt;= 9 or not(h:extension/h:ChargeDefectRatio)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected extension/ChargeDefectRatio to be less than or equal to 9</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--REPORT WARN-->
<axsl:if test="number(h:AnnualCoolingEfficiency[h:Units=&quot;SEER&quot;]/h:Value) &lt; 8"><svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:AnnualCoolingEfficiency[h:Units=&quot;SEER&quot;]/h:Value) &lt; 8"><axsl:attribute name="role">WARN</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>SEER should typically be greater than or equal to 8.</svrl:text></svrl:successful-report></axsl:if>

		<!--REPORT WARN-->
<axsl:if test="number(h:AnnualHeatingEfficiency[h:Units=&quot;HSPF&quot;]/h:Value) &lt; 6"><svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:AnnualHeatingEfficiency[h:Units=&quot;HSPF&quot;]/h:Value) &lt; 6"><axsl:attribute name="role">WARN</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>HSPF should typically be greater than or equal to 6.</svrl:text></svrl:successful-report></axsl:if>

		<!--REPORT WARN-->
<axsl:if test="number(h:HeatingCapacity) &lt;= 1000 and number(h:HeatingCapacity) &gt; 0 and h:HeatingCapacity"><svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:HeatingCapacity) &lt;= 1000 and number(h:HeatingCapacity) &gt; 0 and h:HeatingCapacity"><axsl:attribute name="role">WARN</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Heating capacity should typically be greater than or equal to 1000 Btu/hr.</svrl:text></svrl:successful-report></axsl:if>

		<!--REPORT WARN-->
<axsl:if test="number(h:CoolingCapacity) &lt;= 1000 and number(h:CoolingCapacity) &gt; 0 and h:CoolingCapacity"><svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:CoolingCapacity) &lt;= 1000 and number(h:CoolingCapacity) &gt; 0 and h:CoolingCapacity"><axsl:attribute name="role">WARN</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Cooling capacity should typically be greater than or equal to 1000 Btu/hr.</svrl:text></svrl:successful-report></axsl:if><axsl:apply-templates select="*" mode="M74"/></axsl:template><axsl:template match="text()" priority="-1" mode="M74"/><axsl:template match="@*|node()" priority="-2" mode="M74"><axsl:apply-templates select="*" mode="M74"/></axsl:template>

<!--PATTERN [HeatPumpType=GroundSource]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[HeatPumpType=GroundSource]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:HVAC/h:HVACPlant/h:HeatPump[h:HeatPumpType=&quot;ground-to-air&quot;]" priority="1000" mode="M75"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:HVAC/h:HVACPlant/h:HeatPump[h:HeatPumpType=&quot;ground-to-air&quot;]"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(../../h:HVACDistribution/h:DistributionSystemType/h:AirDistribution/h:AirDistributionType[text()=&quot;regular velocity&quot;]) + count(../../h:HVACDistribution/h:DistributionSystemType/h:Other[text()=&quot;DSE&quot;]) &gt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(../../h:HVACDistribution/h:DistributionSystemType/h:AirDistribution/h:AirDistributionType[text()=&quot;regular velocity&quot;]) + count(../../h:HVACDistribution/h:DistributionSystemType/h:Other[text()=&quot;DSE&quot;]) &gt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 or more element(s) for xpath: ../../HVACDistribution/DistributionSystemType/AirDistribution/AirDistributionType[text()="regular velocity"] | ../../HVACDistribution/DistributionSystemType/Other[text()="DSE"]</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:IsSharedSystem) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:IsSharedSystem) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: IsSharedSystem</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:DistributionSystem) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:DistributionSystem) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: DistributionSystem</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:BackupHeatingSwitchoverTemperature) = 0"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:BackupHeatingSwitchoverTemperature) = 0"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 element(s) for xpath: BackupHeatingSwitchoverTemperature</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:HeatingCapacity) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:HeatingCapacity) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: HeatingCapacity</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:CoolingCapacity) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:CoolingCapacity) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: CoolingCapacity</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:CoolingSensibleHeatFraction) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:CoolingSensibleHeatFraction) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: CoolingSensibleHeatFraction</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:FractionHeatLoadServed) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:FractionHeatLoadServed) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: FractionHeatLoadServed</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:FractionCoolLoadServed) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:FractionCoolLoadServed) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: FractionCoolLoadServed</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:AnnualCoolingEfficiency[h:Units=&quot;EER&quot;]/h:Value) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:AnnualCoolingEfficiency[h:Units=&quot;EER&quot;]/h:Value) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: AnnualCoolingEfficiency[Units="EER"]/Value</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:AnnualHeatingEfficiency[h:Units=&quot;COP&quot;]/h:Value) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:AnnualHeatingEfficiency[h:Units=&quot;COP&quot;]/h:Value) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: AnnualHeatingEfficiency[Units="COP"]/Value</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:extension/h:PumpPowerWattsPerTon) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:extension/h:PumpPowerWattsPerTon) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: extension/PumpPowerWattsPerTon</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="number(h:extension/h:PumpPowerWattsPerTon) &gt;= 0 or not(h:extension/h:PumpPowerWattsPerTon)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:extension/h:PumpPowerWattsPerTon) &gt;= 0 or not(h:extension/h:PumpPowerWattsPerTon)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected extension/PumpPowerWattsPerTon to be greater than or equal to 0</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:extension/h:FanPowerWattsPerCFM) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:extension/h:FanPowerWattsPerCFM) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: extension/FanPowerWattsPerCFM</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="number(h:extension/h:FanPowerWattsPerCFM) &gt;= 0 or not(h:extension/h:FanPowerWattsPerCFM)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:extension/h:FanPowerWattsPerCFM) &gt;= 0 or not(h:extension/h:FanPowerWattsPerCFM)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected extension/FanPowerWattsPerCFM to be greater than or equal to 0</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:extension/h:AirflowDefectRatio) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:extension/h:AirflowDefectRatio) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: extension/AirflowDefectRatio</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="number(h:extension/h:AirflowDefectRatio) &gt;= -0.9 or not(h:extension/h:AirflowDefectRatio)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:extension/h:AirflowDefectRatio) &gt;= -0.9 or not(h:extension/h:AirflowDefectRatio)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected extension/AirflowDefectRatio to be greater than or equal to -0.9</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="number(h:extension/h:AirflowDefectRatio) &lt;= 9 or not(h:extension/h:AirflowDefectRatio)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:extension/h:AirflowDefectRatio) &lt;= 9 or not(h:extension/h:AirflowDefectRatio)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected extension/AirflowDefectRatio to be less than or equal to 9</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:extension/h:ChargeDefectRatio) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:extension/h:ChargeDefectRatio) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: extension/ChargeDefectRatio</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="number(h:extension/h:ChargeDefectRatio) &gt;= -0.9 or not(h:extension/h:ChargeDefectRatio)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:extension/h:ChargeDefectRatio) &gt;= -0.9 or not(h:extension/h:ChargeDefectRatio)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected extension/ChargeDefectRatio to be greater than or equal to -0.9</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="number(h:extension/h:ChargeDefectRatio) &lt;= 9 or not(h:extension/h:ChargeDefectRatio)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:extension/h:ChargeDefectRatio) &lt;= 9 or not(h:extension/h:ChargeDefectRatio)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected extension/ChargeDefectRatio to be less than or equal to 9</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--REPORT WARN-->
<axsl:if test="number(h:AnnualCoolingEfficiency[h:Units=&quot;EER&quot;]/h:Value) &lt; 8"><svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:AnnualCoolingEfficiency[h:Units=&quot;EER&quot;]/h:Value) &lt; 8"><axsl:attribute name="role">WARN</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>EER should typically be greater than or equal to 8.</svrl:text></svrl:successful-report></axsl:if>

		<!--REPORT WARN-->
<axsl:if test="number(h:AnnualHeatingEfficiency[h:Units=&quot;COP&quot;]/h:Value) &lt; 2"><svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:AnnualHeatingEfficiency[h:Units=&quot;COP&quot;]/h:Value) &lt; 2"><axsl:attribute name="role">WARN</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>COP should typically be greater than or equal to 2.</svrl:text></svrl:successful-report></axsl:if>

		<!--REPORT WARN-->
<axsl:if test="number(h:HeatingCapacity) &lt;= 1000 and number(h:HeatingCapacity) &gt; 0 and h:HeatingCapacity"><svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:HeatingCapacity) &lt;= 1000 and number(h:HeatingCapacity) &gt; 0 and h:HeatingCapacity"><axsl:attribute name="role">WARN</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Heating capacity should typically be greater than or equal to 1000 Btu/hr.</svrl:text></svrl:successful-report></axsl:if>

		<!--REPORT WARN-->
<axsl:if test="number(h:CoolingCapacity) &lt;= 1000 and number(h:CoolingCapacity) &gt; 0 and h:CoolingCapacity"><svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:CoolingCapacity) &lt;= 1000 and number(h:CoolingCapacity) &gt; 0 and h:CoolingCapacity"><axsl:attribute name="role">WARN</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Cooling capacity should typically be greater than or equal to 1000 Btu/hr.</svrl:text></svrl:successful-report></axsl:if><axsl:apply-templates select="*" mode="M75"/></axsl:template><axsl:template match="text()" priority="-1" mode="M75"/><axsl:template match="@*|node()" priority="-2" mode="M75"><axsl:apply-templates select="*" mode="M75"/></axsl:template>

<!--PATTERN [HeatPumpType=GroundSourceWithSharedLoop]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[HeatPumpType=GroundSourceWithSharedLoop]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:HVAC/h:HVACPlant/h:HeatPump[h:HeatPumpType=&quot;ground-to-air&quot; and h:IsSharedSystem=&quot;true&quot;]" priority="1000" mode="M76"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:HVAC/h:HVACPlant/h:HeatPump[h:HeatPumpType=&quot;ground-to-air&quot; and h:IsSharedSystem=&quot;true&quot;]"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(../../../../h:BuildingSummary/h:BuildingConstruction[h:ResidentialFacilityType[text()=&quot;single-family attached&quot; or text()=&quot;apartment unit&quot;]]) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(../../../../h:BuildingSummary/h:BuildingConstruction[h:ResidentialFacilityType[text()=&quot;single-family attached&quot; or text()=&quot;apartment unit&quot;]]) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: ../../../../BuildingSummary/BuildingConstruction[ResidentialFacilityType[text()="single-family attached" or text()="apartment unit"]]</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:NumberofUnitsServed) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:NumberofUnitsServed) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: NumberofUnitsServed</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="number(h:NumberofUnitsServed) &gt; 1 or not(h:NumberofUnitsServed)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:NumberofUnitsServed) &gt; 1 or not(h:NumberofUnitsServed)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected NumberofUnitsServed to be greater than 1</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:extension/h:SharedLoopWatts) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:extension/h:SharedLoopWatts) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: extension/SharedLoopWatts</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="number(h:extension/h:SharedLoopWatts) &gt;= 0 or not(h:extension/h:SharedLoopWatts)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:extension/h:SharedLoopWatts) &gt;= 0 or not(h:extension/h:SharedLoopWatts)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected extension/SharedLoopWatts to be greater than or equal to 0</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M76"/></axsl:template><axsl:template match="text()" priority="-1" mode="M76"/><axsl:template match="@*|node()" priority="-2" mode="M76"><axsl:apply-templates select="*" mode="M76"/></axsl:template>

<!--PATTERN [HeatPumpType=WaterLoop]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[HeatPumpType=WaterLoop]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:HVAC/h:HVACPlant/h:HeatPump[h:HeatPumpType=&quot;water-loop-to-air&quot;]" priority="1000" mode="M77"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:HVAC/h:HVACPlant/h:HeatPump[h:HeatPumpType=&quot;water-loop-to-air&quot;]"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(../../h:HVACDistribution/h:DistributionSystemType/h:AirDistribution/h:AirDistributionType[text()=&quot;regular velocity&quot;]) + count(../../h:HVACDistribution/h:DistributionSystemType/h:Other[text()=&quot;DSE&quot;]) &gt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(../../h:HVACDistribution/h:DistributionSystemType/h:AirDistribution/h:AirDistributionType[text()=&quot;regular velocity&quot;]) + count(../../h:HVACDistribution/h:DistributionSystemType/h:Other[text()=&quot;DSE&quot;]) &gt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 or more element(s) for xpath: ../../HVACDistribution/DistributionSystemType/AirDistribution/AirDistributionType[text()="regular velocity"] | ../../HVACDistribution/DistributionSystemType/Other[text()="DSE"]</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(../h:HeatingSystem[h:HeatingSystemType/h:Boiler and h:IsSharedSystem=&quot;true&quot;]) + count(../h:CoolingSystem[(h:CoolingSystemType=&quot;chiller&quot; or h:CoolingSystemType=&quot;cooling tower&quot;) and h:IsSharedSystem=&quot;true&quot;]) &gt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(../h:HeatingSystem[h:HeatingSystemType/h:Boiler and h:IsSharedSystem=&quot;true&quot;]) + count(../h:CoolingSystem[(h:CoolingSystemType=&quot;chiller&quot; or h:CoolingSystemType=&quot;cooling tower&quot;) and h:IsSharedSystem=&quot;true&quot;]) &gt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 or more element(s) for xpath: ../HeatingSystem[HeatingSystemType/Boiler and IsSharedSystem="true"] | ../CoolingSystem[(CoolingSystemType="chiller" or CoolingSystemType="cooling tower") and IsSharedSystem="true"]</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(../../h:HVACDistribution/h:DistributionSystemType/h:HydronicDistribution/h:HydronicDistributionType[text()=&quot;water loop&quot;]) &gt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(../../h:HVACDistribution/h:DistributionSystemType/h:HydronicDistribution/h:HydronicDistributionType[text()=&quot;water loop&quot;]) &gt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 or more element(s) for xpath: ../../HVACDistribution/DistributionSystemType/HydronicDistribution[HydronicDistributionType="water loop"]</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M77"/></axsl:template><axsl:template match="text()" priority="-1" mode="M77"/><axsl:template match="@*|node()" priority="-2" mode="M77"><axsl:apply-templates select="*" mode="M77"/></axsl:template>

<!--PATTERN [HeatPumpType=PTHP]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[HeatPumpType=PTHP]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:HVAC/h:HVACPlant/h:HeatPump[h:HeatPumpType=&quot;packaged terminal heat pump&quot;]" priority="1000" mode="M78"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:HVAC/h:HVACPlant/h:HeatPump[h:HeatPumpType=&quot;packaged terminal heat pump&quot;]"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:DistributionSystem) = 0"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:DistributionSystem) = 0"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 element(s) for xpath: DistributionSystem</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:HeatingCapacity) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:HeatingCapacity) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: HeatingCapacity</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:CoolingCapacity) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:CoolingCapacity) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: CoolingCapacity</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:AnnualCoolingEfficiency[h:Units=&quot;EER&quot; or h:Units=&quot;CEER&quot;]/h:Value) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:AnnualCoolingEfficiency[h:Units=&quot;EER&quot; or h:Units=&quot;CEER&quot;]/h:Value) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: AnnualCoolingEfficiency[Units="EER" or Units="CEER"]/Value</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:AnnualHeatingEfficiency[h:Units=&quot;COP&quot;]/h:Value) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:AnnualHeatingEfficiency[h:Units=&quot;COP&quot;]/h:Value) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: AnnualHeatingEfficiency[Units="COP"]/Value</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:CoolingSensibleHeatFraction) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:CoolingSensibleHeatFraction) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: CoolingSensibleHeatFraction</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:FractionHeatLoadServed) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:FractionHeatLoadServed) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: FractionHeatLoadServed</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:FractionCoolLoadServed) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:FractionCoolLoadServed) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: FractionCoolLoadServed</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--REPORT WARN-->
<axsl:if test="number(h:HeatingCapacity) &lt;= 1000 and number(h:HeatingCapacity) &gt; 0 and h:HeatingCapacity"><svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:HeatingCapacity) &lt;= 1000 and number(h:HeatingCapacity) &gt; 0 and h:HeatingCapacity"><axsl:attribute name="role">WARN</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Heating capacity should typically be greater than or equal to 1000 Btu/hr.</svrl:text></svrl:successful-report></axsl:if>

		<!--REPORT WARN-->
<axsl:if test="number(h:CoolingCapacity) &lt;= 1000 and number(h:CoolingCapacity) &gt; 0 and h:CoolingCapacity"><svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:CoolingCapacity) &lt;= 1000 and number(h:CoolingCapacity) &gt; 0 and h:CoolingCapacity"><axsl:attribute name="role">WARN</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Cooling capacity should typically be greater than or equal to 1000 Btu/hr.</svrl:text></svrl:successful-report></axsl:if><axsl:apply-templates select="*" mode="M78"/></axsl:template><axsl:template match="text()" priority="-1" mode="M78"/><axsl:template match="@*|node()" priority="-2" mode="M78"><axsl:apply-templates select="*" mode="M78"/></axsl:template>

<!--PATTERN [HeatPumpBackup=Integrated]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[HeatPumpBackup=Integrated]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:HVAC/h:HVACPlant/h:HeatPump[h:BackupType=&quot;integrated&quot; or h:BackupSystemFuel]" priority="1000" mode="M79"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:HVAC/h:HVACPlant/h:HeatPump[h:BackupType=&quot;integrated&quot; or h:BackupSystemFuel]"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:BackupType[text()=&quot;integrated&quot;]) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:BackupType[text()=&quot;integrated&quot;]) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: BackupType[text()="integrated"]</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:BackupSystemFuel) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:BackupSystemFuel) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: BackupSystemFuel</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="h:BackupSystemFuel[text()=&quot;electricity&quot; or text()=&quot;natural gas&quot; or text()=&quot;fuel oil&quot; or text()=&quot;fuel oil 1&quot; or text()=&quot;fuel oil 2&quot; or text()=&quot;fuel oil 4&quot; or text()=&quot;fuel oil 5/6&quot; or text()=&quot;diesel&quot; or text()=&quot;propane&quot; or text()=&quot;kerosene&quot; or text()=&quot;coal&quot; or text()=&quot;coke&quot; or text()=&quot;bituminous coal&quot; or text()=&quot;wood&quot; or text()=&quot;wood pellets&quot;] or not(h:BackupSystemFuel)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="h:BackupSystemFuel[text()=&quot;electricity&quot; or text()=&quot;natural gas&quot; or text()=&quot;fuel oil&quot; or text()=&quot;fuel oil 1&quot; or text()=&quot;fuel oil 2&quot; or text()=&quot;fuel oil 4&quot; or text()=&quot;fuel oil 5/6&quot; or text()=&quot;diesel&quot; or text()=&quot;propane&quot; or text()=&quot;kerosene&quot; or text()=&quot;coal&quot; or text()=&quot;coke&quot; or text()=&quot;bituminous coal&quot; or text()=&quot;wood&quot; or text()=&quot;wood pellets&quot;] or not(h:BackupSystemFuel)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected BackupSystemFuel to be 'electricity' or 'natural gas' or 'fuel oil' or 'fuel oil 1' or 'fuel oil 2' or 'fuel oil 4' or 'fuel oil 5/6' or 'diesel' or 'propane' or 'kerosene' or 'coal' or 'coke' or 'bituminous coal' or 'wood' or 'wood pellets'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:BackupAnnualHeatingEfficiency[h:Units=&quot;Percent&quot; or h:Units=&quot;AFUE&quot;]/h:Value) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:BackupAnnualHeatingEfficiency[h:Units=&quot;Percent&quot; or h:Units=&quot;AFUE&quot;]/h:Value) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: BackupAnnualHeatingEfficiency[Units="Percent" or Units="AFUE"]/Value</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="number(h:BackupAnnualHeatingEfficiency[h:Units=&quot;Percent&quot; or h:Units=&quot;AFUE&quot;]/h:Value) &lt;= 1 or not(h:BackupAnnualHeatingEfficiency[h:Units=&quot;Percent&quot; or h:Units=&quot;AFUE&quot;]/h:Value)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:BackupAnnualHeatingEfficiency[h:Units=&quot;Percent&quot; or h:Units=&quot;AFUE&quot;]/h:Value) &lt;= 1 or not(h:BackupAnnualHeatingEfficiency[h:Units=&quot;Percent&quot; or h:Units=&quot;AFUE&quot;]/h:Value)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected BackupAnnualHeatingEfficiency[Units="Percent" or Units="AFUE"]/Value to be less than or equal to 1</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:BackupHeatingCapacity) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:BackupHeatingCapacity) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: BackupHeatingCapacity</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:HeatingCapacity) + count(h:BackupHeatingCapacity) = 0 or count(h:HeatingCapacity) + count(h:BackupHeatingCapacity) = 2"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:HeatingCapacity) + count(h:BackupHeatingCapacity) = 0 or count(h:HeatingCapacity) + count(h:BackupHeatingCapacity) = 2"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 2 element(s) for xpath: HeatingCapacity | BackupHeatingCapacity</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:BackupHeatingSwitchoverTemperature) + count(h:BackupHeatingLockoutTemperature) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:BackupHeatingSwitchoverTemperature) + count(h:BackupHeatingLockoutTemperature) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: BackupHeatingSwitchoverTemperature | BackupHeatingLockoutTemperature</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--REPORT WARN-->
<axsl:if test="number(h:BackupAnnualHeatingEfficiency[h:Units=&quot;Percent&quot;]/h:Value) &lt; 0.6"><svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:BackupAnnualHeatingEfficiency[h:Units=&quot;Percent&quot;]/h:Value) &lt; 0.6"><axsl:attribute name="role">WARN</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Percent efficiency should typically be greater than or equal to 0.6.</svrl:text></svrl:successful-report></axsl:if>

		<!--REPORT WARN-->
<axsl:if test="number(h:BackupAnnualHeatingEfficiency[h:Units=&quot;AFUE&quot;]/h:Value) &lt; 0.6"><svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:BackupAnnualHeatingEfficiency[h:Units=&quot;AFUE&quot;]/h:Value) &lt; 0.6"><axsl:attribute name="role">WARN</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>AFUE should typically be greater than or equal to 0.6.</svrl:text></svrl:successful-report></axsl:if>

		<!--REPORT WARN-->
<axsl:if test="number(h:BackupHeatingCapacity) &lt;= 1000 and number(h:BackupHeatingCapacity) &gt; 0 and h:BackupHeatingCapacity"><svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:BackupHeatingCapacity) &lt;= 1000 and number(h:BackupHeatingCapacity) &gt; 0 and h:BackupHeatingCapacity"><axsl:attribute name="role">WARN</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Backup heating capacity should typically be greater than or equal to 1000 Btu/hr.</svrl:text></svrl:successful-report></axsl:if><axsl:apply-templates select="*" mode="M79"/></axsl:template><axsl:template match="text()" priority="-1" mode="M79"/><axsl:template match="@*|node()" priority="-2" mode="M79"><axsl:apply-templates select="*" mode="M79"/></axsl:template>

<!--PATTERN [HeatPumpBackup=Separate]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[HeatPumpBackup=Separate]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:HVAC/h:HVACPlant/h:HeatPump[h:BackupType=&quot;separate&quot; or h:BackupSystem]" priority="1000" mode="M80"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:HVAC/h:HVACPlant/h:HeatPump[h:BackupType=&quot;separate&quot; or h:BackupSystem]"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="sum(../*/h:FractionHeatLoadServed) &lt;= 1.01 and sum(../*/h:FractionHeatLoadServed) &gt;= 0.99"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="sum(../*/h:FractionHeatLoadServed) &lt;= 1.01 and sum(../*/h:FractionHeatLoadServed) &gt;= 0.99"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected sum(FractionHeatLoadServed) to be 1</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:BackupType[text()=&quot;separate&quot;]) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:BackupType[text()=&quot;separate&quot;]) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: BackupType[text()="separate"]</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:BackupSystem) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:BackupSystem) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: BackupSystem</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:BackupHeatingSwitchoverTemperature) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:BackupHeatingSwitchoverTemperature) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: BackupHeatingSwitchoverTemperature</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M80"/></axsl:template><axsl:template match="text()" priority="-1" mode="M80"/><axsl:template match="@*|node()" priority="-2" mode="M80"><axsl:apply-templates select="*" mode="M80"/></axsl:template>

<!--PATTERN [HVACControl=Heating]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[HVACControl=Heating]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:HVAC/h:HVACControl[sum(../h:HVACPlant/*/h:FractionHeatLoadServed) &gt; 0]" priority="1000" mode="M81"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:HVAC/h:HVACControl[sum(../h:HVACPlant/*/h:FractionHeatLoadServed) &gt; 0]"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:SetpointTempHeatingSeason) + count(h:extension/h:WeekdaySetpointTempsHeatingSeason) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:SetpointTempHeatingSeason) + count(h:extension/h:WeekdaySetpointTempsHeatingSeason) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: SetpointTempHeatingSeason | extension/WeekdaySetpointTempsHeatingSeason</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:SetpointTempHeatingSeason) + count(h:extension/h:WeekendSetpointTempsHeatingSeason) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:SetpointTempHeatingSeason) + count(h:extension/h:WeekendSetpointTempsHeatingSeason) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: SetpointTempHeatingSeason | extension/WeekendSetpointTempsHeatingSeason</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:SetbackTempHeatingSeason) + count(h:extension/h:WeekdaySetpointTempsHeatingSeason) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:SetbackTempHeatingSeason) + count(h:extension/h:WeekdaySetpointTempsHeatingSeason) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: SetbackTempHeatingSeason | extension/WeekdaySetpointTempsHeatingSeason</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:SetbackTempHeatingSeason) + count(h:extension/h:WeekendSetpointTempsHeatingSeason) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:SetbackTempHeatingSeason) + count(h:extension/h:WeekendSetpointTempsHeatingSeason) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: SetbackTempHeatingSeason | extension/WeekendSetpointTempsHeatingSeason</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:HeatingSeason) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:HeatingSeason) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: Heating</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--REPORT WARN-->
<axsl:if test="number(h:SetpointTempHeatingSeason) &lt; 58"><svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:SetpointTempHeatingSeason) &lt; 58"><axsl:attribute name="role">WARN</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Heating setpoint should typically be greater than or equal to 58 deg-F.</svrl:text></svrl:successful-report></axsl:if>

		<!--REPORT WARN-->
<axsl:if test="number(h:SetpointTempHeatingSeason) &gt; 76"><svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:SetpointTempHeatingSeason) &gt; 76"><axsl:attribute name="role">WARN</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Heating setpoint should typically be less than or equal to 76 deg-F.</svrl:text></svrl:successful-report></axsl:if><axsl:apply-templates select="*" mode="M81"/></axsl:template><axsl:template match="text()" priority="-1" mode="M81"/><axsl:template match="@*|node()" priority="-2" mode="M81"><axsl:apply-templates select="*" mode="M81"/></axsl:template>

<!--PATTERN [HVACControl=HeatingSetback]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[HVACControl=HeatingSetback]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:HVAC/h:HVACControl[h:SetbackTempHeatingSeason]" priority="1000" mode="M82"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:HVAC/h:HVACControl[h:SetbackTempHeatingSeason]"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:TotalSetbackHoursperWeekHeating) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:TotalSetbackHoursperWeekHeating) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: TotalSetbackHoursperWeekHeating</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:extension/h:SetbackStartHourHeating) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:extension/h:SetbackStartHourHeating) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: extension/SetbackStartHourHeating</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="number(h:extension/h:SetbackStartHourHeating) &gt;= 0 or not(h:extension/h:SetbackStartHourHeating)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:extension/h:SetbackStartHourHeating) &gt;= 0 or not(h:extension/h:SetbackStartHourHeating)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected extension/SetbackStartHourHeating to be greater than or equal to 0</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="number(h:extension/h:SetbackStartHourHeating) &lt;= 23 or not(h:extension/h:SetbackStartHourHeating)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:extension/h:SetbackStartHourHeating) &lt;= 23 or not(h:extension/h:SetbackStartHourHeating)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected extension/SetbackStartHourHeating to be less than or equal to 23</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M82"/></axsl:template><axsl:template match="text()" priority="-1" mode="M82"/><axsl:template match="@*|node()" priority="-2" mode="M82"><axsl:apply-templates select="*" mode="M82"/></axsl:template>

<!--PATTERN [HVACControl=HeatingSeason]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[HVACControl=HeatingSeason]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:HVAC/h:HVACControl/h:HeatingSeason" priority="1000" mode="M83"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:HVAC/h:HVACControl/h:HeatingSeason"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:BeginMonth) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:BeginMonth) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: BeginMonth</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:BeginDayOfMonth) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:BeginDayOfMonth) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: BeginDayOfMonth</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:EndMonth) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:EndMonth) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: EndMonth</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:EndDayOfMonth) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:EndDayOfMonth) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: EndDayOfMonth</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M83"/></axsl:template><axsl:template match="text()" priority="-1" mode="M83"/><axsl:template match="@*|node()" priority="-2" mode="M83"><axsl:apply-templates select="*" mode="M83"/></axsl:template>

<!--PATTERN [HVACControl=Cooling]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[HVACControl=Cooling]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:HVAC/h:HVACControl[sum(../h:HVACPlant/*/h:FractionCoolLoadServed) &gt; 0]" priority="1000" mode="M84"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:HVAC/h:HVACControl[sum(../h:HVACPlant/*/h:FractionCoolLoadServed) &gt; 0]"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:SetpointTempCoolingSeason) + count(h:extension/h:WeekdaySetpointTempsCoolingSeason) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:SetpointTempCoolingSeason) + count(h:extension/h:WeekdaySetpointTempsCoolingSeason) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: SetpointTempCoolingSeason | extension/WeekdaySetpointTempsCoolingSeason</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:SetpointTempCoolingSeason) + count(h:extension/h:WeekendSetpointTempsCoolingSeason) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:SetpointTempCoolingSeason) + count(h:extension/h:WeekendSetpointTempsCoolingSeason) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: SetpointTempCoolingSeason | extension/WeekendSetpointTempsCoolingSeason</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:SetupTempCoolingSeason) + count(h:extension/h:WeekdaySetpointTempsCoolingSeason) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:SetupTempCoolingSeason) + count(h:extension/h:WeekdaySetpointTempsCoolingSeason) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: SetupTempCoolingSeason | extension/WeekdaySetpointTempsCoolingSeason</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:SetupTempCoolingSeason) + count(h:extension/h:WeekendSetpointTempsCoolingSeason) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:SetupTempCoolingSeason) + count(h:extension/h:WeekendSetpointTempsCoolingSeason) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: SetupTempCoolingSeason | extension/WeekendSetpointTempsCoolingSeason</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:extension/h:CeilingFanSetpointTempCoolingSeasonOffset) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:extension/h:CeilingFanSetpointTempCoolingSeasonOffset) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: extension/CeilingFanSetpointTempCoolingSeasonOffset</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:CoolingSeason) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:CoolingSeason) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: Cooling</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--REPORT WARN-->
<axsl:if test="number(h:SetpointTempCoolingSeason) &lt; 68"><svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:SetpointTempCoolingSeason) &lt; 68"><axsl:attribute name="role">WARN</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Cooling setpoint should typically be greater than or equal to 68 deg-F.</svrl:text></svrl:successful-report></axsl:if>

		<!--REPORT WARN-->
<axsl:if test="number(h:SetpointTempCoolingSeason) &gt; 86"><svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:SetpointTempCoolingSeason) &gt; 86"><axsl:attribute name="role">WARN</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Cooling setpoint should typically be less than or equal to 86 deg-F.</svrl:text></svrl:successful-report></axsl:if><axsl:apply-templates select="*" mode="M84"/></axsl:template><axsl:template match="text()" priority="-1" mode="M84"/><axsl:template match="@*|node()" priority="-2" mode="M84"><axsl:apply-templates select="*" mode="M84"/></axsl:template>

<!--PATTERN [HVACControl=CoolingSetup]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[HVACControl=CoolingSetup]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:HVAC/h:HVACControl[h:SetupTempCoolingSeason]" priority="1000" mode="M85"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:HVAC/h:HVACControl[h:SetupTempCoolingSeason]"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:TotalSetupHoursperWeekCooling) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:TotalSetupHoursperWeekCooling) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: TotalSetupHoursperWeekCooling</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:extension/h:SetupStartHourCooling) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:extension/h:SetupStartHourCooling) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: extension/SetupStartHourCooling</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="number(h:extension/h:SetupStartHourCooling) &gt;= 0 or not(h:extension/h:SetupStartHourCooling)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:extension/h:SetupStartHourCooling) &gt;= 0 or not(h:extension/h:SetupStartHourCooling)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected extension/SetupStartHourCooling to be greater than or equal to 0</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="number(h:extension/h:SetupStartHourCooling) &lt;= 23 or not(h:extension/h:SetupStartHourCooling)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:extension/h:SetupStartHourCooling) &lt;= 23 or not(h:extension/h:SetupStartHourCooling)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected extension/SetupStartHourCooling to be less than or equal to 23</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M85"/></axsl:template><axsl:template match="text()" priority="-1" mode="M85"/><axsl:template match="@*|node()" priority="-2" mode="M85"><axsl:apply-templates select="*" mode="M85"/></axsl:template>

<!--PATTERN [HVACControl=CoolingSeason]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[HVACControl=CoolingSeason]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:HVAC/h:HVACControl/h:CoolingSeason" priority="1000" mode="M86"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:HVAC/h:HVACControl/h:CoolingSeason"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:BeginMonth) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:BeginMonth) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: BeginMonth</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:BeginDayOfMonth) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:BeginDayOfMonth) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: BeginDayOfMonth</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:EndMonth) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:EndMonth) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: EndMonth</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:EndDayOfMonth) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:EndDayOfMonth) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: EndDayOfMonth</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M86"/></axsl:template><axsl:template match="text()" priority="-1" mode="M86"/><axsl:template match="@*|node()" priority="-2" mode="M86"><axsl:apply-templates select="*" mode="M86"/></axsl:template>

<!--PATTERN [HVACDistribution]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[HVACDistribution]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:HVAC/h:HVACDistribution" priority="1000" mode="M87"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:HVAC/h:HVACDistribution"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:DistributionSystemType[h:AirDistribution | h:HydronicDistribution | h:Other[text()=&quot;DSE&quot;]]) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:DistributionSystemType[h:AirDistribution | h:HydronicDistribution | h:Other[text()=&quot;DSE&quot;]]) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: DistributionSystemType[AirDistribution | HydronicDistribution | Other[text()="DSE"]]</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M87"/></axsl:template><axsl:template match="text()" priority="-1" mode="M87"/><axsl:template match="@*|node()" priority="-2" mode="M87"><axsl:apply-templates select="*" mode="M87"/></axsl:template>

<!--PATTERN [HVACDistributionType=Air]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[HVACDistributionType=Air]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:HVAC/h:HVACDistribution/h:DistributionSystemType/h:AirDistribution" priority="1000" mode="M88"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:HVAC/h:HVACDistribution/h:DistributionSystemType/h:AirDistribution"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:AirDistributionType) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:AirDistributionType) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: AirDistributionType</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="h:AirDistributionType[text()=&quot;regular velocity&quot; or text()=&quot;gravity&quot; or text()=&quot;fan coil&quot;] or not(h:AirDistributionType)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="h:AirDistributionType[text()=&quot;regular velocity&quot; or text()=&quot;gravity&quot; or text()=&quot;fan coil&quot;] or not(h:AirDistributionType)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected AirDistributionType to be 'regular velocity' or 'gravity' or 'fan coil'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Ducts) &gt;= 0"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Ducts) &gt;= 0"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or more element(s) for xpath: Ducts</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="(sum(h:Ducts[h:DuctType=&quot;supply&quot;]/h:FractionDuctArea) &gt;= 0.99 and sum(h:Ducts[h:DuctType=&quot;supply&quot;]/h:FractionDuctArea) &lt;= 1.01) or count(h:Ducts[h:DuctType=&quot;supply&quot;]/h:FractionDuctArea) = 0"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(sum(h:Ducts[h:DuctType=&quot;supply&quot;]/h:FractionDuctArea) &gt;= 0.99 and sum(h:Ducts[h:DuctType=&quot;supply&quot;]/h:FractionDuctArea) &lt;= 1.01) or count(h:Ducts[h:DuctType=&quot;supply&quot;]/h:FractionDuctArea) = 0"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected sum(Ducts/FractionDuctArea) for DuctType="supply" to be 1</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="(sum(h:Ducts[h:DuctType=&quot;return&quot;]/h:FractionDuctArea) &gt;= 0.99 and sum(h:Ducts[h:DuctType=&quot;return&quot;]/h:FractionDuctArea) &lt;= 1.01) or count(h:Ducts[h:DuctType=&quot;return&quot;]/h:FractionDuctArea) = 0"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(sum(h:Ducts[h:DuctType=&quot;return&quot;]/h:FractionDuctArea) &gt;= 0.99 and sum(h:Ducts[h:DuctType=&quot;return&quot;]/h:FractionDuctArea) &lt;= 1.01) or count(h:Ducts[h:DuctType=&quot;return&quot;]/h:FractionDuctArea) = 0"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected sum(Ducts/FractionDuctArea) for DuctType="return" to be 1</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--REPORT WARN-->
<axsl:if test="sum(h:DuctLeakageMeasurement/h:DuctLeakage[h:Units=&quot;CFM25&quot; and h:TotalOrToOutside=&quot;to outside&quot;]/h:Value) &gt; 0.04 * number(../../../../../h:BuildingSummary/h:BuildingConstruction/h:ConditionedFloorArea) and sum(h:Ducts[h:DuctLocation[text()!=&quot;living space&quot; and text()!=&quot;basement - conditioned&quot; and text()!=&quot;crawlspace - conditioned&quot;]]/h:FractionDuctArea) = 0 and sum(h:Ducts[h:DuctLocation[text()!=&quot;living space&quot; and text()!=&quot;basement - conditioned&quot; and text()!=&quot;crawlspace - conditioned&quot;]]/h:DuctSurfaceArea) = 0 and count(h:Ducts[h:FractionDuctArea | h:DuctSurfaceArea]) &gt; 0"><svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="sum(h:DuctLeakageMeasurement/h:DuctLeakage[h:Units=&quot;CFM25&quot; and h:TotalOrToOutside=&quot;to outside&quot;]/h:Value) &gt; 0.04 * number(../../../../../h:BuildingSummary/h:BuildingConstruction/h:ConditionedFloorArea) and sum(h:Ducts[h:DuctLocation[text()!=&quot;living space&quot; and text()!=&quot;basement - conditioned&quot; and text()!=&quot;crawlspace - conditioned&quot;]]/h:FractionDuctArea) = 0 and sum(h:Ducts[h:DuctLocation[text()!=&quot;living space&quot; and text()!=&quot;basement - conditioned&quot; and text()!=&quot;crawlspace - conditioned&quot;]]/h:DuctSurfaceArea) = 0 and count(h:Ducts[h:FractionDuctArea | h:DuctSurfaceArea]) &gt; 0"><axsl:attribute name="role">WARN</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Ducts are entirely within conditioned space but there is moderate leakage to the outside. Leakage to the outside is typically zero or near-zero in these situations, consider revising leakage values. Leakage will be modeled as heat lost to the ambient environment.</svrl:text></svrl:successful-report></axsl:if>

		<!--REPORT WARN-->
<axsl:if test="sum(h:DuctLeakageMeasurement/h:DuctLeakage[h:Units=&quot;CFM50&quot; and h:TotalOrToOutside=&quot;to outside&quot;]/h:Value) &gt; 0.06 * number(../../../../../h:BuildingSummary/h:BuildingConstruction/h:ConditionedFloorArea) and sum(h:Ducts[h:DuctLocation[text()!=&quot;living space&quot; and text()!=&quot;basement - conditioned&quot; and text()!=&quot;crawlspace - conditioned&quot;]]/h:FractionDuctArea) = 0 and sum(h:Ducts[h:DuctLocation[text()!=&quot;living space&quot; and text()!=&quot;basement - conditioned&quot; and text()!=&quot;crawlspace - conditioned&quot;]]/h:DuctSurfaceArea) = 0 and count(h:Ducts[h:FractionDuctArea | h:DuctSurfaceArea]) &gt; 0"><svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="sum(h:DuctLeakageMeasurement/h:DuctLeakage[h:Units=&quot;CFM50&quot; and h:TotalOrToOutside=&quot;to outside&quot;]/h:Value) &gt; 0.06 * number(../../../../../h:BuildingSummary/h:BuildingConstruction/h:ConditionedFloorArea) and sum(h:Ducts[h:DuctLocation[text()!=&quot;living space&quot; and text()!=&quot;basement - conditioned&quot; and text()!=&quot;crawlspace - conditioned&quot;]]/h:FractionDuctArea) = 0 and sum(h:Ducts[h:DuctLocation[text()!=&quot;living space&quot; and text()!=&quot;basement - conditioned&quot; and text()!=&quot;crawlspace - conditioned&quot;]]/h:DuctSurfaceArea) = 0 and count(h:Ducts[h:FractionDuctArea | h:DuctSurfaceArea]) &gt; 0"><axsl:attribute name="role">WARN</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Ducts are entirely within conditioned space but there is moderate leakage to the outside. Leakage to the outside is typically zero or near-zero in these situations, consider revising leakage values. Leakage will be modeled as heat lost to the ambient environment.</svrl:text></svrl:successful-report></axsl:if>

		<!--REPORT WARN-->
<axsl:if test="sum(h:DuctLeakageMeasurement/h:DuctLeakage[h:Units=&quot;Percent&quot; and h:TotalOrToOutside=&quot;to outside&quot;]/h:Value) &gt; 0.05 and sum(h:Ducts[h:DuctLocation[text()!=&quot;living space&quot; and text()!=&quot;basement - conditioned&quot; and text()!=&quot;crawlspace - conditioned&quot;]]/h:FractionDuctArea) = 0 and sum(h:Ducts[h:DuctLocation[text()!=&quot;living space&quot; and text()!=&quot;basement - conditioned&quot; and text()!=&quot;crawlspace - conditioned&quot;]]/h:DuctSurfaceArea) = 0 and count(h:Ducts[h:FractionDuctArea | h:DuctSurfaceArea]) &gt; 0"><svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="sum(h:DuctLeakageMeasurement/h:DuctLeakage[h:Units=&quot;Percent&quot; and h:TotalOrToOutside=&quot;to outside&quot;]/h:Value) &gt; 0.05 and sum(h:Ducts[h:DuctLocation[text()!=&quot;living space&quot; and text()!=&quot;basement - conditioned&quot; and text()!=&quot;crawlspace - conditioned&quot;]]/h:FractionDuctArea) = 0 and sum(h:Ducts[h:DuctLocation[text()!=&quot;living space&quot; and text()!=&quot;basement - conditioned&quot; and text()!=&quot;crawlspace - conditioned&quot;]]/h:DuctSurfaceArea) = 0 and count(h:Ducts[h:FractionDuctArea | h:DuctSurfaceArea]) &gt; 0"><axsl:attribute name="role">WARN</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Ducts are entirely within conditioned space but there is moderate leakage to the outside. Leakage to the outside is typically zero or near-zero in these situations, consider revising leakage values. Leakage will be modeled as heat lost to the ambient environment.</svrl:text></svrl:successful-report></axsl:if><axsl:apply-templates select="*" mode="M88"/></axsl:template><axsl:template match="text()" priority="-1" mode="M88"/><axsl:template match="@*|node()" priority="-2" mode="M88"><axsl:apply-templates select="*" mode="M88"/></axsl:template>

<!--PATTERN [AirDistributionType=RegularVelocityOrGravity]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[AirDistributionType=RegularVelocityOrGravity]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:HVAC/h:HVACDistribution/h:DistributionSystemType/h:AirDistribution[h:AirDistributionType[text()=&quot;regular velocity&quot; or text()=&quot;gravity&quot;]]" priority="1000" mode="M89"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:HVAC/h:HVACDistribution/h:DistributionSystemType/h:AirDistribution[h:AirDistributionType[text()=&quot;regular velocity&quot; or text()=&quot;gravity&quot;]]"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:DuctLeakageMeasurement[h:DuctType=&quot;supply&quot;]/h:DuctLeakage[(h:Units=&quot;CFM25&quot; or h:Units=&quot;CFM50&quot; or h:Units=&quot;Percent&quot;) and h:TotalOrToOutside=&quot;to outside&quot;]) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:DuctLeakageMeasurement[h:DuctType=&quot;supply&quot;]/h:DuctLeakage[(h:Units=&quot;CFM25&quot; or h:Units=&quot;CFM50&quot; or h:Units=&quot;Percent&quot;) and h:TotalOrToOutside=&quot;to outside&quot;]) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: DuctLeakageMeasurement[DuctType="supply"]/DuctLeakage[(Units="CFM25" or Units="CFM50" or Units="Percent") and TotalOrToOutside="to outside"]</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:DuctLeakageMeasurement[h:DuctType=&quot;return&quot;]/h:DuctLeakage[(h:Units=&quot;CFM25&quot; or h:Units=&quot;CFM50&quot; or h:Units=&quot;Percent&quot;) and h:TotalOrToOutside=&quot;to outside&quot;]) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:DuctLeakageMeasurement[h:DuctType=&quot;return&quot;]/h:DuctLeakage[(h:Units=&quot;CFM25&quot; or h:Units=&quot;CFM50&quot; or h:Units=&quot;Percent&quot;) and h:TotalOrToOutside=&quot;to outside&quot;]) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: DuctLeakageMeasurement[DuctType="return"]/DuctLeakage[(Units="CFM25" or Units="CFM50" or Units="Percent") and TotalOrToOutside="to outside"]</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M89"/></axsl:template><axsl:template match="text()" priority="-1" mode="M89"/><axsl:template match="@*|node()" priority="-2" mode="M89"><axsl:apply-templates select="*" mode="M89"/></axsl:template>

<!--PATTERN [AirDistributionType=FanCoil]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[AirDistributionType=FanCoil]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:HVAC/h:HVACDistribution/h:DistributionSystemType/h:AirDistribution[h:AirDistributionType[text()=&quot;fan coil&quot;]]" priority="1000" mode="M90"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:HVAC/h:HVACDistribution/h:DistributionSystemType/h:AirDistribution[h:AirDistributionType[text()=&quot;fan coil&quot;]]"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:DuctLeakageMeasurement[h:DuctType=&quot;supply&quot;]/h:DuctLeakage[(h:Units=&quot;CFM25&quot; or h:Units=&quot;CFM50&quot; or h:Units=&quot;Percent&quot;) and h:TotalOrToOutside=&quot;to outside&quot;]) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:DuctLeakageMeasurement[h:DuctType=&quot;supply&quot;]/h:DuctLeakage[(h:Units=&quot;CFM25&quot; or h:Units=&quot;CFM50&quot; or h:Units=&quot;Percent&quot;) and h:TotalOrToOutside=&quot;to outside&quot;]) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: DuctLeakageMeasurement[DuctType="supply"]/DuctLeakage[(Units="CFM25" or Units="CFM50" or Units="Percent") and TotalOrToOutside="to outside"]</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:DuctLeakageMeasurement[h:DuctType=&quot;return&quot;]/h:DuctLeakage[(h:Units=&quot;CFM25&quot; or h:Units=&quot;CFM50&quot; or h:Units=&quot;Percent&quot;) and h:TotalOrToOutside=&quot;to outside&quot;]) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:DuctLeakageMeasurement[h:DuctType=&quot;return&quot;]/h:DuctLeakage[(h:Units=&quot;CFM25&quot; or h:Units=&quot;CFM50&quot; or h:Units=&quot;Percent&quot;) and h:TotalOrToOutside=&quot;to outside&quot;]) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: DuctLeakageMeasurement[DuctType="return"]/DuctLeakage[(Units="CFM25" or Units="CFM50" or Units="Percent") and TotalOrToOutside="to outside"]</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M90"/></axsl:template><axsl:template match="text()" priority="-1" mode="M90"/><axsl:template match="@*|node()" priority="-2" mode="M90"><axsl:apply-templates select="*" mode="M90"/></axsl:template>

<!--PATTERN [DuctLeakage=CFM]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[DuctLeakage=CFM]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:HVAC/h:HVACDistribution/h:DistributionSystemType/h:AirDistribution/h:DuctLeakageMeasurement/h:DuctLeakage[h:Units=&quot;CFM25&quot; or h:Units=&quot;CFM50&quot;]" priority="1000" mode="M91"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:HVAC/h:HVACDistribution/h:DistributionSystemType/h:AirDistribution/h:DuctLeakageMeasurement/h:DuctLeakage[h:Units=&quot;CFM25&quot; or h:Units=&quot;CFM50&quot;]"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Value) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Value) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: Value</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="number(h:Value) &gt;= 0 or not(h:Value)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:Value) &gt;= 0 or not(h:Value)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected Value to be greater than or equal to 0</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M91"/></axsl:template><axsl:template match="text()" priority="-1" mode="M91"/><axsl:template match="@*|node()" priority="-2" mode="M91"><axsl:apply-templates select="*" mode="M91"/></axsl:template>

<!--PATTERN [DuctLeakage=Percent]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[DuctLeakage=Percent]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:HVAC/h:HVACDistribution/h:DistributionSystemType/h:AirDistribution/h:DuctLeakageMeasurement/h:DuctLeakage[h:Units=&quot;Percent&quot;]" priority="1000" mode="M92"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:HVAC/h:HVACDistribution/h:DistributionSystemType/h:AirDistribution/h:DuctLeakageMeasurement/h:DuctLeakage[h:Units=&quot;Percent&quot;]"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Value) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Value) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: Value</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="number(h:Value) &gt;= 0 or not(h:Value)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:Value) &gt;= 0 or not(h:Value)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected Value to be greater than or equal to 0</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="number(h:Value) &lt; 1 or not(h:Value)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:Value) &lt; 1 or not(h:Value)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected Value to be less than 1</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M92"/></axsl:template><axsl:template match="text()" priority="-1" mode="M92"/><axsl:template match="@*|node()" priority="-2" mode="M92"><axsl:apply-templates select="*" mode="M92"/></axsl:template>

<!--PATTERN [HVACDistributionType=Hydronic]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[HVACDistributionType=Hydronic]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:HVAC/h:HVACDistribution/h:DistributionSystemType/h:HydronicDistribution" priority="1000" mode="M93"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:HVAC/h:HVACDistribution/h:DistributionSystemType/h:HydronicDistribution"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:HydronicDistributionType) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:HydronicDistributionType) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: HydronicDistributionType</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="h:HydronicDistributionType[text()=&quot;radiator&quot; or text()=&quot;baseboard&quot; or text()=&quot;radiant floor&quot; or text()=&quot;radiant ceiling&quot; or text()=&quot;water loop&quot;] or not(h:HydronicDistributionType)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="h:HydronicDistributionType[text()=&quot;radiator&quot; or text()=&quot;baseboard&quot; or text()=&quot;radiant floor&quot; or text()=&quot;radiant ceiling&quot; or text()=&quot;water loop&quot;] or not(h:HydronicDistributionType)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected HydronicDistributionType to be 'radiator' or 'baseboard' or 'radiant floor' or 'radiant ceiling' or 'water loop'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M93"/></axsl:template><axsl:template match="text()" priority="-1" mode="M93"/><axsl:template match="@*|node()" priority="-2" mode="M93"><axsl:apply-templates select="*" mode="M93"/></axsl:template>

<!--PATTERN [HVACDistributionType=DSE]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[HVACDistributionType=DSE]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:HVAC/h:HVACDistribution[h:DistributionSystemType[h:Other[text()=&quot;DSE&quot;]]]" priority="1000" mode="M94"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:HVAC/h:HVACDistribution[h:DistributionSystemType[h:Other[text()=&quot;DSE&quot;]]]"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:AnnualHeatingDistributionSystemEfficiency) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:AnnualHeatingDistributionSystemEfficiency) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: AnnualHeatingDistributionSystemEfficiency</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:AnnualCoolingDistributionSystemEfficiency) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:AnnualCoolingDistributionSystemEfficiency) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: AnnualCoolingDistributionSystemEfficiency</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--REPORT WARN-->
<axsl:if test="number(h:AnnualHeatingDistributionSystemEfficiency) &lt; 0.5"><svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:AnnualHeatingDistributionSystemEfficiency) &lt; 0.5"><axsl:attribute name="role">WARN</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Heating DSE should typically be greater than or equal to 0.5.</svrl:text></svrl:successful-report></axsl:if>

		<!--REPORT WARN-->
<axsl:if test="number(h:AnnualCoolingDistributionSystemEfficiency) &lt; 0.5"><svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:AnnualCoolingDistributionSystemEfficiency) &lt; 0.5"><axsl:attribute name="role">WARN</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Cooling DSE should typically be greater than or equal to 0.5.</svrl:text></svrl:successful-report></axsl:if><axsl:apply-templates select="*" mode="M94"/></axsl:template><axsl:template match="text()" priority="-1" mode="M94"/><axsl:template match="@*|node()" priority="-2" mode="M94"><axsl:apply-templates select="*" mode="M94"/></axsl:template>

<!--PATTERN [HVACDuct]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[HVACDuct]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:HVAC/h:HVACDistribution/h:DistributionSystemType/h:AirDistribution/h:Ducts" priority="1000" mode="M95"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:HVAC/h:HVACDistribution/h:DistributionSystemType/h:AirDistribution/h:Ducts"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:DuctType) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:DuctType) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: DuctType</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="h:DuctType[text()=&quot;supply&quot; or text()=&quot;return&quot;] or not(h:DuctType)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="h:DuctType[text()=&quot;supply&quot; or text()=&quot;return&quot;] or not(h:DuctType)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected DuctType to be 'supply' or 'return'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:DuctInsulationRValue) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:DuctInsulationRValue) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: DuctInsulationRValue</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:DuctLocation) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:DuctLocation) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: DuctLocation</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="h:DuctLocation[text()=&quot;living space&quot; or text()=&quot;basement - conditioned&quot; or text()=&quot;basement - unconditioned&quot; or text()=&quot;crawlspace - vented&quot; or text()=&quot;crawlspace - unvented&quot; or text()=&quot;crawlspace - conditioned&quot; or text()=&quot;attic - vented&quot; or text()=&quot;attic - unvented&quot; or text()=&quot;garage&quot; or text()=&quot;exterior wall&quot; or text()=&quot;under slab&quot; or text()=&quot;roof deck&quot; or text()=&quot;outside&quot; or text()=&quot;other housing unit&quot; or text()=&quot;other heated space&quot; or text()=&quot;other multifamily buffer space&quot; or text()=&quot;other non-freezing space&quot;] or not(h:DuctLocation)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="h:DuctLocation[text()=&quot;living space&quot; or text()=&quot;basement - conditioned&quot; or text()=&quot;basement - unconditioned&quot; or text()=&quot;crawlspace - vented&quot; or text()=&quot;crawlspace - unvented&quot; or text()=&quot;crawlspace - conditioned&quot; or text()=&quot;attic - vented&quot; or text()=&quot;attic - unvented&quot; or text()=&quot;garage&quot; or text()=&quot;exterior wall&quot; or text()=&quot;under slab&quot; or text()=&quot;roof deck&quot; or text()=&quot;outside&quot; or text()=&quot;other housing unit&quot; or text()=&quot;other heated space&quot; or text()=&quot;other multifamily buffer space&quot; or text()=&quot;other non-freezing space&quot;] or not(h:DuctLocation)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected DuctLocation to be 'living space' or 'basement - conditioned' or 'basement - unconditioned' or 'crawlspace - vented' or 'crawlspace - unvented' or 'crawlspace - conditioned' or 'attic - vented' or 'attic - unvented' or 'garage' or 'exterior wall' or 'under slab' or 'roof deck' or 'outside' or 'other housing unit' or 'other heated space' or 'other multifamily buffer space' or 'other non-freezing space'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M95"/></axsl:template><axsl:template match="text()" priority="-1" mode="M95"/><axsl:template match="@*|node()" priority="-2" mode="M95"><axsl:apply-templates select="*" mode="M95"/></axsl:template>

<!--PATTERN [HVACDuct=WithLocation]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[HVACDuct=WithLocation]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:HVAC/h:HVACDistribution/h:DistributionSystemType/h:AirDistribution/h:Ducts[h:DuctLocation]" priority="1000" mode="M96"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:HVAC/h:HVACDistribution/h:DistributionSystemType/h:AirDistribution/h:Ducts[h:DuctLocation]"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:FractionDuctArea) + count(h:DuctSurfaceArea) &gt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:FractionDuctArea) + count(h:DuctSurfaceArea) &gt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 or more element(s) for xpath: FractionDuctArea | DuctSurfaceArea</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M96"/></axsl:template><axsl:template match="text()" priority="-1" mode="M96"/><axsl:template match="@*|node()" priority="-2" mode="M96"><axsl:apply-templates select="*" mode="M96"/></axsl:template>

<!--PATTERN [HVACDuct=WithoutLocation]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[HVACDuct=WithoutLocation]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:HVAC/h:HVACDistribution/h:DistributionSystemType/h:AirDistribution/h:Ducts[not(h:DuctLocation)]" priority="1000" mode="M97"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:HVAC/h:HVACDistribution/h:DistributionSystemType/h:AirDistribution/h:Ducts[not(h:DuctLocation)]"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:FractionDuctArea) + count(h:DuctSurfaceArea) = 0"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:FractionDuctArea) + count(h:DuctSurfaceArea) = 0"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 element(s) for xpath: FractionDuctArea | DuctSurfaceArea</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M97"/></axsl:template><axsl:template match="text()" priority="-1" mode="M97"/><axsl:template match="@*|node()" priority="-2" mode="M97"><axsl:apply-templates select="*" mode="M97"/></axsl:template>

<!--PATTERN [HVACDuct=SurfaceAreaDefaulted]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[HVACDuct=SurfaceAreaDefaulted]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:HVAC/h:HVACDistribution/h:DistributionSystemType/h:AirDistribution/h:Ducts[not(h:DuctSurfaceArea)]" priority="1000" mode="M98"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:HVAC/h:HVACDistribution/h:DistributionSystemType/h:AirDistribution/h:Ducts[not(h:DuctSurfaceArea)]"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(../h:NumberofReturnRegisters) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(../h:NumberofReturnRegisters) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: ../NumberofReturnRegisters</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(../../../h:ConditionedFloorAreaServed) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(../../../h:ConditionedFloorAreaServed) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: ../../../ConditionedFloorAreaServed</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M98"/></axsl:template><axsl:template match="text()" priority="-1" mode="M98"/><axsl:template match="@*|node()" priority="-2" mode="M98"><axsl:apply-templates select="*" mode="M98"/></axsl:template>

<!--PATTERN [VentilationFan]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[VentilationFan]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:MechanicalVentilation/h:VentilationFans/h:VentilationFan" priority="1000" mode="M99"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:MechanicalVentilation/h:VentilationFans/h:VentilationFan"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:UsedForWholeBuildingVentilation[text()=&quot;true&quot;]) + count(h:UsedForLocalVentilation[text()=&quot;true&quot;]) + count(h:UsedForSeasonalCoolingLoadReduction[text()=&quot;true&quot;]) + count(h:UsedForGarageVentilation[text()=&quot;true&quot;]) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:UsedForWholeBuildingVentilation[text()=&quot;true&quot;]) + count(h:UsedForLocalVentilation[text()=&quot;true&quot;]) + count(h:UsedForSeasonalCoolingLoadReduction[text()=&quot;true&quot;]) + count(h:UsedForGarageVentilation[text()=&quot;true&quot;]) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: UsedForWholeBuildingVentilation[text()="true"] | UsedForLocalVentilation[text()="true"] | UsedForSeasonalCoolingLoadReduction[text()="true"] | UsedForGarageVentilation[text()="true"]</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M99"/></axsl:template><axsl:template match="text()" priority="-1" mode="M99"/><axsl:template match="@*|node()" priority="-2" mode="M99"><axsl:apply-templates select="*" mode="M99"/></axsl:template>

<!--PATTERN [MechanicalVentilation]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[MechanicalVentilation]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:MechanicalVentilation/h:VentilationFans/h:VentilationFan[h:UsedForWholeBuildingVentilation=&quot;true&quot;]" priority="1000" mode="M100"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:MechanicalVentilation/h:VentilationFans/h:VentilationFan[h:UsedForWholeBuildingVentilation=&quot;true&quot;]"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:IsSharedSystem) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:IsSharedSystem) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: IsSharedSystem</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:FanType) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:FanType) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: FanType</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="h:FanType[text()=&quot;energy recovery ventilator&quot; or text()=&quot;heat recovery ventilator&quot; or text()=&quot;exhaust only&quot; or text()=&quot;supply only&quot; or text()=&quot;balanced&quot; or text()=&quot;central fan integrated supply&quot;] or not(h:FanType)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="h:FanType[text()=&quot;energy recovery ventilator&quot; or text()=&quot;heat recovery ventilator&quot; or text()=&quot;exhaust only&quot; or text()=&quot;supply only&quot; or text()=&quot;balanced&quot; or text()=&quot;central fan integrated supply&quot;] or not(h:FanType)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected FanType to be 'energy recovery ventilator' or 'heat recovery ventilator' or 'exhaust only' or 'supply only' or 'balanced' or 'central fan integrated supply'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:RatedFlowRate) + count(h:CalculatedFlowRate) + count(h:TestedFlowRate) + count(h:DeliveredVentilation) &gt;= 0"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:RatedFlowRate) + count(h:CalculatedFlowRate) + count(h:TestedFlowRate) + count(h:DeliveredVentilation) &gt;= 0"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or more element(s) for xpath: RatedFlowRate | CalculatedFlowRate | TestedFlowRate | DeliveredVentilation</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:HoursInOperation) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:HoursInOperation) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: HoursInOperation</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:FanPower) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:FanPower) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: FanPower</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M100"/></axsl:template><axsl:template match="text()" priority="-1" mode="M100"/><axsl:template match="@*|node()" priority="-2" mode="M100"><axsl:apply-templates select="*" mode="M100"/></axsl:template>

<!--PATTERN [MechanicalVentilationType=HRV]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[MechanicalVentilationType=HRV]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:MechanicalVentilation/h:VentilationFans/h:VentilationFan[h:UsedForWholeBuildingVentilation=&quot;true&quot; and h:FanType=&quot;heat recovery ventilator&quot;]" priority="1000" mode="M101"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:MechanicalVentilation/h:VentilationFans/h:VentilationFan[h:UsedForWholeBuildingVentilation=&quot;true&quot; and h:FanType=&quot;heat recovery ventilator&quot;]"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:SensibleRecoveryEfficiency) + count(h:AdjustedSensibleRecoveryEfficiency) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:SensibleRecoveryEfficiency) + count(h:AdjustedSensibleRecoveryEfficiency) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: SensibleRecoveryEfficiency | AdjustedSensibleRecoveryEfficiency</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M101"/></axsl:template><axsl:template match="text()" priority="-1" mode="M101"/><axsl:template match="@*|node()" priority="-2" mode="M101"><axsl:apply-templates select="*" mode="M101"/></axsl:template>

<!--PATTERN [MechanicalVentilationType=ERV]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[MechanicalVentilationType=ERV]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:MechanicalVentilation/h:VentilationFans/h:VentilationFan[h:UsedForWholeBuildingVentilation=&quot;true&quot; and h:FanType=&quot;energy recovery ventilator&quot;]" priority="1000" mode="M102"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:MechanicalVentilation/h:VentilationFans/h:VentilationFan[h:UsedForWholeBuildingVentilation=&quot;true&quot; and h:FanType=&quot;energy recovery ventilator&quot;]"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:TotalRecoveryEfficiency) + count(h:AdjustedTotalRecoveryEfficiency) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:TotalRecoveryEfficiency) + count(h:AdjustedTotalRecoveryEfficiency) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: TotalRecoveryEfficiency | AdjustedTotalRecoveryEfficiency</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:SensibleRecoveryEfficiency) + count(h:AdjustedSensibleRecoveryEfficiency) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:SensibleRecoveryEfficiency) + count(h:AdjustedSensibleRecoveryEfficiency) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: SensibleRecoveryEfficiency | AdjustedSensibleRecoveryEfficiency</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M102"/></axsl:template><axsl:template match="text()" priority="-1" mode="M102"/><axsl:template match="@*|node()" priority="-2" mode="M102"><axsl:apply-templates select="*" mode="M102"/></axsl:template>

<!--PATTERN [MechanicalVentilationType=CFIS]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[MechanicalVentilationType=CFIS]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:MechanicalVentilation/h:VentilationFans/h:VentilationFan[h:UsedForWholeBuildingVentilation=&quot;true&quot; and h:FanType=&quot;central fan integrated supply&quot;]" priority="1000" mode="M103"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:MechanicalVentilation/h:VentilationFans/h:VentilationFan[h:UsedForWholeBuildingVentilation=&quot;true&quot; and h:FanType=&quot;central fan integrated supply&quot;]"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:AttachedToHVACDistributionSystem) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:AttachedToHVACDistributionSystem) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: AttachedToHVACDistributionSystem</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:IsSharedSystem[text()=&quot;true&quot;]) = 0"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:IsSharedSystem[text()=&quot;true&quot;]) = 0"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 element(s) for xpath: IsSharedSystem[text()="true"]</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:extension/h:VentilationOnlyModeAirflowFraction) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:extension/h:VentilationOnlyModeAirflowFraction) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: extension/VentilationOnlyModeAirflowFraction</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="number(h:extension/h:VentilationOnlyModeAirflowFraction) &gt;= 0 or not(h:extension/h:VentilationOnlyModeAirflowFraction)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:extension/h:VentilationOnlyModeAirflowFraction) &gt;= 0 or not(h:extension/h:VentilationOnlyModeAirflowFraction)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected extension/VentilationOnlyModeAirflowFraction to be greater than or equal to 0</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="number(h:extension/h:VentilationOnlyModeAirflowFraction) &lt;= 1 or not(h:extension/h:VentilationOnlyModeAirflowFraction)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:extension/h:VentilationOnlyModeAirflowFraction) &lt;= 1 or not(h:extension/h:VentilationOnlyModeAirflowFraction)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected extension/VentilationOnlyModeAirflowFraction to be less than or equal to 1</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M103"/></axsl:template><axsl:template match="text()" priority="-1" mode="M103"/><axsl:template match="@*|node()" priority="-2" mode="M103"><axsl:apply-templates select="*" mode="M103"/></axsl:template>

<!--PATTERN [MechanicalVentilationType=Shared]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[MechanicalVentilationType=Shared]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:MechanicalVentilation/h:VentilationFans/h:VentilationFan[h:UsedForWholeBuildingVentilation=&quot;true&quot; and h:IsSharedSystem=&quot;true&quot;]" priority="1000" mode="M104"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:MechanicalVentilation/h:VentilationFans/h:VentilationFan[h:UsedForWholeBuildingVentilation=&quot;true&quot; and h:IsSharedSystem=&quot;true&quot;]"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:FractionRecirculation) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:FractionRecirculation) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: FractionRecirculation</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:extension/h:InUnitFlowRate) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:extension/h:InUnitFlowRate) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: extension/InUnitFlowRate</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="number(h:RatedFlowRate) &gt; number(h:extension/h:InUnitFlowRate) or not(h:RatedFlowRate) or not(h:extension/h:InUnitFlowRate)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:RatedFlowRate) &gt; number(h:extension/h:InUnitFlowRate) or not(h:RatedFlowRate) or not(h:extension/h:InUnitFlowRate)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected RatedFlowRate to be greater than extension/InUnitFlowRate</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="number(h:CalculatedFlowRate) &gt; number(h:extension/h:InUnitFlowRate) or not(h:CalculatedFlowRate) or not(h:extension/h:InUnitFlowRate)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:CalculatedFlowRate) &gt; number(h:extension/h:InUnitFlowRate) or not(h:CalculatedFlowRate) or not(h:extension/h:InUnitFlowRate)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected CalculatedFlowRate to be greater than extension/InUnitFlowRate</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="number(h:TestedFlowRate) &gt; number(h:extension/h:InUnitFlowRate) or not(h:TestedFlowRate) or not(h:extension/h:InUnitFlowRate)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:TestedFlowRate) &gt; number(h:extension/h:InUnitFlowRate) or not(h:TestedFlowRate) or not(h:extension/h:InUnitFlowRate)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected TestedFlowRate to be greater than extension/InUnitFlowRate</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="number(h:DeliveredVentilation) &gt; number(h:extension/h:InUnitFlowRate) or not(h:DeliveredVentilation) or not(h:extension/h:InUnitFlowRate)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:DeliveredVentilation) &gt; number(h:extension/h:InUnitFlowRate) or not(h:DeliveredVentilation) or not(h:extension/h:InUnitFlowRate)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected DeliveredVentilation to be greater than extension/InUnitFlowRate</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:extension/h:PreHeating) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:extension/h:PreHeating) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: extension/PreHeating</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:extension/h:PreCooling) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:extension/h:PreCooling) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: extension/PreCooling</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M104"/></axsl:template><axsl:template match="text()" priority="-1" mode="M104"/><axsl:template match="@*|node()" priority="-2" mode="M104"><axsl:apply-templates select="*" mode="M104"/></axsl:template>

<!--PATTERN [MechanicalVentilationType=SharedWithPreHeating]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[MechanicalVentilationType=SharedWithPreHeating]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:MechanicalVentilation/h:VentilationFans/h:VentilationFan[h:UsedForWholeBuildingVentilation=&quot;true&quot; and h:IsSharedSystem=&quot;true&quot;]/h:extension/h:PreHeating" priority="1000" mode="M105"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:MechanicalVentilation/h:VentilationFans/h:VentilationFan[h:UsedForWholeBuildingVentilation=&quot;true&quot; and h:IsSharedSystem=&quot;true&quot;]/h:extension/h:PreHeating"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(../../h:FanType[text()=&quot;exhaust only&quot;]) = 0"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(../../h:FanType[text()=&quot;exhaust only&quot;]) = 0"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 element(s) for xpath: ../../FanType[text()="exhaust only"]</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Fuel) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Fuel) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: Fuel</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="h:Fuel[text()=&quot;natural gas&quot; or text()=&quot;fuel oil&quot; or text()=&quot;fuel oil 1&quot; or text()=&quot;fuel oil 2&quot; or text()=&quot;fuel oil 4&quot; or text()=&quot;fuel oil 5/6&quot; or text()=&quot;diesel&quot; or text()=&quot;propane&quot; or text()=&quot;kerosene&quot; or text()=&quot;coal&quot; or text()=&quot;coke&quot; or text()=&quot;bituminous coal&quot; or text()=&quot;anthracite coal&quot; or text()=&quot;electricity&quot; or text()=&quot;wood&quot; or text()=&quot;wood pellets&quot;] or not(h:Fuel)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="h:Fuel[text()=&quot;natural gas&quot; or text()=&quot;fuel oil&quot; or text()=&quot;fuel oil 1&quot; or text()=&quot;fuel oil 2&quot; or text()=&quot;fuel oil 4&quot; or text()=&quot;fuel oil 5/6&quot; or text()=&quot;diesel&quot; or text()=&quot;propane&quot; or text()=&quot;kerosene&quot; or text()=&quot;coal&quot; or text()=&quot;coke&quot; or text()=&quot;bituminous coal&quot; or text()=&quot;anthracite coal&quot; or text()=&quot;electricity&quot; or text()=&quot;wood&quot; or text()=&quot;wood pellets&quot;] or not(h:Fuel)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected Fuel to be 'natural gas' or 'fuel oil' or 'fuel oil 1' or 'fuel oil 2' or 'fuel oil 4' or 'fuel oil 5/6' or 'diesel' or 'propane' or 'kerosene' or 'coal' or 'coke' or 'bituminous coal' or 'anthracite coal' or 'electricity' or 'wood' or 'wood pellets'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:AnnualHeatingEfficiency[h:Units=&quot;COP&quot;]/h:Value) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:AnnualHeatingEfficiency[h:Units=&quot;COP&quot;]/h:Value) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: AnnualHeatingEfficiency[Units="COP"]/Value</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:FractionVentilationHeatLoadServed) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:FractionVentilationHeatLoadServed) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: FractionVentilationHeatLoadServed</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="number(h:FractionVentilationHeatLoadServed) &gt;= 0 or not(h:FractionVentilationHeatLoadServed)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:FractionVentilationHeatLoadServed) &gt;= 0 or not(h:FractionVentilationHeatLoadServed)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected FractionVentilationHeatLoadServed to be greater than or equal to 0</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="number(h:FractionVentilationHeatLoadServed) &lt;= 1 or not(h:FractionVentilationHeatLoadServed)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:FractionVentilationHeatLoadServed) &lt;= 1 or not(h:FractionVentilationHeatLoadServed)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected FractionVentilationHeatLoadServed to be less than or equal to 1</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M105"/></axsl:template><axsl:template match="text()" priority="-1" mode="M105"/><axsl:template match="@*|node()" priority="-2" mode="M105"><axsl:apply-templates select="*" mode="M105"/></axsl:template>

<!--PATTERN [MechanicalVentilationType=SharedWithPreCooling]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[MechanicalVentilationType=SharedWithPreCooling]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:MechanicalVentilation/h:VentilationFans/h:VentilationFan[h:UsedForWholeBuildingVentilation=&quot;true&quot; and h:IsSharedSystem=&quot;true&quot;]/h:extension/h:PreCooling" priority="1000" mode="M106"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:MechanicalVentilation/h:VentilationFans/h:VentilationFan[h:UsedForWholeBuildingVentilation=&quot;true&quot; and h:IsSharedSystem=&quot;true&quot;]/h:extension/h:PreCooling"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(../../h:FanType[text()=&quot;exhaust only&quot;]) = 0"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(../../h:FanType[text()=&quot;exhaust only&quot;]) = 0"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 element(s) for xpath: ../../FanType[text()="exhaust only"]</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Fuel) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Fuel) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: Fuel</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="h:Fuel[text()=&quot;electricity&quot;] or not(h:Fuel)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="h:Fuel[text()=&quot;electricity&quot;] or not(h:Fuel)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected Fuel to be 'electricity'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:AnnualCoolingEfficiency[h:Units=&quot;COP&quot;]/h:Value) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:AnnualCoolingEfficiency[h:Units=&quot;COP&quot;]/h:Value) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: AnnualCoolingEfficiency[Units="COP"]/Value</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:FractionVentilationCoolLoadServed) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:FractionVentilationCoolLoadServed) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: FractionVentilationCoolLoadServed</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="number(h:FractionVentilationCoolLoadServed) &gt;= 0 or not(h:FractionVentilationCoolLoadServed)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:FractionVentilationCoolLoadServed) &gt;= 0 or not(h:FractionVentilationCoolLoadServed)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected FractionVentilationCoolLoadServed to be greater than or equal to 0</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="number(h:FractionVentilationCoolLoadServed) &lt;= 1 or not(h:FractionVentilationCoolLoadServed)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:FractionVentilationCoolLoadServed) &lt;= 1 or not(h:FractionVentilationCoolLoadServed)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected FractionVentilationCoolLoadServed to be less than or equal to 1</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M106"/></axsl:template><axsl:template match="text()" priority="-1" mode="M106"/><axsl:template match="@*|node()" priority="-2" mode="M106"><axsl:apply-templates select="*" mode="M106"/></axsl:template>

<!--PATTERN [LocalVentilation]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[LocalVentilation]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:MechanicalVentilation/h:VentilationFans/h:VentilationFan[h:UsedForLocalVentilation=&quot;true&quot;]" priority="1000" mode="M107"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:MechanicalVentilation/h:VentilationFans/h:VentilationFan[h:UsedForLocalVentilation=&quot;true&quot;]"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Quantity) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Quantity) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: Quantity</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:RatedFlowRate) + count(h:CalculatedFlowRate) + count(h:TestedFlowRate) + count(h:DeliveredVentilation) &gt;= 0"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:RatedFlowRate) + count(h:CalculatedFlowRate) + count(h:TestedFlowRate) + count(h:DeliveredVentilation) &gt;= 0"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or more element(s) for xpath: RatedFlowRate | CalculatedFlowRate | TestedFlowRate | DeliveredVentilation</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:HoursInOperation) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:HoursInOperation) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: HoursInOperation</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:FanLocation) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:FanLocation) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: FanLocation</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="h:FanLocation[text()=&quot;kitchen&quot; or text()=&quot;bath&quot;] or not(h:FanLocation)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="h:FanLocation[text()=&quot;kitchen&quot; or text()=&quot;bath&quot;] or not(h:FanLocation)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected FanLocation to be 'kitchen' or 'bath'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:FanPower) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:FanPower) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: FanPower</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:extension/h:StartHour) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:extension/h:StartHour) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: extension/StartHour</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="number(h:extension/h:StartHour) &gt;= 0 or not(h:extension/h:StartHour)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:extension/h:StartHour) &gt;= 0 or not(h:extension/h:StartHour)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected extension/StartHour to be greater than or equal to 0</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="number(h:extension/h:StartHour) &lt;= 23 or not(h:extension/h:StartHour)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:extension/h:StartHour) &lt;= 23 or not(h:extension/h:StartHour)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected extension/StartHour to be less than or equal to 23</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M107"/></axsl:template><axsl:template match="text()" priority="-1" mode="M107"/><axsl:template match="@*|node()" priority="-2" mode="M107"><axsl:apply-templates select="*" mode="M107"/></axsl:template>

<!--PATTERN [WholeHouseFan]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[WholeHouseFan]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:MechanicalVentilation/h:VentilationFans/h:VentilationFan[h:UsedForSeasonalCoolingLoadReduction=&quot;true&quot;]" priority="1000" mode="M108"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:MechanicalVentilation/h:VentilationFans/h:VentilationFan[h:UsedForSeasonalCoolingLoadReduction=&quot;true&quot;]"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:RatedFlowRate) + count(h:CalculatedFlowRate) + count(h:TestedFlowRate) + count(h:DeliveredVentilation) &gt;= 0"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:RatedFlowRate) + count(h:CalculatedFlowRate) + count(h:TestedFlowRate) + count(h:DeliveredVentilation) &gt;= 0"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or more element(s) for xpath: RatedFlowRate | CalculatedFlowRate | TestedFlowRate | DeliveredVentilation</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:FanPower) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:FanPower) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: FanPower</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M108"/></axsl:template><axsl:template match="text()" priority="-1" mode="M108"/><axsl:template match="@*|node()" priority="-2" mode="M108"><axsl:apply-templates select="*" mode="M108"/></axsl:template>

<!--PATTERN [GarageVentilation]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[GarageVentilation]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:MechanicalVentilation/h:VentilationFans/h:VentilationFan[h:UsedForGarageVentilation=&quot;true&quot;]" priority="1000" mode="M109"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:MechanicalVentilation/h:VentilationFans/h:VentilationFan[h:UsedForGarageVentilation=&quot;true&quot;]"/>

		<!--REPORT WARN-->
<axsl:if test="true"><svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="true"><axsl:attribute name="role">WARN</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Ventilation fans for the garage are not currently modeled.</svrl:text></svrl:successful-report></axsl:if><axsl:apply-templates select="*" mode="M109"/></axsl:template><axsl:template match="text()" priority="-1" mode="M109"/><axsl:template match="@*|node()" priority="-2" mode="M109"><axsl:apply-templates select="*" mode="M109"/></axsl:template>

<!--PATTERN [WaterHeatingSystem]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[WaterHeatingSystem]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:WaterHeating/h:WaterHeatingSystem" priority="1000" mode="M110"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:WaterHeating/h:WaterHeatingSystem"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(../h:HotWaterDistribution) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(../h:HotWaterDistribution) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: ../HotWaterDistribution</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(../h:WaterFixture) &gt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(../h:WaterFixture) &gt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 or more element(s) for xpath: ../WaterFixture</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:IsSharedSystem) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:IsSharedSystem) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: IsSharedSystem</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:WaterHeaterType) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:WaterHeaterType) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: WaterHeaterType</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="h:WaterHeaterType[text()=&quot;storage water heater&quot; or text()=&quot;instantaneous water heater&quot; or text()=&quot;heat pump water heater&quot; or text()=&quot;space-heating boiler with storage tank&quot; or text()=&quot;space-heating boiler with tankless coil&quot;] or not(h:WaterHeaterType)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="h:WaterHeaterType[text()=&quot;storage water heater&quot; or text()=&quot;instantaneous water heater&quot; or text()=&quot;heat pump water heater&quot; or text()=&quot;space-heating boiler with storage tank&quot; or text()=&quot;space-heating boiler with tankless coil&quot;] or not(h:WaterHeaterType)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected WaterHeaterType to be 'storage water heater' or 'instantaneous water heater' or 'heat pump water heater' or 'space-heating boiler with storage tank' or 'space-heating boiler with tankless coil'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Location) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Location) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: Location</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="h:Location[text()=&quot;living space&quot; or text()=&quot;basement - unconditioned&quot; or text()=&quot;basement - conditioned&quot; or text()=&quot;attic - unvented&quot; or text()=&quot;attic - vented&quot; or text()=&quot;garage&quot; or text()=&quot;crawlspace - unvented&quot; or text()=&quot;crawlspace - vented&quot; or text()=&quot;crawlspace - conditioned&quot; or text()=&quot;other exterior&quot; or text()=&quot;other housing unit&quot; or text()=&quot;other heated space&quot; or text()=&quot;other multifamily buffer space&quot; or text()=&quot;other non-freezing space&quot;] or not(h:Location)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="h:Location[text()=&quot;living space&quot; or text()=&quot;basement - unconditioned&quot; or text()=&quot;basement - conditioned&quot; or text()=&quot;attic - unvented&quot; or text()=&quot;attic - vented&quot; or text()=&quot;garage&quot; or text()=&quot;crawlspace - unvented&quot; or text()=&quot;crawlspace - vented&quot; or text()=&quot;crawlspace - conditioned&quot; or text()=&quot;other exterior&quot; or text()=&quot;other housing unit&quot; or text()=&quot;other heated space&quot; or text()=&quot;other multifamily buffer space&quot; or text()=&quot;other non-freezing space&quot;] or not(h:Location)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected Location to be 'living space' or 'basement - unconditioned' or 'basement - conditioned' or 'attic - unvented' or 'attic - vented' or 'garage' or 'crawlspace - unvented' or 'crawlspace - vented' or 'crawlspace - conditioned' or 'other exterior' or 'other housing unit' or 'other heated space' or 'other multifamily buffer space' or 'other non-freezing space'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:FractionDHWLoadServed) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:FractionDHWLoadServed) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: FractionDHWLoadServed</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:HotWaterTemperature) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:HotWaterTemperature) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: HotWaterTemperature</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:UsesDesuperheater) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:UsesDesuperheater) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: UsesDesuperheater</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--REPORT WARN-->
<axsl:if test="number(h:HotWaterTemperature) &lt; 110"><svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:HotWaterTemperature) &lt; 110"><axsl:attribute name="role">WARN</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Hot water setpoint should typically be greater than or equal to 110 deg-F.</svrl:text></svrl:successful-report></axsl:if><axsl:apply-templates select="*" mode="M110"/></axsl:template><axsl:template match="text()" priority="-1" mode="M110"/><axsl:template match="@*|node()" priority="-2" mode="M110"><axsl:apply-templates select="*" mode="M110"/></axsl:template>

<!--PATTERN [WaterHeatingSystemType=Shared]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[WaterHeatingSystemType=Shared]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:WaterHeating/h:WaterHeatingSystem[h:IsSharedSystem=&quot;true&quot;]" priority="1000" mode="M111"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:WaterHeating/h:WaterHeatingSystem[h:IsSharedSystem=&quot;true&quot;]"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(../../../h:BuildingSummary/h:BuildingConstruction[h:ResidentialFacilityType[text()=&quot;single-family attached&quot; or text()=&quot;apartment unit&quot;]]) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(../../../h:BuildingSummary/h:BuildingConstruction[h:ResidentialFacilityType[text()=&quot;single-family attached&quot; or text()=&quot;apartment unit&quot;]]) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: ../../../BuildingSummary/BuildingConstruction[ResidentialFacilityType[text()="single-family attached" or text()="apartment unit"]]</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:NumberofUnitsServed) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:NumberofUnitsServed) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: NumberofUnitsServed</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="number(h:NumberofUnitsServed) &gt; 1 or not(h:NumberofUnitsServed)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:NumberofUnitsServed) &gt; 1 or not(h:NumberofUnitsServed)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected NumberofUnitsServed to be greater than 1</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M111"/></axsl:template><axsl:template match="text()" priority="-1" mode="M111"/><axsl:template match="@*|node()" priority="-2" mode="M111"><axsl:apply-templates select="*" mode="M111"/></axsl:template>

<!--PATTERN [WaterHeatingSystemType=Tank]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[WaterHeatingSystemType=Tank]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:WaterHeating/h:WaterHeatingSystem[h:WaterHeaterType=&quot;storage water heater&quot;]" priority="1000" mode="M112"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:WaterHeating/h:WaterHeatingSystem[h:WaterHeaterType=&quot;storage water heater&quot;]"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:FuelType) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:FuelType) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: FuelType</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="h:FuelType[text()=&quot;natural gas&quot; or text()=&quot;fuel oil&quot; or text()=&quot;fuel oil 1&quot; or text()=&quot;fuel oil 2&quot; or text()=&quot;fuel oil 4&quot; or text()=&quot;fuel oil 5/6&quot; or text()=&quot;diesel&quot; or text()=&quot;propane&quot; or text()=&quot;kerosene&quot; or text()=&quot;coal&quot; or text()=&quot;coke&quot; or text()=&quot;bituminous coal&quot; or text()=&quot;anthracite coal&quot; or text()=&quot;electricity&quot; or text()=&quot;wood&quot; or text()=&quot;wood pellets&quot;] or not(h:FuelType)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="h:FuelType[text()=&quot;natural gas&quot; or text()=&quot;fuel oil&quot; or text()=&quot;fuel oil 1&quot; or text()=&quot;fuel oil 2&quot; or text()=&quot;fuel oil 4&quot; or text()=&quot;fuel oil 5/6&quot; or text()=&quot;diesel&quot; or text()=&quot;propane&quot; or text()=&quot;kerosene&quot; or text()=&quot;coal&quot; or text()=&quot;coke&quot; or text()=&quot;bituminous coal&quot; or text()=&quot;anthracite coal&quot; or text()=&quot;electricity&quot; or text()=&quot;wood&quot; or text()=&quot;wood pellets&quot;] or not(h:FuelType)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected FuelType to be 'natural gas' or 'fuel oil' or 'fuel oil 1' or 'fuel oil 2' or 'fuel oil 4' or 'fuel oil 5/6' or 'diesel' or 'propane' or 'kerosene' or 'coal' or 'coke' or 'bituminous coal' or 'anthracite coal' or 'electricity' or 'wood' or 'wood pellets'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:TankVolume) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:TankVolume) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: TankVolume</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:HeatingCapacity) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:HeatingCapacity) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: HeatingCapacity</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:UniformEnergyFactor) + count(h:EnergyFactor) + count(h:YearInstalled) &gt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:UniformEnergyFactor) + count(h:EnergyFactor) + count(h:YearInstalled) &gt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 or more element(s) for xpath: UniformEnergyFactor | EnergyFactor | YearInstalled</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:UniformEnergyFactor) + count(h:EnergyFactor) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:UniformEnergyFactor) + count(h:EnergyFactor) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: UniformEnergyFactor | EnergyFactor</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="number(h:UniformEnergyFactor) &lt; 1 or not(h:UniformEnergyFactor)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:UniformEnergyFactor) &lt; 1 or not(h:UniformEnergyFactor)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected UniformEnergyFactor to be less than 1</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="number(h:EnergyFactor) &lt; 1 or not(h:EnergyFactor)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:EnergyFactor) &lt; 1 or not(h:EnergyFactor)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected EnergyFactor to be less than 1</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:UsageBin) + count(h:FirstHourRating) &gt;= 0"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:UsageBin) + count(h:FirstHourRating) &gt;= 0"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or more element(s) for xpath: UsageBin | FirstHourRating</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:RecoveryEfficiency) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:RecoveryEfficiency) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: RecoveryEfficiency</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="number(h:RecoveryEfficiency) &gt; number(h:EnergyFactor) or not(h:RecoveryEfficiency) or not (h:EnergyFactor)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:RecoveryEfficiency) &gt; number(h:EnergyFactor) or not(h:RecoveryEfficiency) or not (h:EnergyFactor)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected RecoveryEfficiency to be greater than EnergyFactor</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="number(h:RecoveryEfficiency) &gt; number(h:UniformEnergyFactor) or not(h:RecoveryEfficiency) or not (h:UniformEnergyFactor)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:RecoveryEfficiency) &gt; number(h:UniformEnergyFactor) or not(h:RecoveryEfficiency) or not (h:UniformEnergyFactor)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected RecoveryEfficiency to be greater than UniformEnergyFactor</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:WaterHeaterInsulation/h:Jacket/h:JacketRValue) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:WaterHeaterInsulation/h:Jacket/h:JacketRValue) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: WaterHeaterInsulation/Jacket/JacketRValue</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--REPORT WARN-->
<axsl:if test="number(h:UniformEnergyFactor) &lt; 0.45"><svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:UniformEnergyFactor) &lt; 0.45"><axsl:attribute name="role">WARN</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>UniformEnergyFactor should typically be greater than or equal to 0.45.</svrl:text></svrl:successful-report></axsl:if>

		<!--REPORT WARN-->
<axsl:if test="number(h:EnergyFactor) &lt; 0.45"><svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:EnergyFactor) &lt; 0.45"><axsl:attribute name="role">WARN</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>EnergyFactor should typically be greater than or equal to 0.45.</svrl:text></svrl:successful-report></axsl:if>

		<!--REPORT WARN-->
<axsl:if test="number(h:HeatingCapacity) &lt;= 1000 and number(h:HeatingCapacity) &gt; 0"><svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:HeatingCapacity) &lt;= 1000 and number(h:HeatingCapacity) &gt; 0"><axsl:attribute name="role">WARN</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Heating capacity should typically be greater than or equal to 1000 Btu/hr.</svrl:text></svrl:successful-report></axsl:if><axsl:apply-templates select="*" mode="M112"/></axsl:template><axsl:template match="text()" priority="-1" mode="M112"/><axsl:template match="@*|node()" priority="-2" mode="M112"><axsl:apply-templates select="*" mode="M112"/></axsl:template>

<!--PATTERN [WaterHeatingSystemType=Tankless]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[WaterHeatingSystemType=Tankless]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:WaterHeating/h:WaterHeatingSystem[h:WaterHeaterType=&quot;instantaneous water heater&quot;]" priority="1000" mode="M113"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:WaterHeating/h:WaterHeatingSystem[h:WaterHeaterType=&quot;instantaneous water heater&quot;]"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:FuelType) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:FuelType) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: FuelType</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="h:FuelType[text()=&quot;natural gas&quot; or text()=&quot;fuel oil&quot; or text()=&quot;fuel oil 1&quot; or text()=&quot;fuel oil 2&quot; or text()=&quot;fuel oil 4&quot; or text()=&quot;fuel oil 5/6&quot; or text()=&quot;diesel&quot; or text()=&quot;propane&quot; or text()=&quot;kerosene&quot; or text()=&quot;coal&quot; or text()=&quot;coke&quot; or text()=&quot;bituminous coal&quot; or text()=&quot;anthracite coal&quot; or text()=&quot;electricity&quot; or text()=&quot;wood&quot; or text()=&quot;wood pellets&quot;] or not(h:FuelType)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="h:FuelType[text()=&quot;natural gas&quot; or text()=&quot;fuel oil&quot; or text()=&quot;fuel oil 1&quot; or text()=&quot;fuel oil 2&quot; or text()=&quot;fuel oil 4&quot; or text()=&quot;fuel oil 5/6&quot; or text()=&quot;diesel&quot; or text()=&quot;propane&quot; or text()=&quot;kerosene&quot; or text()=&quot;coal&quot; or text()=&quot;coke&quot; or text()=&quot;bituminous coal&quot; or text()=&quot;anthracite coal&quot; or text()=&quot;electricity&quot; or text()=&quot;wood&quot; or text()=&quot;wood pellets&quot;] or not(h:FuelType)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected FuelType to be 'natural gas' or 'fuel oil' or 'fuel oil 1' or 'fuel oil 2' or 'fuel oil 4' or 'fuel oil 5/6' or 'diesel' or 'propane' or 'kerosene' or 'coal' or 'coke' or 'bituminous coal' or 'anthracite coal' or 'electricity' or 'wood' or 'wood pellets'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:PerformanceAdjustment) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:PerformanceAdjustment) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: PerformanceAdjustment</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:UniformEnergyFactor) + count(h:EnergyFactor) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:UniformEnergyFactor) + count(h:EnergyFactor) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: UniformEnergyFactor | EnergyFactor</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="number(h:UniformEnergyFactor) &lt; 1 or not(h:UniformEnergyFactor)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:UniformEnergyFactor) &lt; 1 or not(h:UniformEnergyFactor)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected UniformEnergyFactor to be less than 1</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="number(h:EnergyFactor) &lt; 1 or not(h:EnergyFactor)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:EnergyFactor) &lt; 1 or not(h:EnergyFactor)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected EnergyFactor to be less than 1</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--REPORT WARN-->
<axsl:if test="number(h:UniformEnergyFactor) &lt; 0.45"><svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:UniformEnergyFactor) &lt; 0.45"><axsl:attribute name="role">WARN</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>UniformEnergyFactor should typically be greater than or equal to 0.45.</svrl:text></svrl:successful-report></axsl:if>

		<!--REPORT WARN-->
<axsl:if test="number(h:EnergyFactor) &lt; 0.45"><svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:EnergyFactor) &lt; 0.45"><axsl:attribute name="role">WARN</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>EnergyFactor should typically be greater than or equal to 0.45.</svrl:text></svrl:successful-report></axsl:if><axsl:apply-templates select="*" mode="M113"/></axsl:template><axsl:template match="text()" priority="-1" mode="M113"/><axsl:template match="@*|node()" priority="-2" mode="M113"><axsl:apply-templates select="*" mode="M113"/></axsl:template>

<!--PATTERN [WaterHeatingSystemType=HeatPump]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[WaterHeatingSystemType=HeatPump]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:WaterHeating/h:WaterHeatingSystem[h:WaterHeaterType=&quot;heat pump water heater&quot;]" priority="1000" mode="M114"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:WaterHeating/h:WaterHeatingSystem[h:WaterHeaterType=&quot;heat pump water heater&quot;]"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:FuelType[text()=&quot;electricity&quot;]) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:FuelType[text()=&quot;electricity&quot;]) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: FuelType[text()="electricity"]</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:TankVolume) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:TankVolume) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: TankVolume</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:UniformEnergyFactor) + count(h:EnergyFactor) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:UniformEnergyFactor) + count(h:EnergyFactor) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: UniformEnergyFactor | EnergyFactor</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:UsageBin) + count(h:FirstHourRating) &gt;= 0"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:UsageBin) + count(h:FirstHourRating) &gt;= 0"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or more element(s) for xpath: UsageBin | FirstHourRating</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="number(h:UniformEnergyFactor) &gt; 1 or not(h:UniformEnergyFactor)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:UniformEnergyFactor) &gt; 1 or not(h:UniformEnergyFactor)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected UniformEnergyFactor to be greater than 1</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="number(h:EnergyFactor) &gt; 1 or not(h:EnergyFactor)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:EnergyFactor) &gt; 1 or not(h:EnergyFactor)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected EnergyFactor to be greater than 1</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:WaterHeaterInsulation/h:Jacket/h:JacketRValue) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:WaterHeaterInsulation/h:Jacket/h:JacketRValue) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: WaterHeaterInsulation/Jacket/JacketRValue</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M114"/></axsl:template><axsl:template match="text()" priority="-1" mode="M114"/><axsl:template match="@*|node()" priority="-2" mode="M114"><axsl:apply-templates select="*" mode="M114"/></axsl:template>

<!--PATTERN [WaterHeatingSystemType=CombiIndirect]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[WaterHeatingSystemType=CombiIndirect]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:WaterHeating/h:WaterHeatingSystem[h:WaterHeaterType=&quot;space-heating boiler with storage tank&quot;]" priority="1000" mode="M115"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:WaterHeating/h:WaterHeatingSystem[h:WaterHeaterType=&quot;space-heating boiler with storage tank&quot;]"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:RelatedHVACSystem) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:RelatedHVACSystem) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: RelatedHVACSystem</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:TankVolume) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:TankVolume) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: TankVolume</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:WaterHeaterInsulation/h:Jacket/h:JacketRValue) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:WaterHeaterInsulation/h:Jacket/h:JacketRValue) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: WaterHeaterInsulation/Jacket/JacketRValue</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:StandbyLoss) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:StandbyLoss) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: StandbyLoss</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M115"/></axsl:template><axsl:template match="text()" priority="-1" mode="M115"/><axsl:template match="@*|node()" priority="-2" mode="M115"><axsl:apply-templates select="*" mode="M115"/></axsl:template>

<!--PATTERN [WaterHeatingSystemType=CombiTanklessCoil]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[WaterHeatingSystemType=CombiTanklessCoil]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:WaterHeating/h:WaterHeatingSystem[h:WaterHeaterType=&quot;space-heating boiler with tankless coil&quot;]" priority="1000" mode="M116"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:WaterHeating/h:WaterHeatingSystem[h:WaterHeaterType=&quot;space-heating boiler with tankless coil&quot;]"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:RelatedHVACSystem) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:RelatedHVACSystem) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: RelatedHVACSystem</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M116"/></axsl:template><axsl:template match="text()" priority="-1" mode="M116"/><axsl:template match="@*|node()" priority="-2" mode="M116"><axsl:apply-templates select="*" mode="M116"/></axsl:template>

<!--PATTERN [Desuperheater]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[Desuperheater]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:WaterHeating/h:WaterHeatingSystem[h:UsesDesuperheater=&quot;true&quot;]" priority="1000" mode="M117"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:WaterHeating/h:WaterHeatingSystem[h:UsesDesuperheater=&quot;true&quot;]"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:RelatedHVACSystem) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:RelatedHVACSystem) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: RelatedHVACSystem</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M117"/></axsl:template><axsl:template match="text()" priority="-1" mode="M117"/><axsl:template match="@*|node()" priority="-2" mode="M117"><axsl:apply-templates select="*" mode="M117"/></axsl:template>

<!--PATTERN [HotWaterDistribution]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[HotWaterDistribution]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:WaterHeating/h:HotWaterDistribution" priority="1000" mode="M118"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:WaterHeating/h:HotWaterDistribution"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:SystemType/h:Standard) + count(h:SystemType/h:Recirculation) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:SystemType/h:Standard) + count(h:SystemType/h:Recirculation) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: SystemType/Standard | SystemType/Recirculation</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:PipeInsulation/h:PipeRValue) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:PipeInsulation/h:PipeRValue) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: PipeInsulation/PipeRValue</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:DrainWaterHeatRecovery) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:DrainWaterHeatRecovery) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: DrainWaterHeatRecovery</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:extension/h:SharedRecirculation) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:extension/h:SharedRecirculation) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: extension/SharedRecirculation</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M118"/></axsl:template><axsl:template match="text()" priority="-1" mode="M118"/><axsl:template match="@*|node()" priority="-2" mode="M118"><axsl:apply-templates select="*" mode="M118"/></axsl:template>

<!--PATTERN [HotWaterDistributionType=Standard]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[HotWaterDistributionType=Standard]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:WaterHeating/h:HotWaterDistribution/h:SystemType/h:Standard" priority="1000" mode="M119"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:WaterHeating/h:HotWaterDistribution/h:SystemType/h:Standard"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:PipingLength) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:PipingLength) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: PipingLength</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M119"/></axsl:template><axsl:template match="text()" priority="-1" mode="M119"/><axsl:template match="@*|node()" priority="-2" mode="M119"><axsl:apply-templates select="*" mode="M119"/></axsl:template>

<!--PATTERN [HotWaterDistributionType=Recirculation]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[HotWaterDistributionType=Recirculation]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:WaterHeating/h:HotWaterDistribution/h:SystemType/h:Recirculation" priority="1000" mode="M120"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:WaterHeating/h:HotWaterDistribution/h:SystemType/h:Recirculation"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:ControlType) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:ControlType) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: ControlType</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="h:ControlType[text()=&quot;manual demand control&quot; or text()=&quot;presence sensor demand control&quot; or text()=&quot;temperature&quot; or text()=&quot;timer&quot; or text()=&quot;no control&quot;] or not(h:ControlType)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="h:ControlType[text()=&quot;manual demand control&quot; or text()=&quot;presence sensor demand control&quot; or text()=&quot;temperature&quot; or text()=&quot;timer&quot; or text()=&quot;no control&quot;] or not(h:ControlType)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected ControlType to be 'manual demand control' or 'presence sensor demand control' or 'temperature' or 'timer' or 'no control'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:RecirculationPipingLoopLength) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:RecirculationPipingLoopLength) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: RecirculationPipingLoopLength</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:BranchPipingLoopLength) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:BranchPipingLoopLength) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: BranchPipingLoopLength</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:PumpPower) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:PumpPower) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: PumpPower</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M120"/></axsl:template><axsl:template match="text()" priority="-1" mode="M120"/><axsl:template match="@*|node()" priority="-2" mode="M120"><axsl:apply-templates select="*" mode="M120"/></axsl:template>

<!--PATTERN [HotWaterDistributionType=SharedRecirculation]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[HotWaterDistributionType=SharedRecirculation]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:WaterHeating/h:HotWaterDistribution/h:extension/h:SharedRecirculation" priority="1000" mode="M121"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:WaterHeating/h:HotWaterDistribution/h:extension/h:SharedRecirculation"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(../../../../../h:BuildingSummary/h:BuildingConstruction[h:ResidentialFacilityType[text()=&quot;single-family attached&quot; or text()=&quot;apartment unit&quot;]]) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(../../../../../h:BuildingSummary/h:BuildingConstruction[h:ResidentialFacilityType[text()=&quot;single-family attached&quot; or text()=&quot;apartment unit&quot;]]) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: ../../../../../BuildingSummary/BuildingConstruction[ResidentialFacilityType[text()="single-family attached" or text()="apartment unit"]]</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(../../h:SystemType/h:Standard) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(../../h:SystemType/h:Standard) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: ../../SystemType/Standard</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:NumberofUnitsServed) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:NumberofUnitsServed) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: NumberofUnitsServed</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="number(h:NumberofUnitsServed) &gt; 1 or not(h:NumberofUnitsServed)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:NumberofUnitsServed) &gt; 1 or not(h:NumberofUnitsServed)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected NumberofUnitsServed to be greater than 1</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:PumpPower) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:PumpPower) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: PumpPower</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:ControlType) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:ControlType) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: ControlType</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="h:ControlType[text()=&quot;manual demand control&quot; or text()=&quot;presence sensor demand control&quot; or text()=&quot;temperature&quot; or text()=&quot;timer&quot; or text()=&quot;no control&quot;] or not(h:ControlType)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="h:ControlType[text()=&quot;manual demand control&quot; or text()=&quot;presence sensor demand control&quot; or text()=&quot;temperature&quot; or text()=&quot;timer&quot; or text()=&quot;no control&quot;] or not(h:ControlType)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected ControlType to be 'manual demand control' or 'presence sensor demand control' or 'temperature' or 'timer' or 'no control'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M121"/></axsl:template><axsl:template match="text()" priority="-1" mode="M121"/><axsl:template match="@*|node()" priority="-2" mode="M121"><axsl:apply-templates select="*" mode="M121"/></axsl:template>

<!--PATTERN [DrainWaterHeatRecovery]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[DrainWaterHeatRecovery]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:WaterHeating/h:HotWaterDistribution/h:DrainWaterHeatRecovery" priority="1000" mode="M122"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:WaterHeating/h:HotWaterDistribution/h:DrainWaterHeatRecovery"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:FacilitiesConnected) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:FacilitiesConnected) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: FacilitiesConnected</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:EqualFlow) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:EqualFlow) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: EqualFlow</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Efficiency) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Efficiency) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: Efficiency</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M122"/></axsl:template><axsl:template match="text()" priority="-1" mode="M122"/><axsl:template match="@*|node()" priority="-2" mode="M122"><axsl:apply-templates select="*" mode="M122"/></axsl:template>

<!--PATTERN [WaterFixture]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[WaterFixture]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:WaterHeating/h:WaterFixture" priority="1000" mode="M123"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:WaterHeating/h:WaterFixture"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(../h:HotWaterDistribution) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(../h:HotWaterDistribution) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: ../HotWaterDistribution</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:WaterFixtureType) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:WaterFixtureType) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: WaterFixtureType</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="h:WaterFixtureType[text()=&quot;shower head&quot; or text()=&quot;faucet&quot;] or not(h:WaterFixtureType)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="h:WaterFixtureType[text()=&quot;shower head&quot; or text()=&quot;faucet&quot;] or not(h:WaterFixtureType)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected WaterFixtureType to be 'shower head' or 'faucet'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:LowFlow) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:LowFlow) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: LowFlow</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(../h:extension/h:WaterFixturesUsageMultiplier) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(../h:extension/h:WaterFixturesUsageMultiplier) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: ../extension/WaterFixturesUsageMultiplier</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(../h:extension/h:WaterFixturesWeekdayScheduleFractions) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(../h:extension/h:WaterFixturesWeekdayScheduleFractions) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: ../extension/WaterFixturesWeekdayScheduleFractions</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(../h:extension/h:WaterFixturesWeekendScheduleFractions) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(../h:extension/h:WaterFixturesWeekendScheduleFractions) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: ../extension/WaterFixturesWeekendScheduleFractions</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(../h:extension/h:WaterFixturesMonthlyScheduleMultipliers) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(../h:extension/h:WaterFixturesMonthlyScheduleMultipliers) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: ../extension/WaterFixturesMonthlyScheduleMultipliers</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M123"/></axsl:template><axsl:template match="text()" priority="-1" mode="M123"/><axsl:template match="@*|node()" priority="-2" mode="M123"><axsl:apply-templates select="*" mode="M123"/></axsl:template>

<!--PATTERN [SolarThermalSystem]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[SolarThermalSystem]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:SolarThermal/h:SolarThermalSystem" priority="1000" mode="M124"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:SolarThermal/h:SolarThermalSystem"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:SystemType) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:SystemType) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: SystemType</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="h:SystemType[text()=&quot;hot water&quot;] or not(h:SystemType)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="h:SystemType[text()=&quot;hot water&quot;] or not(h:SystemType)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected SystemType to be 'hot water'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:CollectorArea) + count(h:SolarFraction) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:CollectorArea) + count(h:SolarFraction) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: CollectorArea | SolarFraction</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="number(h:SolarFraction) &lt; 1 or not(h:SolarFraction)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:SolarFraction) &lt; 1 or not(h:SolarFraction)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected SolarFraction to be less than 1</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M124"/></axsl:template><axsl:template match="text()" priority="-1" mode="M124"/><axsl:template match="@*|node()" priority="-2" mode="M124"><axsl:apply-templates select="*" mode="M124"/></axsl:template>

<!--PATTERN [SolarThermalSystemType=Detailed]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[SolarThermalSystemType=Detailed]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:SolarThermal/h:SolarThermalSystem[h:CollectorArea]" priority="1000" mode="M125"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:SolarThermal/h:SolarThermalSystem[h:CollectorArea]"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:CollectorLoopType) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:CollectorLoopType) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: CollectorLoopType</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="h:CollectorLoopType[text()=&quot;liquid indirect&quot; or text()=&quot;liquid direct&quot; or text()=&quot;passive thermosyphon&quot;] or not(h:CollectorLoopType)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="h:CollectorLoopType[text()=&quot;liquid indirect&quot; or text()=&quot;liquid direct&quot; or text()=&quot;passive thermosyphon&quot;] or not(h:CollectorLoopType)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected CollectorLoopType to be 'liquid indirect' or 'liquid direct' or 'passive thermosyphon'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:CollectorType) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:CollectorType) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: CollectorType</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="h:CollectorType[text()=&quot;single glazing black&quot; or text()=&quot;double glazing black&quot; or text()=&quot;evacuated tube&quot; or text()=&quot;integrated collector storage&quot;] or not(h:CollectorType)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="h:CollectorType[text()=&quot;single glazing black&quot; or text()=&quot;double glazing black&quot; or text()=&quot;evacuated tube&quot; or text()=&quot;integrated collector storage&quot;] or not(h:CollectorType)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected CollectorType to be 'single glazing black' or 'double glazing black' or 'evacuated tube' or 'integrated collector storage'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:CollectorAzimuth) + count(h:CollectorOrientation) &gt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:CollectorAzimuth) + count(h:CollectorOrientation) &gt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 or more element(s) for xpath: CollectorAzimuth | CollectorOrientation</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:CollectorTilt) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:CollectorTilt) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: CollectorTilt</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:CollectorRatedOpticalEfficiency) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:CollectorRatedOpticalEfficiency) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: CollectorRatedOpticalEfficiency</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:CollectorRatedThermalLosses) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:CollectorRatedThermalLosses) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: CollectorRatedThermalLosses</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:StorageVolume) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:StorageVolume) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: StorageVolume</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:ConnectedTo) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:ConnectedTo) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: ConnectedTo</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M125"/></axsl:template><axsl:template match="text()" priority="-1" mode="M125"/><axsl:template match="@*|node()" priority="-2" mode="M125"><axsl:apply-templates select="*" mode="M125"/></axsl:template>

<!--PATTERN [SolarThermalSystemType=Simple]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[SolarThermalSystemType=Simple]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:SolarThermal/h:SolarThermalSystem[h:SolarFraction]" priority="1000" mode="M126"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:SolarThermal/h:SolarThermalSystem[h:SolarFraction]"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:ConnectedTo) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:ConnectedTo) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: ConnectedTo</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M126"/></axsl:template><axsl:template match="text()" priority="-1" mode="M126"/><axsl:template match="@*|node()" priority="-2" mode="M126"><axsl:apply-templates select="*" mode="M126"/></axsl:template>

<!--PATTERN [PVSystem]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[PVSystem]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:Photovoltaics/h:PVSystem" priority="1000" mode="M127"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:Photovoltaics/h:PVSystem"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:IsSharedSystem) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:IsSharedSystem) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: IsSharedSystem</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Location) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Location) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: Location</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="h:Location[text()=&quot;ground&quot; or text()=&quot;roof&quot;] or not(h:Location)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="h:Location[text()=&quot;ground&quot; or text()=&quot;roof&quot;] or not(h:Location)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected Location to be 'ground' or 'roof'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:ModuleType) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:ModuleType) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: ModuleType</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="h:ModuleType[text()=&quot;standard&quot; or text()=&quot;premium&quot; or text()=&quot;thin film&quot;] or not(h:ModuleType)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="h:ModuleType[text()=&quot;standard&quot; or text()=&quot;premium&quot; or text()=&quot;thin film&quot;] or not(h:ModuleType)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected ModuleType to be 'standard' or 'premium' or 'thin film'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Tracking) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Tracking) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: Tracking</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="h:Tracking[text()=&quot;fixed&quot; or text()=&quot;1-axis&quot; or text()=&quot;1-axis backtracked&quot; or text()=&quot;2-axis&quot;] or not(h:Tracking)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="h:Tracking[text()=&quot;fixed&quot; or text()=&quot;1-axis&quot; or text()=&quot;1-axis backtracked&quot; or text()=&quot;2-axis&quot;] or not(h:Tracking)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected Tracking to be 'fixed' or '1-axis' or '1-axis backtracked' or '2-axis'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:ArrayAzimuth) + count(h:ArrayOrientation) &gt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:ArrayAzimuth) + count(h:ArrayOrientation) &gt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 or more element(s) for xpath: ArrayAzimuth | ArrayOrientation</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:ArrayTilt) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:ArrayTilt) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: ArrayTilt</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:MaxPowerOutput) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:MaxPowerOutput) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: MaxPowerOutput</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:InverterEfficiency) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:InverterEfficiency) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: InverterEfficiency</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:SystemLossesFraction) + count(h:YearModulesManufactured) &gt;= 0"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:SystemLossesFraction) + count(h:YearModulesManufactured) &gt;= 0"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or more element(s) for xpath: SystemLossesFraction | YearModulesManufactured</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--REPORT WARN-->
<axsl:if test="number(h:MaxPowerOutput) &lt;= 500 and number(h:MaxPowerOutput) &gt; 0"><svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:MaxPowerOutput) &lt;= 500 and number(h:MaxPowerOutput) &gt; 0"><axsl:attribute name="role">WARN</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Max power output should typically be greater than or equal to 500 W.</svrl:text></svrl:successful-report></axsl:if><axsl:apply-templates select="*" mode="M127"/></axsl:template><axsl:template match="text()" priority="-1" mode="M127"/><axsl:template match="@*|node()" priority="-2" mode="M127"><axsl:apply-templates select="*" mode="M127"/></axsl:template>

<!--PATTERN [PVSystemType=Shared]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[PVSystemType=Shared]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:Photovoltaics/h:PVSystem[h:IsSharedSystem=&quot;true&quot;]" priority="1000" mode="M128"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:Photovoltaics/h:PVSystem[h:IsSharedSystem=&quot;true&quot;]"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(../../../h:BuildingSummary/h:BuildingConstruction[h:ResidentialFacilityType[text()=&quot;single-family attached&quot; or text()=&quot;apartment unit&quot;]]) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(../../../h:BuildingSummary/h:BuildingConstruction[h:ResidentialFacilityType[text()=&quot;single-family attached&quot; or text()=&quot;apartment unit&quot;]]) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: ../../../BuildingSummary/BuildingConstruction[ResidentialFacilityType[text()="single-family attached" or text()="apartment unit"]]</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:extension/h:NumberofBedroomsServed) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:extension/h:NumberofBedroomsServed) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: extension/NumberofBedroomsServed</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="number(h:extension/h:NumberofBedroomsServed) &gt; number(../../../h:BuildingSummary/h:BuildingConstruction/h:NumberofBedrooms) or not(h:extension/h:NumberofBedroomsServed) or not(../../../h:BuildingSummary/h:BuildingConstruction/h:NumberofBedrooms)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:extension/h:NumberofBedroomsServed) &gt; number(../../../h:BuildingSummary/h:BuildingConstruction/h:NumberofBedrooms) or not(h:extension/h:NumberofBedroomsServed) or not(../../../h:BuildingSummary/h:BuildingConstruction/h:NumberofBedrooms)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected extension/NumberofBedroomsServed to be greater than ../../../BuildingSummary/BuildingConstruction/NumberofBedrooms</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M128"/></axsl:template><axsl:template match="text()" priority="-1" mode="M128"/><axsl:template match="@*|node()" priority="-2" mode="M128"><axsl:apply-templates select="*" mode="M128"/></axsl:template>

<!--PATTERN [Battery]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[Battery]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:Batteries/h:Battery" priority="1000" mode="M129"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:Batteries/h:Battery"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:BatteryType[text()=&quot;Li-ion&quot;]) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:BatteryType[text()=&quot;Li-ion&quot;]) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: BatteryType[text()="Li-ion"]</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Location) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Location) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: Location</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="h:Location[text()=&quot;living space&quot; or text()=&quot;basement - conditioned&quot; or text()=&quot;basement - unconditioned&quot; or text()=&quot;crawlspace - vented&quot; or text()=&quot;crawlspace - unvented&quot; or text()=&quot;crawlspace - conditioned&quot; or text()=&quot;attic - vented&quot; or text()=&quot;attic - unvented&quot; or text()=&quot;garage&quot; or text()=&quot;outside&quot;] or not(h:Location)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="h:Location[text()=&quot;living space&quot; or text()=&quot;basement - conditioned&quot; or text()=&quot;basement - unconditioned&quot; or text()=&quot;crawlspace - vented&quot; or text()=&quot;crawlspace - unvented&quot; or text()=&quot;crawlspace - conditioned&quot; or text()=&quot;attic - vented&quot; or text()=&quot;attic - unvented&quot; or text()=&quot;garage&quot; or text()=&quot;outside&quot;] or not(h:Location)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected Location to be 'living space' or 'basement - conditioned' or 'basement - unconditioned' or 'crawlspace - vented' or 'crawlspace - unvented' or 'crawlspace - conditioned' or 'attic - vented' or 'attic - unvented' or 'garage' or 'outside'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:NominalCapacity[h:Units=&quot;kWh&quot; or h:Units=&quot;Ah&quot;]/h:Value) &gt;= 0"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:NominalCapacity[h:Units=&quot;kWh&quot; or h:Units=&quot;Ah&quot;]/h:Value) &gt;= 0"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or more element(s) for xpath: NominalCapacity[Units="kWh" or Units="Ah"]/Value</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:UsableCapacity[h:Units=&quot;kWh&quot; or h:Units=&quot;Ah&quot;]/h:Value) &gt;= 0"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:UsableCapacity[h:Units=&quot;kWh&quot; or h:Units=&quot;Ah&quot;]/h:Value) &gt;= 0"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or more element(s) for xpath: UsableCapacity[Units="kWh" or Units="Ah"]/Value</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="number(h:UsableCapacity[h:Units=&quot;kWh&quot;]/h:Value) &lt; number(h:NominalCapacity[h:Units=&quot;kWh&quot;]/h:Value) or not(h:UsableCapacity[h:Units=&quot;kWh&quot;]/h:Value) or not(h:NominalCapacity[h:Units=&quot;kWh&quot;]/h:Value)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:UsableCapacity[h:Units=&quot;kWh&quot;]/h:Value) &lt; number(h:NominalCapacity[h:Units=&quot;kWh&quot;]/h:Value) or not(h:UsableCapacity[h:Units=&quot;kWh&quot;]/h:Value) or not(h:NominalCapacity[h:Units=&quot;kWh&quot;]/h:Value)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected UsableCapacity to be less than NominalCapacity</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="number(h:UsableCapacity[h:Units=&quot;Ah&quot;]/h:Value) &lt; number(h:NominalCapacity[h:Units=&quot;Ah&quot;]/h:Value) or not(h:UsableCapacity[h:Units=&quot;Ah&quot;]/h:Value) or not(h:NominalCapacity[h:Units=&quot;Ah&quot;]/h:Value)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:UsableCapacity[h:Units=&quot;Ah&quot;]/h:Value) &lt; number(h:NominalCapacity[h:Units=&quot;Ah&quot;]/h:Value) or not(h:UsableCapacity[h:Units=&quot;Ah&quot;]/h:Value) or not(h:NominalCapacity[h:Units=&quot;Ah&quot;]/h:Value)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected UsableCapacity to be less than NominalCapacity</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:RatedPowerOutput) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:RatedPowerOutput) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: RatedPowerOutput</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:NominalVoltage) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:NominalVoltage) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: NominalVoltage</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:extension/h:LifetimeModel) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:extension/h:LifetimeModel) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: extension/LifetimeModel</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="h:extension/h:LifetimeModel[text()=&quot;None&quot; or text()=&quot;KandlerSmith&quot;] or not(h:extension/h:LifetimeModel)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="h:extension/h:LifetimeModel[text()=&quot;None&quot; or text()=&quot;KandlerSmith&quot;] or not(h:extension/h:LifetimeModel)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected extension/LifetimeModel to be 'None' or 'KandlerSmith'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--REPORT WARN-->
<axsl:if test="number(h:RatedPowerOutput) &lt;= 1000 and number(h:RatedPowerOutput) &gt; 0"><svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:RatedPowerOutput) &lt;= 1000 and number(h:RatedPowerOutput) &gt; 0"><axsl:attribute name="role">WARN</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Rated power output should typically be greater than or equal to 1000 W.</svrl:text></svrl:successful-report></axsl:if><axsl:apply-templates select="*" mode="M129"/></axsl:template><axsl:template match="text()" priority="-1" mode="M129"/><axsl:template match="@*|node()" priority="-2" mode="M129"><axsl:apply-templates select="*" mode="M129"/></axsl:template>

<!--PATTERN [Generator]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[Generator]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:extension/h:Generators/h:Generator" priority="1000" mode="M130"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:extension/h:Generators/h:Generator"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:IsSharedSystem) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:IsSharedSystem) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: IsSharedSystem</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:FuelType) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:FuelType) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: FuelType</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="h:FuelType[text()=&quot;natural gas&quot; or text()=&quot;fuel oil&quot; or text()=&quot;fuel oil 1&quot; or text()=&quot;fuel oil 2&quot; or text()=&quot;fuel oil 4&quot; or text()=&quot;fuel oil 5/6&quot; or text()=&quot;diesel&quot; or text()=&quot;propane&quot; or text()=&quot;kerosene&quot; or text()=&quot;coal&quot; or text()=&quot;coke&quot; or text()=&quot;bituminous coal&quot; or text()=&quot;anthracite coal&quot; or text()=&quot;wood&quot; or text()=&quot;wood pellets&quot;] or not(h:FuelType)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="h:FuelType[text()=&quot;natural gas&quot; or text()=&quot;fuel oil&quot; or text()=&quot;fuel oil 1&quot; or text()=&quot;fuel oil 2&quot; or text()=&quot;fuel oil 4&quot; or text()=&quot;fuel oil 5/6&quot; or text()=&quot;diesel&quot; or text()=&quot;propane&quot; or text()=&quot;kerosene&quot; or text()=&quot;coal&quot; or text()=&quot;coke&quot; or text()=&quot;bituminous coal&quot; or text()=&quot;anthracite coal&quot; or text()=&quot;wood&quot; or text()=&quot;wood pellets&quot;] or not(h:FuelType)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected FuelType to be 'natural gas' or 'fuel oil' or 'fuel oil 1' or 'fuel oil 2' or 'fuel oil 4' or 'fuel oil 5/6' or 'diesel' or 'propane' or 'kerosene' or 'coal' or 'coke' or 'bituminous coal' or 'anthracite coal' or 'wood' or 'wood pellets'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:AnnualConsumptionkBtu) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:AnnualConsumptionkBtu) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: AnnualConsumptionkBtu</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="number(h:AnnualConsumptionkBtu) &gt; 0 or not(h:AnnualConsumptionkBtu)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:AnnualConsumptionkBtu) &gt; 0 or not(h:AnnualConsumptionkBtu)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected AnnualConsumptionkBtu to be greater than 0</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:AnnualOutputkWh) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:AnnualOutputkWh) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: AnnualOutputkWh</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="number(h:AnnualOutputkWh) &gt; 0 or not(h:AnnualOutputkWh)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:AnnualOutputkWh) &gt; 0 or not(h:AnnualOutputkWh)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected AnnualOutputkWh to be greater than 0</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="number(h:AnnualConsumptionkBtu) &gt; (number(h:AnnualOutputkWh) * 3.412) or not(h:AnnualConsumptionkBtu) or not(h:AnnualOutputkWh)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:AnnualConsumptionkBtu) &gt; (number(h:AnnualOutputkWh) * 3.412) or not(h:AnnualConsumptionkBtu) or not(h:AnnualOutputkWh)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected AnnualConsumptionkBtu to be greater than AnnualOutputkWh*3412</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M130"/></axsl:template><axsl:template match="text()" priority="-1" mode="M130"/><axsl:template match="@*|node()" priority="-2" mode="M130"><axsl:apply-templates select="*" mode="M130"/></axsl:template>

<!--PATTERN [GeneratorType=Shared]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[GeneratorType=Shared]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:extension/h:Generators/h:Generator[h:IsSharedSystem=&quot;true&quot;]" priority="1000" mode="M131"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Systems/h:extension/h:Generators/h:Generator[h:IsSharedSystem=&quot;true&quot;]"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(../../../../h:BuildingSummary/h:BuildingConstruction[h:ResidentialFacilityType[text()=&quot;single-family attached&quot; or text()=&quot;apartment unit&quot;]]) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(../../../../h:BuildingSummary/h:BuildingConstruction[h:ResidentialFacilityType[text()=&quot;single-family attached&quot; or text()=&quot;apartment unit&quot;]]) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: ../../../BuildingSummary/BuildingConstruction[ResidentialFacilityType[text()="single-family attached" or text()="apartment unit"]]</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:NumberofBedroomsServed) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:NumberofBedroomsServed) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: NumberofBedroomsServed</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="number(h:NumberofBedroomsServed) &gt; number(../../../../h:BuildingSummary/h:BuildingConstruction/h:NumberofBedrooms) or not(h:NumberofBedroomsServed) or not(../../../../h:BuildingSummary/h:BuildingConstruction/h:NumberofBedrooms)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:NumberofBedroomsServed) &gt; number(../../../../h:BuildingSummary/h:BuildingConstruction/h:NumberofBedrooms) or not(h:NumberofBedroomsServed) or not(../../../../h:BuildingSummary/h:BuildingConstruction/h:NumberofBedrooms)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected NumberofBedroomsServed to be greater than ../../../../BuildingSummary/BuildingConstruction/NumberofBedrooms</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M131"/></axsl:template><axsl:template match="text()" priority="-1" mode="M131"/><axsl:template match="@*|node()" priority="-2" mode="M131"><axsl:apply-templates select="*" mode="M131"/></axsl:template>

<!--PATTERN [ClothesWasher]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[ClothesWasher]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Appliances/h:ClothesWasher" priority="1000" mode="M132"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Appliances/h:ClothesWasher"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(../../h:Systems/h:WaterHeating/h:HotWaterDistribution) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(../../h:Systems/h:WaterHeating/h:HotWaterDistribution) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: ../../Systems/WaterHeating/HotWaterDistribution</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:IsSharedAppliance) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:IsSharedAppliance) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: IsSharedAppliance</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Location) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Location) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: Location</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="h:Location[text()=&quot;living space&quot; or text()=&quot;basement - unconditioned&quot; or text()=&quot;basement - conditioned&quot; or text()=&quot;attic - unvented&quot; or text()=&quot;attic - vented&quot; or text()=&quot;garage&quot; or text()=&quot;crawlspace - unvented&quot; or text()=&quot;crawlspace - vented&quot; or text()=&quot;crawlspace - conditioned&quot; or text()=&quot;other housing unit&quot; or text()=&quot;other heated space&quot; or text()=&quot;other multifamily buffer space&quot; or text()=&quot;other non-freezing space&quot;] or not(h:Location)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="h:Location[text()=&quot;living space&quot; or text()=&quot;basement - unconditioned&quot; or text()=&quot;basement - conditioned&quot; or text()=&quot;attic - unvented&quot; or text()=&quot;attic - vented&quot; or text()=&quot;garage&quot; or text()=&quot;crawlspace - unvented&quot; or text()=&quot;crawlspace - vented&quot; or text()=&quot;crawlspace - conditioned&quot; or text()=&quot;other housing unit&quot; or text()=&quot;other heated space&quot; or text()=&quot;other multifamily buffer space&quot; or text()=&quot;other non-freezing space&quot;] or not(h:Location)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected Location to be 'living space' or 'basement - unconditioned' or 'basement - conditioned' or 'attic - unvented' or 'attic - vented' or 'garage' or 'crawlspace - unvented' or 'crawlspace - vented' or 'crawlspace - conditioned' or 'other housing unit' or 'other heated space' or 'other multifamily buffer space' or 'other non-freezing space'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:IntegratedModifiedEnergyFactor) + count(h:ModifiedEnergyFactor) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:IntegratedModifiedEnergyFactor) + count(h:ModifiedEnergyFactor) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: IntegratedModifiedEnergyFactor | ModifiedEnergyFactor</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:extension/h:UsageMultiplier) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:extension/h:UsageMultiplier) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: extension/UsageMultiplier</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:extension/h:WeekdayScheduleFractions) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:extension/h:WeekdayScheduleFractions) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: extension/WeekdayScheduleFractions</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:extension/h:WeekendScheduleFractions) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:extension/h:WeekendScheduleFractions) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: extension/WeekendScheduleFractions</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:extension/h:MonthlyScheduleMultipliers) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:extension/h:MonthlyScheduleMultipliers) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: extension/MonthlyScheduleMultipliers</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M132"/></axsl:template><axsl:template match="text()" priority="-1" mode="M132"/><axsl:template match="@*|node()" priority="-2" mode="M132"><axsl:apply-templates select="*" mode="M132"/></axsl:template>

<!--PATTERN [ClothesWasherType=Detailed]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[ClothesWasherType=Detailed]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Appliances/h:ClothesWasher[h:IntegratedModifiedEnergyFactor | h:ModifiedEnergyFactor]" priority="1000" mode="M133"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Appliances/h:ClothesWasher[h:IntegratedModifiedEnergyFactor | h:ModifiedEnergyFactor]"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:RatedAnnualkWh) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:RatedAnnualkWh) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: RatedAnnualkWh</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:LabelElectricRate) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:LabelElectricRate) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: LabelElectricRate</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:LabelGasRate) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:LabelGasRate) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: LabelGasRate</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:LabelAnnualGasCost) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:LabelAnnualGasCost) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: LabelAnnualGasCost</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:LabelUsage) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:LabelUsage) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: LabelUsage</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Capacity) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Capacity) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: Capacity</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M133"/></axsl:template><axsl:template match="text()" priority="-1" mode="M133"/><axsl:template match="@*|node()" priority="-2" mode="M133"><axsl:apply-templates select="*" mode="M133"/></axsl:template>

<!--PATTERN [ClothesWasherType=Shared]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[ClothesWasherType=Shared]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Appliances/h:ClothesWasher[h:IsSharedAppliance=&quot;true&quot;]" priority="1000" mode="M134"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Appliances/h:ClothesWasher[h:IsSharedAppliance=&quot;true&quot;]"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(../../h:BuildingSummary/h:BuildingConstruction[h:ResidentialFacilityType[text()=&quot;single-family attached&quot; or text()=&quot;apartment unit&quot;]]) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(../../h:BuildingSummary/h:BuildingConstruction[h:ResidentialFacilityType[text()=&quot;single-family attached&quot; or text()=&quot;apartment unit&quot;]]) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: ../../BuildingSummary/BuildingConstruction[ResidentialFacilityType[text()="single-family attached" or text()="apartment unit"]]</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:AttachedToWaterHeatingSystem) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:AttachedToWaterHeatingSystem) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: AttachedToWaterHeatingSystem</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M134"/></axsl:template><axsl:template match="text()" priority="-1" mode="M134"/><axsl:template match="@*|node()" priority="-2" mode="M134"><axsl:apply-templates select="*" mode="M134"/></axsl:template>

<!--PATTERN [ClothesDryer]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[ClothesDryer]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Appliances/h:ClothesDryer" priority="1000" mode="M135"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Appliances/h:ClothesDryer"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(../h:ClothesWasher) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(../h:ClothesWasher) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: ../ClothesWasher</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:IsSharedAppliance) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:IsSharedAppliance) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: IsSharedAppliance</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Location) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Location) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: Location</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="h:Location[text()=&quot;living space&quot; or text()=&quot;basement - unconditioned&quot; or text()=&quot;basement - conditioned&quot; or text()=&quot;attic - unvented&quot; or text()=&quot;attic - vented&quot; or text()=&quot;garage&quot; or text()=&quot;crawlspace - unvented&quot; or text()=&quot;crawlspace - vented&quot; or text()=&quot;crawlspace - conditioned&quot; or text()=&quot;other housing unit&quot; or text()=&quot;other heated space&quot; or text()=&quot;other multifamily buffer space&quot; or text()=&quot;other non-freezing space&quot;] or not(h:Location)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="h:Location[text()=&quot;living space&quot; or text()=&quot;basement - unconditioned&quot; or text()=&quot;basement - conditioned&quot; or text()=&quot;attic - unvented&quot; or text()=&quot;attic - vented&quot; or text()=&quot;garage&quot; or text()=&quot;crawlspace - unvented&quot; or text()=&quot;crawlspace - vented&quot; or text()=&quot;crawlspace - conditioned&quot; or text()=&quot;other housing unit&quot; or text()=&quot;other heated space&quot; or text()=&quot;other multifamily buffer space&quot; or text()=&quot;other non-freezing space&quot;] or not(h:Location)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected Location to be 'living space' or 'basement - unconditioned' or 'basement - conditioned' or 'attic - unvented' or 'attic - vented' or 'garage' or 'crawlspace - unvented' or 'crawlspace - vented' or 'crawlspace - conditioned' or 'other housing unit' or 'other heated space' or 'other multifamily buffer space' or 'other non-freezing space'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:FuelType) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:FuelType) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: FuelType</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="h:FuelType[text()=&quot;natural gas&quot; or text()=&quot;fuel oil&quot; or text()=&quot;fuel oil 1&quot; or text()=&quot;fuel oil 2&quot; or text()=&quot;fuel oil 4&quot; or text()=&quot;fuel oil 5/6&quot; or text()=&quot;diesel&quot; or text()=&quot;propane&quot; or text()=&quot;kerosene&quot; or text()=&quot;coal&quot; or text()=&quot;coke&quot; or text()=&quot;bituminous coal&quot; or text()=&quot;anthracite coal&quot; or text()=&quot;electricity&quot; or text()=&quot;wood&quot; or text()=&quot;wood pellets&quot;] or not(h:FuelType)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="h:FuelType[text()=&quot;natural gas&quot; or text()=&quot;fuel oil&quot; or text()=&quot;fuel oil 1&quot; or text()=&quot;fuel oil 2&quot; or text()=&quot;fuel oil 4&quot; or text()=&quot;fuel oil 5/6&quot; or text()=&quot;diesel&quot; or text()=&quot;propane&quot; or text()=&quot;kerosene&quot; or text()=&quot;coal&quot; or text()=&quot;coke&quot; or text()=&quot;bituminous coal&quot; or text()=&quot;anthracite coal&quot; or text()=&quot;electricity&quot; or text()=&quot;wood&quot; or text()=&quot;wood pellets&quot;] or not(h:FuelType)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected FuelType to be 'natural gas' or 'fuel oil' or 'fuel oil 1' or 'fuel oil 2' or 'fuel oil 4' or 'fuel oil 5/6' or 'diesel' or 'propane' or 'kerosene' or 'coal' or 'coke' or 'bituminous coal' or 'anthracite coal' or 'electricity' or 'wood' or 'wood pellets'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:CombinedEnergyFactor) + count(h:EnergyFactor) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:CombinedEnergyFactor) + count(h:EnergyFactor) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: CombinedEnergyFactor | EnergyFactor</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Vented) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Vented) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: Vented</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:extension/h:UsageMultiplier) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:extension/h:UsageMultiplier) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: extension/UsageMultiplier</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:extension/h:WeekdayScheduleFractions) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:extension/h:WeekdayScheduleFractions) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: extension/WeekdayScheduleFractions</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:extension/h:WeekendScheduleFractions) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:extension/h:WeekendScheduleFractions) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: extension/WeekendScheduleFractions</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:extension/h:MonthlyScheduleMultipliers) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:extension/h:MonthlyScheduleMultipliers) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: extension/MonthlyScheduleMultipliers</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M135"/></axsl:template><axsl:template match="text()" priority="-1" mode="M135"/><axsl:template match="@*|node()" priority="-2" mode="M135"><axsl:apply-templates select="*" mode="M135"/></axsl:template>

<!--PATTERN [ClothesDryerType=Shared]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[ClothesDryerType=Shared]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Appliances/h:ClothesDryer[h:IsSharedAppliance=&quot;true&quot;]" priority="1000" mode="M136"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Appliances/h:ClothesDryer[h:IsSharedAppliance=&quot;true&quot;]"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(../../h:BuildingSummary/h:BuildingConstruction[h:ResidentialFacilityType[text()=&quot;single-family attached&quot; or text()=&quot;apartment unit&quot;]]) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(../../h:BuildingSummary/h:BuildingConstruction[h:ResidentialFacilityType[text()=&quot;single-family attached&quot; or text()=&quot;apartment unit&quot;]]) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: ../../BuildingSummary/BuildingConstruction[ResidentialFacilityType[text()="single-family attached" or text()="apartment unit"]]</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M136"/></axsl:template><axsl:template match="text()" priority="-1" mode="M136"/><axsl:template match="@*|node()" priority="-2" mode="M136"><axsl:apply-templates select="*" mode="M136"/></axsl:template>

<!--PATTERN [ClothesDryerType=Vented]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[ClothesDryerType=Vented]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Appliances/h:ClothesDryer[h:Vented=&quot;true&quot;]" priority="1000" mode="M137"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Appliances/h:ClothesDryer[h:Vented=&quot;true&quot;]"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:VentedFlowRate) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:VentedFlowRate) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: VentedFlowRate</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M137"/></axsl:template><axsl:template match="text()" priority="-1" mode="M137"/><axsl:template match="@*|node()" priority="-2" mode="M137"><axsl:apply-templates select="*" mode="M137"/></axsl:template>

<!--PATTERN [Dishwasher]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[Dishwasher]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Appliances/h:Dishwasher" priority="1000" mode="M138"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Appliances/h:Dishwasher"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:IsSharedAppliance) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:IsSharedAppliance) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: IsSharedAppliance</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Location) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Location) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: Location</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="h:Location[text()=&quot;living space&quot; or text()=&quot;basement - unconditioned&quot; or text()=&quot;basement - conditioned&quot; or text()=&quot;attic - unvented&quot; or text()=&quot;attic - vented&quot; or text()=&quot;garage&quot; or text()=&quot;crawlspace - unvented&quot; or text()=&quot;crawlspace - vented&quot; or text()=&quot;crawlspace - conditioned&quot; or text()=&quot;other housing unit&quot; or text()=&quot;other heated space&quot; or text()=&quot;other multifamily buffer space&quot; or text()=&quot;other non-freezing space&quot;] or not(h:Location)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="h:Location[text()=&quot;living space&quot; or text()=&quot;basement - unconditioned&quot; or text()=&quot;basement - conditioned&quot; or text()=&quot;attic - unvented&quot; or text()=&quot;attic - vented&quot; or text()=&quot;garage&quot; or text()=&quot;crawlspace - unvented&quot; or text()=&quot;crawlspace - vented&quot; or text()=&quot;crawlspace - conditioned&quot; or text()=&quot;other housing unit&quot; or text()=&quot;other heated space&quot; or text()=&quot;other multifamily buffer space&quot; or text()=&quot;other non-freezing space&quot;] or not(h:Location)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected Location to be 'living space' or 'basement - unconditioned' or 'basement - conditioned' or 'attic - unvented' or 'attic - vented' or 'garage' or 'crawlspace - unvented' or 'crawlspace - vented' or 'crawlspace - conditioned' or 'other housing unit' or 'other heated space' or 'other multifamily buffer space' or 'other non-freezing space'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:RatedAnnualkWh) + count(h:EnergyFactor) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:RatedAnnualkWh) + count(h:EnergyFactor) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: RatedAnnualkWh | EnergyFactor</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:extension/h:UsageMultiplier) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:extension/h:UsageMultiplier) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: extension/UsageMultiplier</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:extension/h:WeekdayScheduleFractions) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:extension/h:WeekdayScheduleFractions) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: extension/WeekdayScheduleFractions</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:extension/h:WeekendScheduleFractions) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:extension/h:WeekendScheduleFractions) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: extension/WeekendScheduleFractions</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:extension/h:MonthlyScheduleMultipliers) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:extension/h:MonthlyScheduleMultipliers) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: extension/MonthlyScheduleMultipliers</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M138"/></axsl:template><axsl:template match="text()" priority="-1" mode="M138"/><axsl:template match="@*|node()" priority="-2" mode="M138"><axsl:apply-templates select="*" mode="M138"/></axsl:template>

<!--PATTERN [DishwasherType=Detailed]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[DishwasherType=Detailed]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Appliances/h:Dishwasher[h:RatedAnnualkWh | h:EnergyFactor]" priority="1000" mode="M139"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Appliances/h:Dishwasher[h:RatedAnnualkWh | h:EnergyFactor]"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:LabelElectricRate) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:LabelElectricRate) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: LabelElectricRate</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:LabelGasRate) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:LabelGasRate) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: LabelGasRate</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:LabelAnnualGasCost) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:LabelAnnualGasCost) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: LabelAnnualGasCost</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:LabelUsage) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:LabelUsage) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: LabelUsage</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:PlaceSettingCapacity) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:PlaceSettingCapacity) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: PlaceSettingCapacity</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M139"/></axsl:template><axsl:template match="text()" priority="-1" mode="M139"/><axsl:template match="@*|node()" priority="-2" mode="M139"><axsl:apply-templates select="*" mode="M139"/></axsl:template>

<!--PATTERN [DishwasherType=Shared]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[DishwasherType=Shared]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Appliances/h:Dishwasher[h:IsSharedAppliance=&quot;true&quot;]" priority="1000" mode="M140"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Appliances/h:Dishwasher[h:IsSharedAppliance=&quot;true&quot;]"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(../../h:BuildingSummary/h:BuildingConstruction[h:ResidentialFacilityType[text()=&quot;single-family attached&quot; or text()=&quot;apartment unit&quot;]]) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(../../h:BuildingSummary/h:BuildingConstruction[h:ResidentialFacilityType[text()=&quot;single-family attached&quot; or text()=&quot;apartment unit&quot;]]) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: ../../BuildingSummary/BuildingConstruction[ResidentialFacilityType[text()="single-family attached" or text()="apartment unit"]]</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:AttachedToWaterHeatingSystem) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:AttachedToWaterHeatingSystem) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: AttachedToWaterHeatingSystem</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M140"/></axsl:template><axsl:template match="text()" priority="-1" mode="M140"/><axsl:template match="@*|node()" priority="-2" mode="M140"><axsl:apply-templates select="*" mode="M140"/></axsl:template>

<!--PATTERN [Refrigerator]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[Refrigerator]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Appliances/h:Refrigerator" priority="1000" mode="M141"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Appliances/h:Refrigerator"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Location) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Location) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: Location</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="h:Location[text()=&quot;living space&quot; or text()=&quot;basement - unconditioned&quot; or text()=&quot;basement - conditioned&quot; or text()=&quot;attic - unvented&quot; or text()=&quot;attic - vented&quot; or text()=&quot;garage&quot; or text()=&quot;crawlspace - unvented&quot; or text()=&quot;crawlspace - vented&quot; or text()=&quot;crawlspace - conditioned&quot; or text()=&quot;other housing unit&quot; or text()=&quot;other heated space&quot; or text()=&quot;other multifamily buffer space&quot; or text()=&quot;other non-freezing space&quot;] or not(h:Location)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="h:Location[text()=&quot;living space&quot; or text()=&quot;basement - unconditioned&quot; or text()=&quot;basement - conditioned&quot; or text()=&quot;attic - unvented&quot; or text()=&quot;attic - vented&quot; or text()=&quot;garage&quot; or text()=&quot;crawlspace - unvented&quot; or text()=&quot;crawlspace - vented&quot; or text()=&quot;crawlspace - conditioned&quot; or text()=&quot;other housing unit&quot; or text()=&quot;other heated space&quot; or text()=&quot;other multifamily buffer space&quot; or text()=&quot;other non-freezing space&quot;] or not(h:Location)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected Location to be 'living space' or 'basement - unconditioned' or 'basement - conditioned' or 'attic - unvented' or 'attic - vented' or 'garage' or 'crawlspace - unvented' or 'crawlspace - vented' or 'crawlspace - conditioned' or 'other housing unit' or 'other heated space' or 'other multifamily buffer space' or 'other non-freezing space'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:RatedAnnualkWh) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:RatedAnnualkWh) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: RatedAnnualkWh</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:PrimaryIndicator) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:PrimaryIndicator) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: PrimaryIndicator</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:extension/h:UsageMultiplier) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:extension/h:UsageMultiplier) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: extension/UsageMultiplier</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:extension/h:WeekdayScheduleFractions) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:extension/h:WeekdayScheduleFractions) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: extension/WeekdayScheduleFractions</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:extension/h:WeekendScheduleFractions) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:extension/h:WeekendScheduleFractions) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: extension/WeekendScheduleFractions</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:extension/h:MonthlyScheduleMultipliers) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:extension/h:MonthlyScheduleMultipliers) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: extension/MonthlyScheduleMultipliers</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M141"/></axsl:template><axsl:template match="text()" priority="-1" mode="M141"/><axsl:template match="@*|node()" priority="-2" mode="M141"><axsl:apply-templates select="*" mode="M141"/></axsl:template>

<!--PATTERN [Freezer]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[Freezer]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Appliances/h:Freezer" priority="1000" mode="M142"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Appliances/h:Freezer"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Location) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Location) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: Location</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="h:Location[text()=&quot;living space&quot; or text()=&quot;basement - unconditioned&quot; or text()=&quot;basement - conditioned&quot; or text()=&quot;attic - unvented&quot; or text()=&quot;attic - vented&quot; or text()=&quot;garage&quot; or text()=&quot;crawlspace - unvented&quot; or text()=&quot;crawlspace - vented&quot; or text()=&quot;crawlspace - conditioned&quot; or text()=&quot;other housing unit&quot; or text()=&quot;other heated space&quot; or text()=&quot;other multifamily buffer space&quot; or text()=&quot;other non-freezing space&quot;] or not(h:Location)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="h:Location[text()=&quot;living space&quot; or text()=&quot;basement - unconditioned&quot; or text()=&quot;basement - conditioned&quot; or text()=&quot;attic - unvented&quot; or text()=&quot;attic - vented&quot; or text()=&quot;garage&quot; or text()=&quot;crawlspace - unvented&quot; or text()=&quot;crawlspace - vented&quot; or text()=&quot;crawlspace - conditioned&quot; or text()=&quot;other housing unit&quot; or text()=&quot;other heated space&quot; or text()=&quot;other multifamily buffer space&quot; or text()=&quot;other non-freezing space&quot;] or not(h:Location)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected Location to be 'living space' or 'basement - unconditioned' or 'basement - conditioned' or 'attic - unvented' or 'attic - vented' or 'garage' or 'crawlspace - unvented' or 'crawlspace - vented' or 'crawlspace - conditioned' or 'other housing unit' or 'other heated space' or 'other multifamily buffer space' or 'other non-freezing space'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:RatedAnnualkWh) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:RatedAnnualkWh) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: RatedAnnualkWh</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:extension/h:UsageMultiplier) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:extension/h:UsageMultiplier) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: extension/UsageMultiplier</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:extension/h:WeekdayScheduleFractions) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:extension/h:WeekdayScheduleFractions) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: extension/WeekdayScheduleFractions</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:extension/h:WeekendScheduleFractions) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:extension/h:WeekendScheduleFractions) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: extension/WeekendScheduleFractions</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:extension/h:MonthlyScheduleMultipliers) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:extension/h:MonthlyScheduleMultipliers) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: extension/MonthlyScheduleMultipliers</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M142"/></axsl:template><axsl:template match="text()" priority="-1" mode="M142"/><axsl:template match="@*|node()" priority="-2" mode="M142"><axsl:apply-templates select="*" mode="M142"/></axsl:template>

<!--PATTERN [Dehumidifier]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[Dehumidifier]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Appliances/h:Dehumidifier" priority="1000" mode="M143"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Appliances/h:Dehumidifier"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Type) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Type) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: Type</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="h:Type[text()=&quot;portable&quot; or text()=&quot;whole-home&quot;] or not(h:Type)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="h:Type[text()=&quot;portable&quot; or text()=&quot;whole-home&quot;] or not(h:Type)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected Type to be 'portable' or 'whole-home'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Location) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Location) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: Location</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="h:Location[text()=&quot;living space&quot;] or not(h:Location)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="h:Location[text()=&quot;living space&quot;] or not(h:Location)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected Location to be 'living space'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Capacity) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Capacity) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: Capacity</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:IntegratedEnergyFactor) + count(h:EnergyFactor) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:IntegratedEnergyFactor) + count(h:EnergyFactor) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: IntegratedEnergyFactor | EnergyFactor</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:DehumidistatSetpoint) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:DehumidistatSetpoint) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: DehumidistatSetpoint</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:FractionDehumidificationLoadServed) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:FractionDehumidificationLoadServed) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: FractionDehumidificationLoadServed</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M143"/></axsl:template><axsl:template match="text()" priority="-1" mode="M143"/><axsl:template match="@*|node()" priority="-2" mode="M143"><axsl:apply-templates select="*" mode="M143"/></axsl:template>

<!--PATTERN [CookingRange]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[CookingRange]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Appliances/h:CookingRange" priority="1000" mode="M144"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Appliances/h:CookingRange"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(../h:Oven) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(../h:Oven) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: ../Oven</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Location) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Location) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: Location</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="h:Location[text()=&quot;living space&quot; or text()=&quot;basement - unconditioned&quot; or text()=&quot;basement - conditioned&quot; or text()=&quot;attic - unvented&quot; or text()=&quot;attic - vented&quot; or text()=&quot;garage&quot; or text()=&quot;crawlspace - unvented&quot; or text()=&quot;crawlspace - vented&quot; or text()=&quot;crawlspace - conditioned&quot; or text()=&quot;other housing unit&quot; or text()=&quot;other heated space&quot; or text()=&quot;other multifamily buffer space&quot; or text()=&quot;other non-freezing space&quot;] or not(h:Location)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="h:Location[text()=&quot;living space&quot; or text()=&quot;basement - unconditioned&quot; or text()=&quot;basement - conditioned&quot; or text()=&quot;attic - unvented&quot; or text()=&quot;attic - vented&quot; or text()=&quot;garage&quot; or text()=&quot;crawlspace - unvented&quot; or text()=&quot;crawlspace - vented&quot; or text()=&quot;crawlspace - conditioned&quot; or text()=&quot;other housing unit&quot; or text()=&quot;other heated space&quot; or text()=&quot;other multifamily buffer space&quot; or text()=&quot;other non-freezing space&quot;] or not(h:Location)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected Location to be 'living space' or 'basement - unconditioned' or 'basement - conditioned' or 'attic - unvented' or 'attic - vented' or 'garage' or 'crawlspace - unvented' or 'crawlspace - vented' or 'crawlspace - conditioned' or 'other housing unit' or 'other heated space' or 'other multifamily buffer space' or 'other non-freezing space'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:FuelType) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:FuelType) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: FuelType</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="h:FuelType[text()=&quot;natural gas&quot; or text()=&quot;fuel oil&quot; or text()=&quot;fuel oil 1&quot; or text()=&quot;fuel oil 2&quot; or text()=&quot;fuel oil 4&quot; or text()=&quot;fuel oil 5/6&quot; or text()=&quot;diesel&quot; or text()=&quot;propane&quot; or text()=&quot;kerosene&quot; or text()=&quot;coal&quot; or text()=&quot;coke&quot; or text()=&quot;bituminous coal&quot; or text()=&quot;anthracite coal&quot; or text()=&quot;electricity&quot; or text()=&quot;wood&quot; or text()=&quot;wood pellets&quot;] or not(h:FuelType)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="h:FuelType[text()=&quot;natural gas&quot; or text()=&quot;fuel oil&quot; or text()=&quot;fuel oil 1&quot; or text()=&quot;fuel oil 2&quot; or text()=&quot;fuel oil 4&quot; or text()=&quot;fuel oil 5/6&quot; or text()=&quot;diesel&quot; or text()=&quot;propane&quot; or text()=&quot;kerosene&quot; or text()=&quot;coal&quot; or text()=&quot;coke&quot; or text()=&quot;bituminous coal&quot; or text()=&quot;anthracite coal&quot; or text()=&quot;electricity&quot; or text()=&quot;wood&quot; or text()=&quot;wood pellets&quot;] or not(h:FuelType)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected FuelType to be 'natural gas' or 'fuel oil' or 'fuel oil 1' or 'fuel oil 2' or 'fuel oil 4' or 'fuel oil 5/6' or 'diesel' or 'propane' or 'kerosene' or 'coal' or 'coke' or 'bituminous coal' or 'anthracite coal' or 'electricity' or 'wood' or 'wood pellets'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:IsInduction) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:IsInduction) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: IsInduction</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:extension/h:UsageMultiplier) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:extension/h:UsageMultiplier) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: extension/UsageMultiplier</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:extension/h:WeekdayScheduleFractions) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:extension/h:WeekdayScheduleFractions) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: extension/WeekdayScheduleFractions</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:extension/h:WeekendScheduleFractions) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:extension/h:WeekendScheduleFractions) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: extension/WeekendScheduleFractions</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:extension/h:MonthlyScheduleMultipliers) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:extension/h:MonthlyScheduleMultipliers) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: extension/MonthlyScheduleMultipliers</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M144"/></axsl:template><axsl:template match="text()" priority="-1" mode="M144"/><axsl:template match="@*|node()" priority="-2" mode="M144"><axsl:apply-templates select="*" mode="M144"/></axsl:template>

<!--PATTERN [Oven]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[Oven]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Appliances/h:Oven" priority="1000" mode="M145"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Appliances/h:Oven"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(../h:CookingRange) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(../h:CookingRange) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: ../CookingRange</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:IsConvection) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:IsConvection) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: IsConvection</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M145"/></axsl:template><axsl:template match="text()" priority="-1" mode="M145"/><axsl:template match="@*|node()" priority="-2" mode="M145"><axsl:apply-templates select="*" mode="M145"/></axsl:template>

<!--PATTERN [Lighting]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[Lighting]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Lighting" priority="1000" mode="M146"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Lighting"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:LightingGroup[h:LightingType[h:LightEmittingDiode] and h:Location=&quot;interior&quot;]) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:LightingGroup[h:LightingType[h:LightEmittingDiode] and h:Location=&quot;interior&quot;]) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: LightingGroup[LightingType[LightEmittingDiode] and Location[text()="interior"]]</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:LightingGroup[h:LightingType[h:LightEmittingDiode] and h:Location=&quot;exterior&quot;]) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:LightingGroup[h:LightingType[h:LightEmittingDiode] and h:Location=&quot;exterior&quot;]) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: LightingGroup[LightingType[LightEmittingDiode] and Location[text()="exterior"]]</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:LightingGroup[h:LightingType[h:LightEmittingDiode] and h:Location=&quot;garage&quot;]) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:LightingGroup[h:LightingType[h:LightEmittingDiode] and h:Location=&quot;garage&quot;]) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: LightingGroup[LightingType[LightEmittingDiode] and Location[text()="garage"]]</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:LightingGroup[h:LightingType[h:CompactFluorescent] and h:Location=&quot;interior&quot;]) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:LightingGroup[h:LightingType[h:CompactFluorescent] and h:Location=&quot;interior&quot;]) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: LightingGroup[LightingType[CompactFluorescent] and Location[text()="interior"]]</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:LightingGroup[h:LightingType[h:CompactFluorescent] and h:Location=&quot;exterior&quot;]) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:LightingGroup[h:LightingType[h:CompactFluorescent] and h:Location=&quot;exterior&quot;]) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: LightingGroup[LightingType[CompactFluorescent] and Location[text()="exterior"]]</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:LightingGroup[h:LightingType[h:CompactFluorescent] and h:Location=&quot;garage&quot;]) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:LightingGroup[h:LightingType[h:CompactFluorescent] and h:Location=&quot;garage&quot;]) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: LightingGroup[LightingType[CompactFluorescent] and Location[text()="garage"]]</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:LightingGroup[h:LightingType[h:FluorescentTube] and h:Location=&quot;interior&quot;]) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:LightingGroup[h:LightingType[h:FluorescentTube] and h:Location=&quot;interior&quot;]) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: LightingGroup[LightingType[FluorescentTube] and Location[text()="interior"]]</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:LightingGroup[h:LightingType[h:FluorescentTube] and h:Location=&quot;exterior&quot;]) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:LightingGroup[h:LightingType[h:FluorescentTube] and h:Location=&quot;exterior&quot;]) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: LightingGroup[LightingType[FluorescentTube] and Location[text()="exterior"]]</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:LightingGroup[h:LightingType[h:FluorescentTube] and h:Location=&quot;garage&quot;]) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:LightingGroup[h:LightingType[h:FluorescentTube] and h:Location=&quot;garage&quot;]) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: LightingGroup[LightingType[FluorescentTube] and Location[text()="garage"]]</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:extension/h:InteriorUsageMultiplier) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:extension/h:InteriorUsageMultiplier) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: extension/InteriorUsageMultiplier</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:extension/h:GarageUsageMultiplier) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:extension/h:GarageUsageMultiplier) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: extension/GarageUsageMultiplier</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:extension/h:ExteriorUsageMultiplier) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:extension/h:ExteriorUsageMultiplier) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: extension/ExteriorUsageMultiplier</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:extension/h:InteriorWeekdayScheduleFractions) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:extension/h:InteriorWeekdayScheduleFractions) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: extension/InteriorWeekdayScheduleFractions</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:extension/h:InteriorWeekendScheduleFractions) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:extension/h:InteriorWeekendScheduleFractions) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: extension/InteriorWeekendScheduleFractions</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:extension/h:InteriorMonthlyScheduleMultipliers) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:extension/h:InteriorMonthlyScheduleMultipliers) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: extension/InteriorMonthlyScheduleMultipliers</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:extension/h:GarageWeekdayScheduleFractions) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:extension/h:GarageWeekdayScheduleFractions) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: extension/GarageWeekdayScheduleFractions</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:extension/h:GarageWeekendScheduleFractions) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:extension/h:GarageWeekendScheduleFractions) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: extension/GarageWeekendScheduleFractions</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:extension/h:GarageMonthlyScheduleMultipliers) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:extension/h:GarageMonthlyScheduleMultipliers) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: extension/GarageMonthlyScheduleMultipliers</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:extension/h:ExteriorWeekdayScheduleFractions) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:extension/h:ExteriorWeekdayScheduleFractions) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: extension/ExteriorWeekdayScheduleFractions</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:extension/h:ExteriorWeekendScheduleFractions) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:extension/h:ExteriorWeekendScheduleFractions) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: extension/ExteriorWeekendScheduleFractions</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:extension/h:ExteriorMonthlyScheduleMultipliers) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:extension/h:ExteriorMonthlyScheduleMultipliers) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: extension/ExteriorMonthlyScheduleMultipliers</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:extension/h:ExteriorHolidayLighting) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:extension/h:ExteriorHolidayLighting) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: extension/ExteriorHolidayLighting</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="sum(h:LightingGroup[h:Location=&quot;interior&quot;]/h:FractionofUnitsInLocation) &lt;= 1.01"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="sum(h:LightingGroup[h:Location=&quot;interior&quot;]/h:FractionofUnitsInLocation) &lt;= 1.01"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected sum(LightingGroup/FractionofUnitsInLocation) for Location="interior" to be less than or equal to 1</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="sum(h:LightingGroup[h:Location=&quot;exterior&quot;]/h:FractionofUnitsInLocation) &lt;= 1.01"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="sum(h:LightingGroup[h:Location=&quot;exterior&quot;]/h:FractionofUnitsInLocation) &lt;= 1.01"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected sum(LightingGroup/FractionofUnitsInLocation) for Location="exterior" to be less than or equal to 1</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="sum(h:LightingGroup[h:Location=&quot;garage&quot;]/h:FractionofUnitsInLocation) &lt;= 1.01"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="sum(h:LightingGroup[h:Location=&quot;garage&quot;]/h:FractionofUnitsInLocation) &lt;= 1.01"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected sum(LightingGroup/FractionofUnitsInLocation) for Location="garage" to be less than or equal to 1</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M146"/></axsl:template><axsl:template match="text()" priority="-1" mode="M146"/><axsl:template match="@*|node()" priority="-2" mode="M146"><axsl:apply-templates select="*" mode="M146"/></axsl:template>

<!--PATTERN [LightingGroup]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[LightingGroup]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Lighting/h:LightingGroup[h:LightingType[h:LightEmittingDiode | h:CompactFluorescent | h:FluorescentTube] and h:Location[text()=&quot;interior&quot; or text()=&quot;exterior&quot; or text()=&quot;garage&quot;]]" priority="1000" mode="M147"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Lighting/h:LightingGroup[h:LightingType[h:LightEmittingDiode | h:CompactFluorescent | h:FluorescentTube] and h:Location[text()=&quot;interior&quot; or text()=&quot;exterior&quot; or text()=&quot;garage&quot;]]"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:FractionofUnitsInLocation) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:FractionofUnitsInLocation) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: FractionofUnitsInLocation</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M147"/></axsl:template><axsl:template match="text()" priority="-1" mode="M147"/><axsl:template match="@*|node()" priority="-2" mode="M147"><axsl:apply-templates select="*" mode="M147"/></axsl:template>

<!--PATTERN [ExteriorHolidayLighting]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[ExteriorHolidayLighting]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Lighting/h:extension/h:ExteriorHolidayLighting" priority="1000" mode="M148"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Lighting/h:extension/h:ExteriorHolidayLighting"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Load[h:Units=&quot;kWh/day&quot;]/h:Value) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Load[h:Units=&quot;kWh/day&quot;]/h:Value) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: Load[Units="kWh/day"]/Value</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:PeriodBeginMonth) + count(h:PeriodBeginDayOfMonth) = 0 or count(h:PeriodBeginMonth) + count(h:PeriodBeginDayOfMonth) = 2"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:PeriodBeginMonth) + count(h:PeriodBeginDayOfMonth) = 0 or count(h:PeriodBeginMonth) + count(h:PeriodBeginDayOfMonth) = 2"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 2 element(s) for xpath: PeriodBeginMonth | PeriodBeginDayOfMonth</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:PeriodEndMonth) + count(h:PeriodEndDayOfMonth) = 0 or count(h:PeriodEndMonth) + count(h:PeriodEndDayOfMonth) = 2"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:PeriodEndMonth) + count(h:PeriodEndDayOfMonth) = 0 or count(h:PeriodEndMonth) + count(h:PeriodEndDayOfMonth) = 2"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 2 element(s) for xpath: PeriodEndMonth | PeriodEndDayOfMonth</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:WeekdayScheduleFractions) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:WeekdayScheduleFractions) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: WeekdayScheduleFractions</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:WeekendScheduleFractions) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:WeekendScheduleFractions) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: WeekendScheduleFractions</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M148"/></axsl:template><axsl:template match="text()" priority="-1" mode="M148"/><axsl:template match="@*|node()" priority="-2" mode="M148"><axsl:apply-templates select="*" mode="M148"/></axsl:template>

<!--PATTERN [CeilingFan]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[CeilingFan]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Lighting/h:CeilingFan" priority="1000" mode="M149"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Lighting/h:CeilingFan"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Airflow[h:FanSpeed=&quot;medium&quot;]/h:Efficiency) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Airflow[h:FanSpeed=&quot;medium&quot;]/h:Efficiency) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: Airflow[FanSpeed="medium"]/Efficiency</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Quantity) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Quantity) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: Quantity</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:extension/h:WeekdayScheduleFractions) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:extension/h:WeekdayScheduleFractions) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: extension/WeekdayScheduleFractions</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:extension/h:WeekendScheduleFractions) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:extension/h:WeekendScheduleFractions) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: extension/WeekendScheduleFractions</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:extension/h:MonthlyScheduleMultipliers) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:extension/h:MonthlyScheduleMultipliers) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: extension/MonthlyScheduleMultipliers</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M149"/></axsl:template><axsl:template match="text()" priority="-1" mode="M149"/><axsl:template match="@*|node()" priority="-2" mode="M149"><axsl:apply-templates select="*" mode="M149"/></axsl:template>

<!--PATTERN [Pool]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[Pool]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Pools/h:Pool" priority="1000" mode="M150"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Pools/h:Pool"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Type) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Type) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: Type</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:PoolPumps/h:PoolPump) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:PoolPumps/h:PoolPump) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: PoolPumps/PoolPump</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Heater) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Heater) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: Heater</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M150"/></axsl:template><axsl:template match="text()" priority="-1" mode="M150"/><axsl:template match="@*|node()" priority="-2" mode="M150"><axsl:apply-templates select="*" mode="M150"/></axsl:template>

<!--PATTERN [PoolPump]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[PoolPump]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Pools/h:Pool/h:PoolPumps/h:PoolPump" priority="1000" mode="M151"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Pools/h:Pool/h:PoolPumps/h:PoolPump"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Type) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Type) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: Type</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Load[h:Units=&quot;kWh/year&quot;]/h:Value) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Load[h:Units=&quot;kWh/year&quot;]/h:Value) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: Load[Units="kWh/year"]/Value</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:extension/h:UsageMultiplier) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:extension/h:UsageMultiplier) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: extension/UsageMultiplier</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:extension/h:WeekdayScheduleFractions) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:extension/h:WeekdayScheduleFractions) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: extension/WeekdayScheduleFractions</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:extension/h:WeekendScheduleFractions) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:extension/h:WeekendScheduleFractions) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: extension/WeekendScheduleFractions</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:extension/h:MonthlyScheduleMultipliers) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:extension/h:MonthlyScheduleMultipliers) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: extension/MonthlyScheduleMultipliers</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M151"/></axsl:template><axsl:template match="text()" priority="-1" mode="M151"/><axsl:template match="@*|node()" priority="-2" mode="M151"><axsl:apply-templates select="*" mode="M151"/></axsl:template>

<!--PATTERN [PoolHeater]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[PoolHeater]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Pools/h:Pool/h:Heater" priority="1000" mode="M152"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Pools/h:Pool/h:Heater"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Type) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Type) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: Type</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="h:Type[text()=&quot;none&quot; or text()=&quot;gas fired&quot; or text()=&quot;electric resistance&quot; or text()=&quot;heat pump&quot;] or not(h:Type)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="h:Type[text()=&quot;none&quot; or text()=&quot;gas fired&quot; or text()=&quot;electric resistance&quot; or text()=&quot;heat pump&quot;] or not(h:Type)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected Type to be 'gas fired' or 'electric resistance' or 'heat pump'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Load[h:Units=&quot;kWh/year&quot; or h:Units=&quot;therm/year&quot;]/h:Value) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Load[h:Units=&quot;kWh/year&quot; or h:Units=&quot;therm/year&quot;]/h:Value) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: Load[Units="kWh/year" or Units="therm/year"]/Value</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:extension/h:UsageMultiplier) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:extension/h:UsageMultiplier) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: extension/UsageMultiplier</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:extension/h:WeekdayScheduleFractions) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:extension/h:WeekdayScheduleFractions) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: extension/WeekdayScheduleFractions</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:extension/h:WeekendScheduleFractions) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:extension/h:WeekendScheduleFractions) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: extension/WeekendScheduleFractions</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:extension/h:MonthlyScheduleMultipliers) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:extension/h:MonthlyScheduleMultipliers) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: extension/MonthlyScheduleMultipliers</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M152"/></axsl:template><axsl:template match="text()" priority="-1" mode="M152"/><axsl:template match="@*|node()" priority="-2" mode="M152"><axsl:apply-templates select="*" mode="M152"/></axsl:template>

<!--PATTERN [HotTub]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[HotTub]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:HotTubs/h:HotTub" priority="1000" mode="M153"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:HotTubs/h:HotTub"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Type) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Type) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: Type</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:HotTubPumps/h:HotTubPump) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:HotTubPumps/h:HotTubPump) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: HotTubPumps/HotTubPump</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Heater) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Heater) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: Heater</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M153"/></axsl:template><axsl:template match="text()" priority="-1" mode="M153"/><axsl:template match="@*|node()" priority="-2" mode="M153"><axsl:apply-templates select="*" mode="M153"/></axsl:template>

<!--PATTERN [HotTubPump]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[HotTubPump]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:HotTubs/h:HotTub/h:HotTubPumps/h:HotTubPump" priority="1000" mode="M154"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:HotTubs/h:HotTub/h:HotTubPumps/h:HotTubPump"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Type) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Type) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: Type</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Load[h:Units=&quot;kWh/year&quot;]/h:Value) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Load[h:Units=&quot;kWh/year&quot;]/h:Value) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: Load[Units="kWh/year"]/Value</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:extension/h:UsageMultiplier) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:extension/h:UsageMultiplier) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: extension/UsageMultiplier</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:extension/h:WeekdayScheduleFractions) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:extension/h:WeekdayScheduleFractions) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: extension/WeekdayScheduleFractions</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:extension/h:WeekendScheduleFractions) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:extension/h:WeekendScheduleFractions) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: extension/WeekendScheduleFractions</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:extension/h:MonthlyScheduleMultipliers) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:extension/h:MonthlyScheduleMultipliers) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: extension/MonthlyScheduleMultipliers</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M154"/></axsl:template><axsl:template match="text()" priority="-1" mode="M154"/><axsl:template match="@*|node()" priority="-2" mode="M154"><axsl:apply-templates select="*" mode="M154"/></axsl:template>

<!--PATTERN [HotTubHeater]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[HotTubHeater]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:HotTubs/h:HotTub/h:Heater" priority="1000" mode="M155"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:HotTubs/h:HotTub/h:Heater"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Type) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Type) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: Type</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="h:Type[text()=&quot;none&quot; or text()=&quot;gas fired&quot; or text()=&quot;electric resistance&quot; or text()=&quot;heat pump&quot;] or not(h:Type)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="h:Type[text()=&quot;none&quot; or text()=&quot;gas fired&quot; or text()=&quot;electric resistance&quot; or text()=&quot;heat pump&quot;] or not(h:Type)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected Type to be 'gas fired' or 'electric resistance' or 'heat pump'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Load[h:Units=&quot;kWh/year&quot; or h:Units=&quot;therm/year&quot;]/h:Value) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Load[h:Units=&quot;kWh/year&quot; or h:Units=&quot;therm/year&quot;]/h:Value) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: Load[Units="kWh/year" or Units="therm/year"]/Value</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:extension/h:UsageMultiplier) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:extension/h:UsageMultiplier) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: extension/UsageMultiplier</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:extension/h:WeekdayScheduleFractions) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:extension/h:WeekdayScheduleFractions) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: extension/WeekdayScheduleFractions</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:extension/h:WeekendScheduleFractions) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:extension/h:WeekendScheduleFractions) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: extension/WeekendScheduleFractions</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:extension/h:MonthlyScheduleMultipliers) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:extension/h:MonthlyScheduleMultipliers) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: extension/MonthlyScheduleMultipliers</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M155"/></axsl:template><axsl:template match="text()" priority="-1" mode="M155"/><axsl:template match="@*|node()" priority="-2" mode="M155"><axsl:apply-templates select="*" mode="M155"/></axsl:template>

<!--PATTERN [PlugLoad]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[PlugLoad]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:MiscLoads/h:PlugLoad[h:PlugLoadType=&quot;other&quot; or h:PlugLoadType=&quot;TV other&quot; or h:PlugLoadType=&quot;electric vehicle charging&quot; or h:PlugLoadType=&quot;well pump&quot;]" priority="1000" mode="M156"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:MiscLoads/h:PlugLoad[h:PlugLoadType=&quot;other&quot; or h:PlugLoadType=&quot;TV other&quot; or h:PlugLoadType=&quot;electric vehicle charging&quot; or h:PlugLoadType=&quot;well pump&quot;]"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Load[h:Units=&quot;kWh/year&quot;]/h:Value) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Load[h:Units=&quot;kWh/year&quot;]/h:Value) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: Load[Units="kWh/year"]/Value</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:extension/h:FracSensible) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:extension/h:FracSensible) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: extension/FracSensible</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="number(h:extension/h:FracSensible) &gt;= 0 or not(h:extension/h:FracSensible)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:extension/h:FracSensible) &gt;= 0 or not(h:extension/h:FracSensible)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected extension/FracSensible to be greater than or equal to 0</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:extension/h:FracLatent) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:extension/h:FracLatent) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: extension/FracLatent</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="number(h:extension/h:FracLatent) &gt;= 0 or not(h:extension/h:FracLatent)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:extension/h:FracLatent) &gt;= 0 or not(h:extension/h:FracLatent)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected extension/FracLatent to be greater than or equal to 0</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="(number(h:extension/h:FracSensible) + number(h:extension/h:FracLatent)) &lt;= 1 or not(h:extension/h:FracSensible) or not(h:extension/h:FracLatent)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(number(h:extension/h:FracSensible) + number(h:extension/h:FracLatent)) &lt;= 1 or not(h:extension/h:FracSensible) or not(h:extension/h:FracLatent)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected sum of extension/FracSensible and extension/FracLatent to be less than or equal to 1</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:extension/h:UsageMultiplier) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:extension/h:UsageMultiplier) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: extension/UsageMultiplier</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:extension/h:WeekdayScheduleFractions) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:extension/h:WeekdayScheduleFractions) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: extension/WeekdayScheduleFractions</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:extension/h:WeekendScheduleFractions) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:extension/h:WeekendScheduleFractions) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: extension/WeekendScheduleFractions</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:extension/h:MonthlyScheduleMultipliers) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:extension/h:MonthlyScheduleMultipliers) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: extension/MonthlyScheduleMultipliers</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M156"/></axsl:template><axsl:template match="text()" priority="-1" mode="M156"/><axsl:template match="@*|node()" priority="-2" mode="M156"><axsl:apply-templates select="*" mode="M156"/></axsl:template>

<!--PATTERN [FuelLoad]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[FuelLoad]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:MiscLoads/h:FuelLoad[h:FuelLoadType=&quot;grill&quot; or h:FuelLoadType=&quot;lighting&quot; or h:FuelLoadType=&quot;fireplace&quot;]" priority="1000" mode="M157"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:MiscLoads/h:FuelLoad[h:FuelLoadType=&quot;grill&quot; or h:FuelLoadType=&quot;lighting&quot; or h:FuelLoadType=&quot;fireplace&quot;]"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Load[h:Units=&quot;therm/year&quot;]/h:Value) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Load[h:Units=&quot;therm/year&quot;]/h:Value) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: Load[Units="therm/year"]/Value</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:FuelType) = 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:FuelType) = 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 1 element(s) for xpath: FuelType</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="h:FuelType[text()=&quot;natural gas&quot; or text()=&quot;fuel oil&quot; or text()=&quot;fuel oil 1&quot; or text()=&quot;fuel oil 2&quot; or text()=&quot;fuel oil 4&quot; or text()=&quot;fuel oil 5/6&quot; or text()=&quot;diesel&quot; or text()=&quot;propane&quot; or text()=&quot;kerosene&quot; or text()=&quot;coal&quot; or text()=&quot;coke&quot; or text()=&quot;bituminous coal&quot; or text()=&quot;anthracite coal&quot; or text()=&quot;wood&quot; or text()=&quot;wood pellets&quot;] or not(h:FuelType)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="h:FuelType[text()=&quot;natural gas&quot; or text()=&quot;fuel oil&quot; or text()=&quot;fuel oil 1&quot; or text()=&quot;fuel oil 2&quot; or text()=&quot;fuel oil 4&quot; or text()=&quot;fuel oil 5/6&quot; or text()=&quot;diesel&quot; or text()=&quot;propane&quot; or text()=&quot;kerosene&quot; or text()=&quot;coal&quot; or text()=&quot;coke&quot; or text()=&quot;bituminous coal&quot; or text()=&quot;anthracite coal&quot; or text()=&quot;wood&quot; or text()=&quot;wood pellets&quot;] or not(h:FuelType)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected FuelType to be 'natural gas' or 'fuel oil' or 'fuel oil 1' or 'fuel oil 2' or 'fuel oil 4' or 'fuel oil 5/6' or 'diesel' or 'propane' or 'kerosene' or 'coal' or 'coke' or 'bituminous coal' or 'anthracite coal' or 'wood' or 'wood pellets'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:extension/h:FracSensible) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:extension/h:FracSensible) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: extension/FracSensible</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="number(h:extension/h:FracSensible) &gt;= 0 or not(h:extension/h:FracSensible)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:extension/h:FracSensible) &gt;= 0 or not(h:extension/h:FracSensible)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected extension/FracSensible to be greater than or equal to 0</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:extension/h:FracLatent) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:extension/h:FracLatent) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: extension/FracLatent</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="number(h:extension/h:FracLatent) &gt;= 0 or not(h:extension/h:FracLatent)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="number(h:extension/h:FracLatent) &gt;= 0 or not(h:extension/h:FracLatent)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected extension/FracLatent to be greater than or equal to 0</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="(number(h:extension/h:FracSensible) + number(h:extension/h:FracLatent)) &lt;= 1 or not(h:extension/h:FracSensible) or not(h:extension/h:FracLatent)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(number(h:extension/h:FracSensible) + number(h:extension/h:FracLatent)) &lt;= 1 or not(h:extension/h:FracSensible) or not(h:extension/h:FracLatent)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected sum of extension/FracSensible and extension/FracLatent to be less than or equal to 1</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:extension/h:UsageMultiplier) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:extension/h:UsageMultiplier) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: extension/UsageMultiplier</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:extension/h:WeekdayScheduleFractions) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:extension/h:WeekdayScheduleFractions) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: extension/WeekdayScheduleFractions</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:extension/h:WeekendScheduleFractions) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:extension/h:WeekendScheduleFractions) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: extension/WeekendScheduleFractions</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:extension/h:MonthlyScheduleMultipliers) &lt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:extension/h:MonthlyScheduleMultipliers) &lt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>Expected 0 or 1 element(s) for xpath: extension/MonthlyScheduleMultipliers</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M157"/></axsl:template><axsl:template match="text()" priority="-1" mode="M157"/><axsl:template match="@*|node()" priority="-2" mode="M157"><axsl:apply-templates select="*" mode="M157"/></axsl:template>

<!--PATTERN [AdjacentSurfaces=ConditionedSpace]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[AdjacentSurfaces=ConditionedSpace]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Enclosure[*/*[h:InteriorAdjacentTo=&quot;living space&quot;]]" priority="1000" mode="M158"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Enclosure[*/*[h:InteriorAdjacentTo=&quot;living space&quot;]]"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Roofs/h:Roof[h:InteriorAdjacentTo=&quot;living space&quot;]) + count(h:FrameFloors/h:FrameFloor[h:InteriorAdjacentTo=&quot;living space&quot; and (h:ExteriorAdjacentTo=&quot;attic - vented&quot; or h:ExteriorAdjacentTo=&quot;attic - unvented&quot; or ((h:ExteriorAdjacentTo=&quot;other housing unit&quot; or h:ExteriorAdjacentTo=&quot;other heated space&quot; or h:ExteriorAdjacentTo=&quot;other multifamily buffer space&quot; or h:ExteriorAdjacentTo=&quot;other non-freezing space&quot;) and h:extension/h:OtherSpaceAboveOrBelow=&quot;above&quot;))]) &gt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Roofs/h:Roof[h:InteriorAdjacentTo=&quot;living space&quot;]) + count(h:FrameFloors/h:FrameFloor[h:InteriorAdjacentTo=&quot;living space&quot; and (h:ExteriorAdjacentTo=&quot;attic - vented&quot; or h:ExteriorAdjacentTo=&quot;attic - unvented&quot; or ((h:ExteriorAdjacentTo=&quot;other housing unit&quot; or h:ExteriorAdjacentTo=&quot;other heated space&quot; or h:ExteriorAdjacentTo=&quot;other multifamily buffer space&quot; or h:ExteriorAdjacentTo=&quot;other non-freezing space&quot;) and h:extension/h:OtherSpaceAboveOrBelow=&quot;above&quot;))]) &gt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>There must be at least one ceiling/roof adjacent to conditioned space.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Walls/h:Wall[h:InteriorAdjacentTo=&quot;living space&quot; and h:ExteriorAdjacentTo=&quot;outside&quot;]) &gt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Walls/h:Wall[h:InteriorAdjacentTo=&quot;living space&quot; and h:ExteriorAdjacentTo=&quot;outside&quot;]) &gt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>There must be at least one exterior wall adjacent to conditioned space.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Slabs/h:Slab[h:InteriorAdjacentTo=&quot;living space&quot; or contains(h:InteriorAdjacentTo, &quot;conditioned&quot;)]) + count(h:FrameFloors/h:FrameFloor[h:InteriorAdjacentTo=&quot;living space&quot; and not(h:ExteriorAdjacentTo=&quot;attic - vented&quot; or h:ExteriorAdjacentTo=&quot;attic - unvented&quot; or ((h:ExteriorAdjacentTo=&quot;other housing unit&quot; or h:ExteriorAdjacentTo=&quot;other heated space&quot; or h:ExteriorAdjacentTo=&quot;other multifamily buffer space&quot; or h:ExteriorAdjacentTo=&quot;other non-freezing space&quot;) and h:extension/h:OtherSpaceAboveOrBelow=&quot;above&quot;))]) &gt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Slabs/h:Slab[h:InteriorAdjacentTo=&quot;living space&quot; or contains(h:InteriorAdjacentTo, &quot;conditioned&quot;)]) + count(h:FrameFloors/h:FrameFloor[h:InteriorAdjacentTo=&quot;living space&quot; and not(h:ExteriorAdjacentTo=&quot;attic - vented&quot; or h:ExteriorAdjacentTo=&quot;attic - unvented&quot; or ((h:ExteriorAdjacentTo=&quot;other housing unit&quot; or h:ExteriorAdjacentTo=&quot;other heated space&quot; or h:ExteriorAdjacentTo=&quot;other multifamily buffer space&quot; or h:ExteriorAdjacentTo=&quot;other non-freezing space&quot;) and h:extension/h:OtherSpaceAboveOrBelow=&quot;above&quot;))]) &gt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>There must be at least one floor/slab adjacent to conditioned space.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M158"/></axsl:template><axsl:template match="text()" priority="-1" mode="M158"/><axsl:template match="@*|node()" priority="-2" mode="M158"><axsl:apply-templates select="*" mode="M158"/></axsl:template>

<!--PATTERN [AdjacentSurfaces=ConditionedBasement]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[AdjacentSurfaces=ConditionedBasement]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Enclosure[*/*[h:InteriorAdjacentTo=&quot;basement - conditioned&quot; or h:ExteriorAdjacentTo=&quot;basement - conditioned&quot;]]" priority="1000" mode="M159"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Enclosure[*/*[h:InteriorAdjacentTo=&quot;basement - conditioned&quot; or h:ExteriorAdjacentTo=&quot;basement - conditioned&quot;]]"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:FoundationWalls/h:FoundationWall[h:InteriorAdjacentTo=&quot;basement - conditioned&quot; and h:ExteriorAdjacentTo=&quot;ground&quot;]) &gt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:FoundationWalls/h:FoundationWall[h:InteriorAdjacentTo=&quot;basement - conditioned&quot; and h:ExteriorAdjacentTo=&quot;ground&quot;]) &gt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>There must be at least one exterior foundation wall adjacent to "basement - conditioned".</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Slabs/h:Slab[h:InteriorAdjacentTo=&quot;basement - conditioned&quot;]) &gt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Slabs/h:Slab[h:InteriorAdjacentTo=&quot;basement - conditioned&quot;]) &gt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>There must be at least one slab adjacent to "basement - conditioned".</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M159"/></axsl:template><axsl:template match="text()" priority="-1" mode="M159"/><axsl:template match="@*|node()" priority="-2" mode="M159"><axsl:apply-templates select="*" mode="M159"/></axsl:template>

<!--PATTERN [AdjacentSurfaces=UnconditionedBasement]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[AdjacentSurfaces=UnconditionedBasement]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Enclosure[*/*[h:InteriorAdjacentTo=&quot;basement - unconditioned&quot; or h:ExteriorAdjacentTo=&quot;basement - unconditioned&quot;]]" priority="1000" mode="M160"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Enclosure[*/*[h:InteriorAdjacentTo=&quot;basement - unconditioned&quot; or h:ExteriorAdjacentTo=&quot;basement - unconditioned&quot;]]"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:FrameFloors/h:FrameFloor[h:InteriorAdjacentTo=&quot;living space&quot; and h:ExteriorAdjacentTo=&quot;basement - unconditioned&quot;]) &gt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:FrameFloors/h:FrameFloor[h:InteriorAdjacentTo=&quot;living space&quot; and h:ExteriorAdjacentTo=&quot;basement - unconditioned&quot;]) &gt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>There must be at least one ceiling adjacent to "basement - unconditioned".</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:FoundationWalls/h:FoundationWall[h:InteriorAdjacentTo=&quot;basement - unconditioned&quot; and h:ExteriorAdjacentTo=&quot;ground&quot;]) &gt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:FoundationWalls/h:FoundationWall[h:InteriorAdjacentTo=&quot;basement - unconditioned&quot; and h:ExteriorAdjacentTo=&quot;ground&quot;]) &gt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>There must be at least one exterior foundation wall adjacent to "basement - unconditioned".</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Slabs/h:Slab[h:InteriorAdjacentTo=&quot;basement - unconditioned&quot;]) &gt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Slabs/h:Slab[h:InteriorAdjacentTo=&quot;basement - unconditioned&quot;]) &gt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>There must be at least one slab adjacent to "basement - unconditioned".</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M160"/></axsl:template><axsl:template match="text()" priority="-1" mode="M160"/><axsl:template match="@*|node()" priority="-2" mode="M160"><axsl:apply-templates select="*" mode="M160"/></axsl:template>

<!--PATTERN [AdjacentSurfaces=VentedCrawlspace]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[AdjacentSurfaces=VentedCrawlspace]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Enclosure[*/*[h:InteriorAdjacentTo=&quot;crawlspace - vented&quot; or h:ExteriorAdjacentTo=&quot;crawlspace - vented&quot;]]" priority="1000" mode="M161"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Enclosure[*/*[h:InteriorAdjacentTo=&quot;crawlspace - vented&quot; or h:ExteriorAdjacentTo=&quot;crawlspace - vented&quot;]]"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:FrameFloors/h:FrameFloor[h:InteriorAdjacentTo=&quot;living space&quot; and h:ExteriorAdjacentTo=&quot;crawlspace - vented&quot;]) &gt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:FrameFloors/h:FrameFloor[h:InteriorAdjacentTo=&quot;living space&quot; and h:ExteriorAdjacentTo=&quot;crawlspace - vented&quot;]) &gt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>There must be at least one ceiling adjacent to "crawlspace - vented".</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:FoundationWalls/h:FoundationWall[h:InteriorAdjacentTo=&quot;crawlspace - vented&quot; and h:ExteriorAdjacentTo=&quot;ground&quot;]) &gt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:FoundationWalls/h:FoundationWall[h:InteriorAdjacentTo=&quot;crawlspace - vented&quot; and h:ExteriorAdjacentTo=&quot;ground&quot;]) &gt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>There must be at least one exterior foundation wall adjacent to "crawlspace - vented".</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Slabs/h:Slab[h:InteriorAdjacentTo=&quot;crawlspace - vented&quot;]) &gt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Slabs/h:Slab[h:InteriorAdjacentTo=&quot;crawlspace - vented&quot;]) &gt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>There must be at least one slab adjacent to "crawlspace - vented".</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M161"/></axsl:template><axsl:template match="text()" priority="-1" mode="M161"/><axsl:template match="@*|node()" priority="-2" mode="M161"><axsl:apply-templates select="*" mode="M161"/></axsl:template>

<!--PATTERN [AdjacentSurfaces=UnventedCrawlspace]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[AdjacentSurfaces=UnventedCrawlspace]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Enclosure[*/*[h:InteriorAdjacentTo=&quot;crawlspace - unvented&quot; or h:ExteriorAdjacentTo=&quot;crawlspace - unvented&quot;]]" priority="1000" mode="M162"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Enclosure[*/*[h:InteriorAdjacentTo=&quot;crawlspace - unvented&quot; or h:ExteriorAdjacentTo=&quot;crawlspace - unvented&quot;]]"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:FrameFloors/h:FrameFloor[h:InteriorAdjacentTo=&quot;living space&quot; and h:ExteriorAdjacentTo=&quot;crawlspace - unvented&quot;]) &gt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:FrameFloors/h:FrameFloor[h:InteriorAdjacentTo=&quot;living space&quot; and h:ExteriorAdjacentTo=&quot;crawlspace - unvented&quot;]) &gt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>There must be at least one ceiling adjacent to "crawlspace - unvented".</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:FoundationWalls/h:FoundationWall[h:InteriorAdjacentTo=&quot;crawlspace - unvented&quot; and h:ExteriorAdjacentTo=&quot;ground&quot;]) &gt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:FoundationWalls/h:FoundationWall[h:InteriorAdjacentTo=&quot;crawlspace - unvented&quot; and h:ExteriorAdjacentTo=&quot;ground&quot;]) &gt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>There must be at least one exterior foundation wall adjacent to "crawlspace - unvented".</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Slabs/h:Slab[h:InteriorAdjacentTo=&quot;crawlspace - unvented&quot;]) &gt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Slabs/h:Slab[h:InteriorAdjacentTo=&quot;crawlspace - unvented&quot;]) &gt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>There must be at least one slab adjacent to "crawlspace - unvented".</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M162"/></axsl:template><axsl:template match="text()" priority="-1" mode="M162"/><axsl:template match="@*|node()" priority="-2" mode="M162"><axsl:apply-templates select="*" mode="M162"/></axsl:template>

<!--PATTERN [AdjacentSurfaces=ConditionedCrawlspace]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[AdjacentSurfaces=ConditionedCrawlspace]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Enclosure[*/*[h:InteriorAdjacentTo=&quot;crawlspace - conditioned&quot; or h:ExteriorAdjacentTo=&quot;crawlspace - conditioned&quot;]]" priority="1000" mode="M163"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Enclosure[*/*[h:InteriorAdjacentTo=&quot;crawlspace - conditioned&quot; or h:ExteriorAdjacentTo=&quot;crawlspace - conditioned&quot;]]"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:FoundationWalls/h:FoundationWall[h:InteriorAdjacentTo=&quot;crawlspace - conditioned&quot; and h:ExteriorAdjacentTo=&quot;ground&quot;]) &gt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:FoundationWalls/h:FoundationWall[h:InteriorAdjacentTo=&quot;crawlspace - conditioned&quot; and h:ExteriorAdjacentTo=&quot;ground&quot;]) &gt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>There must be at least one exterior foundation wall adjacent to "crawlspace - conditioned".</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Slabs/h:Slab[h:InteriorAdjacentTo=&quot;crawlspace - conditioned&quot;]) &gt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Slabs/h:Slab[h:InteriorAdjacentTo=&quot;crawlspace - conditioned&quot;]) &gt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>There must be at least one slab adjacent to "crawlspace - conditioned".</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M163"/></axsl:template><axsl:template match="text()" priority="-1" mode="M163"/><axsl:template match="@*|node()" priority="-2" mode="M163"><axsl:apply-templates select="*" mode="M163"/></axsl:template>

<!--PATTERN [AdjacentSurfaces=Garage]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[AdjacentSurfaces=Garage]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Enclosure[*/*[h:InteriorAdjacentTo=&quot;garage&quot; or h:ExteriorAdjacentTo=&quot;garage&quot;]]" priority="1000" mode="M164"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Enclosure[*/*[h:InteriorAdjacentTo=&quot;garage&quot; or h:ExteriorAdjacentTo=&quot;garage&quot;]]"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Roofs/h:Roof[h:InteriorAdjacentTo=&quot;garage&quot;]) + count(h:FrameFloors/h:FrameFloor[h:InteriorAdjacentTo=&quot;garage&quot; or h:ExteriorAdjacentTo=&quot;garage&quot;]) &gt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Roofs/h:Roof[h:InteriorAdjacentTo=&quot;garage&quot;]) + count(h:FrameFloors/h:FrameFloor[h:InteriorAdjacentTo=&quot;garage&quot; or h:ExteriorAdjacentTo=&quot;garage&quot;]) &gt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>There must be at least one roof/ceiling adjacent to "garage".</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Walls/h:Wall[h:InteriorAdjacentTo=&quot;garage&quot; and h:ExteriorAdjacentTo=&quot;outside&quot;]) + count(h:FoundationWalls/h:FoundationWall[h:InteriorAdjacentTo=&quot;garage&quot; and h:ExteriorAdjacentTo=&quot;ground&quot;]) &gt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Walls/h:Wall[h:InteriorAdjacentTo=&quot;garage&quot; and h:ExteriorAdjacentTo=&quot;outside&quot;]) + count(h:FoundationWalls/h:FoundationWall[h:InteriorAdjacentTo=&quot;garage&quot; and h:ExteriorAdjacentTo=&quot;ground&quot;]) &gt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>There must be at least one exterior wall/foundation wall adjacent to "garage".</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Slabs/h:Slab[h:InteriorAdjacentTo=&quot;garage&quot;]) &gt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Slabs/h:Slab[h:InteriorAdjacentTo=&quot;garage&quot;]) &gt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>There must be at least one slab adjacent to "garage".</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M164"/></axsl:template><axsl:template match="text()" priority="-1" mode="M164"/><axsl:template match="@*|node()" priority="-2" mode="M164"><axsl:apply-templates select="*" mode="M164"/></axsl:template>

<!--PATTERN [AdjacentSurfaces=VentedAttic]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[AdjacentSurfaces=VentedAttic]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Enclosure[*/*[h:InteriorAdjacentTo=&quot;attic - vented&quot; or h:ExteriorAdjacentTo=&quot;attic - vented&quot;]]" priority="1000" mode="M165"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Enclosure[*/*[h:InteriorAdjacentTo=&quot;attic - vented&quot; or h:ExteriorAdjacentTo=&quot;attic - vented&quot;]]"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Roofs/h:Roof[h:InteriorAdjacentTo=&quot;attic - vented&quot;]) &gt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Roofs/h:Roof[h:InteriorAdjacentTo=&quot;attic - vented&quot;]) &gt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>There must be at least one roof adjacent to "attic - vented".</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:FrameFloors/h:FrameFloor[h:InteriorAdjacentTo=&quot;attic - vented&quot; or h:ExteriorAdjacentTo=&quot;attic - vented&quot;]) &gt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:FrameFloors/h:FrameFloor[h:InteriorAdjacentTo=&quot;attic - vented&quot; or h:ExteriorAdjacentTo=&quot;attic - vented&quot;]) &gt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>There must be at least one floor adjacent to "attic - vented".</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M165"/></axsl:template><axsl:template match="text()" priority="-1" mode="M165"/><axsl:template match="@*|node()" priority="-2" mode="M165"><axsl:apply-templates select="*" mode="M165"/></axsl:template>

<!--PATTERN [AdjacentSurfaces=UnventedAttic]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[AdjacentSurfaces=UnventedAttic]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails/h:Enclosure[*/*[h:InteriorAdjacentTo=&quot;attic - unvented&quot; or h:ExteriorAdjacentTo=&quot;attic - unvented&quot;]]" priority="1000" mode="M166"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails/h:Enclosure[*/*[h:InteriorAdjacentTo=&quot;attic - unvented&quot; or h:ExteriorAdjacentTo=&quot;attic - unvented&quot;]]"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Roofs/h:Roof[h:InteriorAdjacentTo=&quot;attic - unvented&quot;]) &gt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Roofs/h:Roof[h:InteriorAdjacentTo=&quot;attic - unvented&quot;]) &gt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>There must be at least one roof adjacent to "attic - unvented".</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:FrameFloors/h:FrameFloor[h:InteriorAdjacentTo=&quot;attic - unvented&quot; or h:ExteriorAdjacentTo=&quot;attic - unvented&quot;]) &gt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:FrameFloors/h:FrameFloor[h:InteriorAdjacentTo=&quot;attic - unvented&quot; or h:ExteriorAdjacentTo=&quot;attic - unvented&quot;]) &gt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>There must be at least one floor adjacent to "attic - unvented".</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M166"/></axsl:template><axsl:template match="text()" priority="-1" mode="M166"/><axsl:template match="@*|node()" priority="-2" mode="M166"><axsl:apply-templates select="*" mode="M166"/></axsl:template>

<!--PATTERN [LocationCheck=ConditionedBasement]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[LocationCheck=ConditionedBasement]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails[h:Appliances/*[h:Location=&quot;basement - conditioned&quot;] | h:Systems/*/*[h:Location=&quot;basement - conditioned&quot;] | h:Systems/*/*/*/*/*[h:DuctLocation=&quot;basement - conditioned&quot;]]" priority="1000" mode="M167"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails[h:Appliances/*[h:Location=&quot;basement - conditioned&quot;] | h:Systems/*/*[h:Location=&quot;basement - conditioned&quot;] | h:Systems/*/*/*/*/*[h:DuctLocation=&quot;basement - conditioned&quot;]]"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Enclosure/*/*[h:InteriorAdjacentTo=&quot;basement - conditioned&quot; or h:ExteriorAdjacentTo=&quot;basement - conditioned&quot;]) &gt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Enclosure/*/*[h:InteriorAdjacentTo=&quot;basement - conditioned&quot; or h:ExteriorAdjacentTo=&quot;basement - conditioned&quot;]) &gt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A location is specified as "basement - conditioned" but no surfaces were found adjacent to this space type.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M167"/></axsl:template><axsl:template match="text()" priority="-1" mode="M167"/><axsl:template match="@*|node()" priority="-2" mode="M167"><axsl:apply-templates select="*" mode="M167"/></axsl:template>

<!--PATTERN [LocationCheck=UnconditionedBasement]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[LocationCheck=UnconditionedBasement]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails[h:Appliances/*[h:Location=&quot;basement - unconditioned&quot;] | h:Systems/*/*[h:Location=&quot;basement - unconditioned&quot;] | h:Systems/*/*/*/*/*[h:DuctLocation=&quot;basement - unconditioned&quot;]]" priority="1000" mode="M168"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails[h:Appliances/*[h:Location=&quot;basement - unconditioned&quot;] | h:Systems/*/*[h:Location=&quot;basement - unconditioned&quot;] | h:Systems/*/*/*/*/*[h:DuctLocation=&quot;basement - unconditioned&quot;]]"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Enclosure/*/*[h:InteriorAdjacentTo=&quot;basement - unconditioned&quot; or h:ExteriorAdjacentTo=&quot;basement - unconditioned&quot;]) &gt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Enclosure/*/*[h:InteriorAdjacentTo=&quot;basement - unconditioned&quot; or h:ExteriorAdjacentTo=&quot;basement - unconditioned&quot;]) &gt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A location is specified as "basement - unconditioned" but no surfaces were found adjacent to this space type.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M168"/></axsl:template><axsl:template match="text()" priority="-1" mode="M168"/><axsl:template match="@*|node()" priority="-2" mode="M168"><axsl:apply-templates select="*" mode="M168"/></axsl:template>

<!--PATTERN [LocationCheck=VentedCrawlspace]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[LocationCheck=VentedCrawlspace]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails[h:Appliances/*[h:Location=&quot;crawlspace - vented&quot;] | h:Systems/*/*[h:Location=&quot;crawlspace - vented&quot;] | h:Systems/*/*/*/*/*[h:DuctLocation=&quot;crawlspace - vented&quot;]]" priority="1000" mode="M169"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails[h:Appliances/*[h:Location=&quot;crawlspace - vented&quot;] | h:Systems/*/*[h:Location=&quot;crawlspace - vented&quot;] | h:Systems/*/*/*/*/*[h:DuctLocation=&quot;crawlspace - vented&quot;]]"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Enclosure/*/*[h:InteriorAdjacentTo=&quot;crawlspace - vented&quot; or h:ExteriorAdjacentTo=&quot;crawlspace - vented&quot;]) &gt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Enclosure/*/*[h:InteriorAdjacentTo=&quot;crawlspace - vented&quot; or h:ExteriorAdjacentTo=&quot;crawlspace - vented&quot;]) &gt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A location is specified as "crawlspace - vented" but no surfaces were found adjacent to this space type.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M169"/></axsl:template><axsl:template match="text()" priority="-1" mode="M169"/><axsl:template match="@*|node()" priority="-2" mode="M169"><axsl:apply-templates select="*" mode="M169"/></axsl:template>

<!--PATTERN [LocationCheck=UnventedCrawlspace]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[LocationCheck=UnventedCrawlspace]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails[h:Appliances/*[h:Location=&quot;crawlspace - unvented&quot;] | h:Systems/*/*[h:Location=&quot;crawlspace - unvented&quot;] | h:Systems/*/*/*/*/*[h:DuctLocation=&quot;crawlspace - unvented&quot;]]" priority="1000" mode="M170"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails[h:Appliances/*[h:Location=&quot;crawlspace - unvented&quot;] | h:Systems/*/*[h:Location=&quot;crawlspace - unvented&quot;] | h:Systems/*/*/*/*/*[h:DuctLocation=&quot;crawlspace - unvented&quot;]]"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Enclosure/*/*[h:InteriorAdjacentTo=&quot;crawlspace - unvented&quot; or h:ExteriorAdjacentTo=&quot;crawlspace - unvented&quot;]) &gt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Enclosure/*/*[h:InteriorAdjacentTo=&quot;crawlspace - unvented&quot; or h:ExteriorAdjacentTo=&quot;crawlspace - unvented&quot;]) &gt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A location is specified as "crawlspace - unvented" but no surfaces were found adjacent to this space type.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M170"/></axsl:template><axsl:template match="text()" priority="-1" mode="M170"/><axsl:template match="@*|node()" priority="-2" mode="M170"><axsl:apply-templates select="*" mode="M170"/></axsl:template>

<!--PATTERN [LocationCheck=ConditionedCrawlspace]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[LocationCheck=ConditionedCrawlspace]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails[h:Appliances/*[h:Location=&quot;crawlspace - conditioned&quot;] | h:Systems/*/*[h:Location=&quot;crawlspace - conditioned&quot;] | h:Systems/*/*/*/*/*[h:DuctLocation=&quot;crawlspace - conditioned&quot;]]" priority="1000" mode="M171"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails[h:Appliances/*[h:Location=&quot;crawlspace - conditioned&quot;] | h:Systems/*/*[h:Location=&quot;crawlspace - conditioned&quot;] | h:Systems/*/*/*/*/*[h:DuctLocation=&quot;crawlspace - conditioned&quot;]]"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Enclosure/*/*[h:InteriorAdjacentTo=&quot;crawlspace - conditioned&quot; or h:ExteriorAdjacentTo=&quot;crawlspace - conditioned&quot;]) &gt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Enclosure/*/*[h:InteriorAdjacentTo=&quot;crawlspace - conditioned&quot; or h:ExteriorAdjacentTo=&quot;crawlspace - conditioned&quot;]) &gt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A location is specified as "crawlspace - conditioned" but no surfaces were found adjacent to this space type.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M171"/></axsl:template><axsl:template match="text()" priority="-1" mode="M171"/><axsl:template match="@*|node()" priority="-2" mode="M171"><axsl:apply-templates select="*" mode="M171"/></axsl:template>

<!--PATTERN [LocationCheck=Garage]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[LocationCheck=Garage]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails[h:Appliances/*[h:Location=&quot;garage&quot;] | h:Systems/*/*[h:Location=&quot;garage&quot;] | h:Systems/*/*/*/*/*[h:DuctLocation=&quot;garage&quot;]]" priority="1000" mode="M172"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails[h:Appliances/*[h:Location=&quot;garage&quot;] | h:Systems/*/*[h:Location=&quot;garage&quot;] | h:Systems/*/*/*/*/*[h:DuctLocation=&quot;garage&quot;]]"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Enclosure/*/*[h:InteriorAdjacentTo=&quot;garage&quot; or h:ExteriorAdjacentTo=&quot;garage&quot;]) &gt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Enclosure/*/*[h:InteriorAdjacentTo=&quot;garage&quot; or h:ExteriorAdjacentTo=&quot;garage&quot;]) &gt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A location is specified as "garage" but no surfaces were found adjacent to this space type.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M172"/></axsl:template><axsl:template match="text()" priority="-1" mode="M172"/><axsl:template match="@*|node()" priority="-2" mode="M172"><axsl:apply-templates select="*" mode="M172"/></axsl:template>

<!--PATTERN [LocationCheck=VentedAttic]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[LocationCheck=VentedAttic]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails[h:Appliances/*[h:Location=&quot;attic - vented&quot;] | h:Systems/*/*[h:Location=&quot;attic - vented&quot;] | h:Systems/*/*/*/*/*[h:DuctLocation=&quot;attic - vented&quot;]]" priority="1000" mode="M173"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails[h:Appliances/*[h:Location=&quot;attic - vented&quot;] | h:Systems/*/*[h:Location=&quot;attic - vented&quot;] | h:Systems/*/*/*/*/*[h:DuctLocation=&quot;attic - vented&quot;]]"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Enclosure/*/*[h:InteriorAdjacentTo=&quot;attic - vented&quot; or h:ExteriorAdjacentTo=&quot;attic - vented&quot;]) &gt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Enclosure/*/*[h:InteriorAdjacentTo=&quot;attic - vented&quot; or h:ExteriorAdjacentTo=&quot;attic - vented&quot;]) &gt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A location is specified as "attic - vented" but no surfaces were found adjacent to this space type.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M173"/></axsl:template><axsl:template match="text()" priority="-1" mode="M173"/><axsl:template match="@*|node()" priority="-2" mode="M173"><axsl:apply-templates select="*" mode="M173"/></axsl:template>

<!--PATTERN [LocationCheck=UnventedAttic]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[LocationCheck=UnventedAttic]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails[h:Appliances/*[h:Location=&quot;attic - unvented&quot;] | h:Systems/*/*[h:Location=&quot;attic - unvented&quot;] | h:Systems/*/*/*/*/*[h:DuctLocation=&quot;attic - unvented&quot;]]" priority="1000" mode="M174"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails[h:Appliances/*[h:Location=&quot;attic - unvented&quot;] | h:Systems/*/*[h:Location=&quot;attic - unvented&quot;] | h:Systems/*/*/*/*/*[h:DuctLocation=&quot;attic - unvented&quot;]]"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="count(h:Enclosure/*/*[h:InteriorAdjacentTo=&quot;attic - unvented&quot; or h:ExteriorAdjacentTo=&quot;attic - unvented&quot;]) &gt;= 1"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="count(h:Enclosure/*/*[h:InteriorAdjacentTo=&quot;attic - unvented&quot; or h:ExteriorAdjacentTo=&quot;attic - unvented&quot;]) &gt;= 1"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A location is specified as "attic - unvented" but no surfaces were found adjacent to this space type.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M174"/></axsl:template><axsl:template match="text()" priority="-1" mode="M174"/><axsl:template match="@*|node()" priority="-2" mode="M174"><axsl:apply-templates select="*" mode="M174"/></axsl:template>

<!--PATTERN [BuildingTypeCheck=OtherHousingUnit]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[BuildingTypeCheck=OtherHousingUnit]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails[h:Appliances/*[h:Location=&quot;other housing unit&quot;] | h:Systems/*/*[h:Location=&quot;other housing unit&quot;] | h:Systems/*/*/*/*/*[h:DuctLocation=&quot;other housing unit&quot;] | h:Enclosure[*/*[h:InteriorAdjacentTo=&quot;other housing unit&quot; or h:ExteriorAdjacentTo=&quot;other housing unit&quot;]]]" priority="1000" mode="M175"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails[h:Appliances/*[h:Location=&quot;other housing unit&quot;] | h:Systems/*/*[h:Location=&quot;other housing unit&quot;] | h:Systems/*/*/*/*/*[h:DuctLocation=&quot;other housing unit&quot;] | h:Enclosure[*/*[h:InteriorAdjacentTo=&quot;other housing unit&quot; or h:ExteriorAdjacentTo=&quot;other housing unit&quot;]]]"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="h:BuildingSummary/h:BuildingConstruction/h:ResidentialFacilityType[text()=&quot;single-family attached&quot; or text()=&quot;apartment unit&quot;] or not(h:BuildingSummary/h:BuildingConstruction/h:ResidentialFacilityType)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="h:BuildingSummary/h:BuildingConstruction/h:ResidentialFacilityType[text()=&quot;single-family attached&quot; or text()=&quot;apartment unit&quot;] or not(h:BuildingSummary/h:BuildingConstruction/h:ResidentialFacilityType)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>There are references to "other housing unit" but ResidentialFacilityType is not "single-family attached" or "apartment unit".</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M175"/></axsl:template><axsl:template match="text()" priority="-1" mode="M175"/><axsl:template match="@*|node()" priority="-2" mode="M175"><axsl:apply-templates select="*" mode="M175"/></axsl:template>

<!--PATTERN [BuildingTypeCheck=OtherHeatedSpace]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[BuildingTypeCheck=OtherHeatedSpace]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails[h:Appliances/*[h:Location=&quot;other heated space&quot;] | h:Systems/*/*[h:Location=&quot;other heated space&quot;] | h:Systems/*/*/*/*/*[h:DuctLocation=&quot;other heated space&quot;] | h:Enclosure[*/*[h:InteriorAdjacentTo=&quot;other heated space&quot; or h:ExteriorAdjacentTo=&quot;other heated space&quot;]]]" priority="1000" mode="M176"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails[h:Appliances/*[h:Location=&quot;other heated space&quot;] | h:Systems/*/*[h:Location=&quot;other heated space&quot;] | h:Systems/*/*/*/*/*[h:DuctLocation=&quot;other heated space&quot;] | h:Enclosure[*/*[h:InteriorAdjacentTo=&quot;other heated space&quot; or h:ExteriorAdjacentTo=&quot;other heated space&quot;]]]"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="h:BuildingSummary/h:BuildingConstruction/h:ResidentialFacilityType[text()=&quot;single-family attached&quot; or text()=&quot;apartment unit&quot;] or not(h:BuildingSummary/h:BuildingConstruction/h:ResidentialFacilityType)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="h:BuildingSummary/h:BuildingConstruction/h:ResidentialFacilityType[text()=&quot;single-family attached&quot; or text()=&quot;apartment unit&quot;] or not(h:BuildingSummary/h:BuildingConstruction/h:ResidentialFacilityType)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>There are references to "other heated space" but ResidentialFacilityType is not "single-family attached" or "apartment unit".</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M176"/></axsl:template><axsl:template match="text()" priority="-1" mode="M176"/><axsl:template match="@*|node()" priority="-2" mode="M176"><axsl:apply-templates select="*" mode="M176"/></axsl:template>

<!--PATTERN [BuildingTypeCheck=OtherMultifamilyBufferSpace]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[BuildingTypeCheck=OtherMultifamilyBufferSpace]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails[h:Appliances/*[h:Location=&quot;other multifamily buffer space&quot;] | h:Systems/*/*[h:Location=&quot;other multifamily buffer space&quot;] | h:Systems/*/*/*/*/*[h:DuctLocation=&quot;other multifamily buffer space&quot;] | h:Enclosure[*/*[h:InteriorAdjacentTo=&quot;other multifamily buffer space&quot; or h:ExteriorAdjacentTo=&quot;other multifamily buffer space&quot;]]]" priority="1000" mode="M177"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails[h:Appliances/*[h:Location=&quot;other multifamily buffer space&quot;] | h:Systems/*/*[h:Location=&quot;other multifamily buffer space&quot;] | h:Systems/*/*/*/*/*[h:DuctLocation=&quot;other multifamily buffer space&quot;] | h:Enclosure[*/*[h:InteriorAdjacentTo=&quot;other multifamily buffer space&quot; or h:ExteriorAdjacentTo=&quot;other multifamily buffer space&quot;]]]"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="h:BuildingSummary/h:BuildingConstruction/h:ResidentialFacilityType[text()=&quot;single-family attached&quot; or text()=&quot;apartment unit&quot;] or not(h:BuildingSummary/h:BuildingConstruction/h:ResidentialFacilityType)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="h:BuildingSummary/h:BuildingConstruction/h:ResidentialFacilityType[text()=&quot;single-family attached&quot; or text()=&quot;apartment unit&quot;] or not(h:BuildingSummary/h:BuildingConstruction/h:ResidentialFacilityType)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>There are references to "other multifamily buffer space" but ResidentialFacilityType is not "single-family attached" or "apartment unit".</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M177"/></axsl:template><axsl:template match="text()" priority="-1" mode="M177"/><axsl:template match="@*|node()" priority="-2" mode="M177"><axsl:apply-templates select="*" mode="M177"/></axsl:template>

<!--PATTERN [BuildingTypeCheck=OtherNonFreezingSpace]-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">[BuildingTypeCheck=OtherNonFreezingSpace]</svrl:text>

	<!--RULE -->
<axsl:template match="/h:HPXML/h:Building/h:BuildingDetails[h:Appliances/*[h:Location=&quot;other non-freezing space&quot;] | h:Systems/*/*[h:Location=&quot;other non-freezing space&quot;] | h:Systems/*/*/*/*/*[h:DuctLocation=&quot;other non-freezing space&quot;] | h:Enclosure[*/*[h:InteriorAdjacentTo=&quot;other non-freezing space&quot; or h:ExteriorAdjacentTo=&quot;other non-freezing space&quot;]]]" priority="1000" mode="M178"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="/h:HPXML/h:Building/h:BuildingDetails[h:Appliances/*[h:Location=&quot;other non-freezing space&quot;] | h:Systems/*/*[h:Location=&quot;other non-freezing space&quot;] | h:Systems/*/*/*/*/*[h:DuctLocation=&quot;other non-freezing space&quot;] | h:Enclosure[*/*[h:InteriorAdjacentTo=&quot;other non-freezing space&quot; or h:ExteriorAdjacentTo=&quot;other non-freezing space&quot;]]]"/>

		<!--ASSERT ERROR-->
<axsl:choose><axsl:when test="h:BuildingSummary/h:BuildingConstruction/h:ResidentialFacilityType[text()=&quot;single-family attached&quot; or text()=&quot;apartment unit&quot;] or not(h:BuildingSummary/h:BuildingConstruction/h:ResidentialFacilityType)"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="h:BuildingSummary/h:BuildingConstruction/h:ResidentialFacilityType[text()=&quot;single-family attached&quot; or text()=&quot;apartment unit&quot;] or not(h:BuildingSummary/h:BuildingConstruction/h:ResidentialFacilityType)"><axsl:attribute name="role">ERROR</axsl:attribute><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>There are references to "other non-freezing space" but ResidentialFacilityType is not "single-family attached" or "apartment unit".</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="*" mode="M178"/></axsl:template><axsl:template match="text()" priority="-1" mode="M178"/><axsl:template match="@*|node()" priority="-2" mode="M178"><axsl:apply-templates select="*" mode="M178"/></axsl:template></axsl:stylesheet>
